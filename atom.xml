<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lealwz&#39;Blog</title>
  
  
  <link href="https://laelwz.github.io/atom.xml" rel="self"/>
  
  <link href="https://laelwz.github.io/"/>
  <updated>2023-03-03T09:23:06.131Z</updated>
  <id>https://laelwz.github.io/</id>
  
  <author>
    <name>Laelwz</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>全面拥抱二月</title>
    <link href="https://laelwz.github.io/posts/175/"/>
    <id>https://laelwz.github.io/posts/175/</id>
    <published>2023-03-02T01:23:50.000Z</published>
    <updated>2023-03-03T09:23:06.131Z</updated>
    
    <content type="html"><![CDATA[<p>二月相当努力，至少与这几个月的放荡相比是这样的。</p><span id="more"></span><h2 id="关于笔记"><a href="#关于笔记" class="headerlink" title="关于笔记"></a>关于笔记</h2><p>最重要的是有一直在写日记，而且有序的记录了自己的学习曲线。在之前是很难去想象的。<br>对于笔记这个东西我曾走过很多弯路，当然现在也不一定是最好的最对的，但是相对来说还是有进步。</p><p>最开始也是一开始在电脑上记录，后来逐渐形成月制周制，倾向于写成一篇博客然后发布。说实话，将日记这种较为私密的记录生活的文字放载到公共空间，实在是不妥，<strong>一是隐私问题，二是有一种功利的心理——似是专门写给大家看的，而不是给自己看</strong>。</p><p>于是花了很长时间去思考日记的意义，然后选择了传统的手账日记（其实很大受到阿弥的影响）。<br>虽说是手账，但那些<strong>复杂的、花里胡哨的装饰我是不屑和懒得去折腾的</strong>，于是还是单纯的只有文字（现在就算电子笔记也是如此，我觉得这样非常纯粹和易于管理）。那段日子发生的事相当记忆深刻，也许是因为特殊的人和事情，也许是因为用新买的钢笔和手账簿记录了。</p><p>很显然的，后来我又放弃了，原因很难想到，至少我一开始没想到：到学校寝室里，拿笔记时常容易被室友看到，就算看到里面一点点我也非常不舒服，但是我又很难在一天的结尾到外面去写日记。<br>或许在床上写也是个不错的选择，但是非常不舒服，严重抑制了我写日记的热情。</p><p>于是又开始思考笔记、日记的记录方法，有什么又方便又舒适，又不会被窥探到的方法呢？</p><p>最后选择了 Obsidian 本地使用 markdown 语言记录，解决了一些痛点，暂时用到现在。</p><p>对于被室友看到的解决方案：Obsidian 调整文字大小很方便，按住 Ctrl+滚轮 就可以调整，于是当我写私密文字的时候就可以将文字调整成最小，站在旁边的人是绝对看不清的，就算我坐着也有些吃力，但不至于看不了。</p><p>论方便程度，我是觉得还不错的，本地备份 + Onedrive + Obsidian 插件 实现全端备份，点一下就可以同步，电脑编辑完，手机上也可以接力，非常舒适。</p><p>Obsidian 的一些辅助插件也能提升码字的舒适度，包括但不限于模板、自动字符排版和双链等等。</p><p>除却日记，关于更多的笔记——课程的、自学的、读后感等等，也使用 Obsidian All in 了，打标签 + 文件夹管理的模式非常方便。</p><h2 id="学了什么"><a href="#学了什么" class="headerlink" title="学了什么"></a>学了什么</h2><ol><li>java 基础复习了一半了，说的好听叫复习，其实之前学 java 时的一些细节问题根本没仔细解决，现在重学一遍，收获良多。</li><li>四级核心单词又过了一遍，这次相当认真，平均每天花了两个小时左右。</li><li>尤克里里方面，学会了《突然好想你》，但还有些地方不连贯，《未闻花名》还在练习，不过相当难。</li><li>日语学了基本五十音。</li><li>git 基础也重学了一下。</li></ol><h2 id="润的想法"><a href="#润的想法" class="headerlink" title="润的想法"></a>润的想法</h2><p>说实话可能是最近负面新闻接收太多了——也不知道是本身生活就是负面居多，还是刻意接收到的多了——最近这三年发生的大大小小的魔幻事件让我迷茫。</p><p>我不想谈论政治经济方面的问题，但是中国的生活像是蜘蛛网一样张开，并堆叠，而且亲情这个最大的网会把人罩的死死的。所以润是非常难的，我暂且不做考虑，但是会关注。</p><h2 id="身体吃不消"><a href="#身体吃不消" class="headerlink" title="身体吃不消"></a>身体吃不消</h2><p>这个月熬夜有点狠了，一月份刚刚得过新冠，那段软弱体虚的时光让我难受至极，于是报复性的在二月熬了好多个夜，吃了不少垃圾食品。<br>身体当然吃不消，有时候会胸闷，头晕，精力不足，还有日渐肥胖，哎，少熬夜，多锻炼，多睡觉，身体是革命的本钱！</p><h2 id="学校的垃圾课程"><a href="#学校的垃圾课程" class="headerlink" title="学校的垃圾课程"></a>学校的垃圾课程</h2><p>想起来就烦，这学期居然安排了关于 ERP 企业资源管理系统的课，我不明白，我一个要做程序员的为什么要学这个。为了奖学金还得认真听（背）一下，应付那弱智的考试。</p><p>还有一些不作为的老师，教授一些过时的、甚至连他们自己都根本不深入明白的课程，我不好评价，只感觉浪费时间。</p><p>以及拉跨的机器改卷，不能识别多个正确答案为什么要机改，计算机领域哪有标准答案呢。</p><h2 id="对比赛的思考"><a href="#对比赛的思考" class="headerlink" title="对比赛的思考"></a>对比赛的思考</h2><p>上一年参与数模比赛拿到了还算不错的成绩，老师鼓励我继续冲，拿国奖，但是我已经开摆了，因为真的很累，不是比赛有多难，而是各种麻烦事的叠加让我厌倦。</p><p>比赛不是个人赛，而是团队赛，我虽然没什么本事，但还是要鼓起勇气当作队伍里的前锋、队长那样的角色，说实话，很累，我不喜欢指使他人，给别人分配任务，因为我怕选择了错误的方向。<br>应该都有一种<strong>指令惰性</strong>吧，喜欢接收指令去干活，而不是发布指令。我不知道为什么会养成这种习惯，应该是不太好的习惯。也许和我从小乐于接受父母老师安排有关吧。</p><p>不过好在，花的时间虽然不算多也不算少，但有<strong>奖金</strong>，也不用去做麻木的体力劳动，稍微动点脑子就可以拿到钱，岂不美哉，所以这也是我参加的目的之一。而其他方面，学到了一些关于 matlab 和 latex 的知识，也算有用。</p><p>总的来说参加比赛还是不错的，能学到东西，也能挣钱，累不累看个人。但是那些要请正课的假去集训的比赛，我不好说，如果含金量不大或者拿不到大奖，还容易被挂科或者只能及格而拿不到奖学金，我觉得是有点亏的。</p><h2 id="艺术方面"><a href="#艺术方面" class="headerlink" title="艺术方面"></a>艺术方面</h2><p>这个月书和电影看得少了，虽然之前也不多。主要原因就是学习占用时间不少，而且在学校里琐事也多（比如上垃圾水课，嘈杂环境看书是一种折磨），于是几本在读书目基本没推进，也没看电影。</p><p>在有空的时候一般去图书馆了，在寝室里较为吵闹，不能学习，当然也无法欣赏一些作品。<strong>嘈杂是对艺术的扼杀</strong>。我想之后可以抠点时间出来在图书馆看电影，不过大家都在卷，而我在看电影，总觉得有些违和，不过我喜欢特立独行。我觉得每个年轻人都应该特立独行。</p><h2 id="健身理念"><a href="#健身理念" class="headerlink" title="健身理念"></a>健身理念</h2><p>这个月没有运动，很全面的没有运动，大概是感染新冠给了自己一个借口：我好像很虚弱。但实际上我痊愈后天天熬夜吃外卖，对身体的伤害更大了。</p><p>近乎两个月的不运动，我有了全新的思考，因为运动是一件很消耗精力的事情，所以这件事情的确是有门槛的，而且不低。所以兴趣就是最最重要的一个前提，这可以使我不顾一些问题去向前冲。</p><p>所以之后的锻炼计划可能偏向于兴趣而非像以前一样为了肌肉、为了外表，这有点累了，生活本来就很累了，何苦自己呢。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;二月相当努力，至少与这几个月的放荡相比是这样的。&lt;/p&gt;</summary>
    
    
    
    <category term="生活" scheme="https://laelwz.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="月记" scheme="https://laelwz.github.io/tags/%E6%9C%88%E8%AE%B0/"/>
    
    <category term="思考" scheme="https://laelwz.github.io/tags/%E6%80%9D%E8%80%83/"/>
    
    <category term="健身" scheme="https://laelwz.github.io/tags/%E5%81%A5%E8%BA%AB/"/>
    
    <category term="笔记" scheme="https://laelwz.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="复盘" scheme="https://laelwz.github.io/tags/%E5%A4%8D%E7%9B%98/"/>
    
  </entry>
  
  <entry>
    <title>《上帝的笔误》疑点分析</title>
    <link href="https://laelwz.github.io/posts/40556/"/>
    <id>https://laelwz.github.io/posts/40556/</id>
    <published>2023-01-13T13:23:50.000Z</published>
    <updated>2023-01-13T13:32:16.583Z</updated>
    
    <content type="html"><![CDATA[<p>看这部电影还是蛮曲折的，两天断断续续的才看完，主要是前半段确实铺垫较多，节奏较慢，后半部分着实精彩，现在来回顾一些关于影片的疑点和思考。</p><span id="more"></span><h2 id="语言带来的"><a href="#语言带来的" class="headerlink" title="语言带来的"></a>语言带来的</h2><p>大概是语言的问题，我虽看过《看不见的客人》，也看过许多欧洲那些非英语的片子，但是还是打心底对这些小语种感到迷茫。这种感觉就像以前从来不看日本动漫，便对日语有一种奇怪的排斥感，随着接触越来越多，就逐渐适应了。</p><p>如同以前第一次看北欧的挪威的片，第一次听到挪威语，叽里呱啦的，此时观看奥里奥尔·保罗这部西班牙语的电影，也是那种好久不见的感受。</p><h2 id="题材"><a href="#题材" class="headerlink" title="题材"></a>题材</h2><p>反转反转再反转，对于经常看悬疑片的我来说已经见怪不怪了（bushi）。不能说精神病院这种题材烂大街，只是在观看之前，我就能够意识到这是一部对精神病有所刻画以及在剧情中会以此为主线基调的电影，所以有了一些准备，后面的反转只能说是意料之中。</p><p>不过对于电影的镜头语言我非常喜欢，开场女主坐在车里看向镜头外的观众、被治疗后产生的与前医生 Donadio 的对话的幻象等等场面，都非常令人惊艳。有一种石子落入水滴荡起波澜的感觉，好像随着女主的侦探视角，一步步剥开“事实”，有种《夏日重现》中慎平俯瞰的那味儿。</p><h2 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h2><p>对于女主是否是精神病的问题，我想通过开头私人医生 Donadio 写的信以及结尾私人医生 Donadio 直接跳脸对峙时女主的微表情，不难看出这是高智商精神病女主在最后计划败露的不甘与害怕。</p><p>所谓的“事实”，是女主用各个谎言的连环自证，得出的一个她能离开精神病院的结论。</p><p>关于故事我不想再赘述回顾，讲一些别人可能没注意到，我觉得可以证明女主有问题的疑点：</p><ol><li>在纵火那段剧情中，女主作案前寻求精神病人们的帮助，所有人都点头同意了，虽然说他们是精神病人，思维也许和正常人有所偏差，但对于没怎么相处的女主，却都表现出一副乐意帮助的态度，我觉得这可能是女主曾经在这所精神病院呆过的原因。</li><li><p><strong>电影故事分为三条事件线，第一条是女主调查杀人事件，第二条是侏儒死亡事件，第三条是女主制造动乱事件。</strong></p><p>侏儒死亡事件感觉和主线无关，但可以剧情中可以看到女主自然的接受了作为双胞胎母亲，以及在教堂时双胞胎之一和女主的对视，不难让观众对于他们之间的关系有一些想法。有没有一种可能，女主在之前的住院经历中生下了双胞胎呢。</p></li><li><p>影片的第一条事件与第三条事件重复度极高，如果导演有误导观众的意思，也就是第一事件真实发生，而且确实是自杀，但叙述片段使用的是女主引起的第三条事件，那么我觉得很没意思，纯纯把观众当傻子。</p><p>引用契诃夫的名言：“请将一切与故事无关的事物都从故事中移除。如果你说第一幕中有把枪挂在墙上，那么在第二幕或者第三幕中这把枪必须发射，不然就没必要挂在那。”</p><p>所以以我而言，如果第一条事件也是第三条事件，那么作为一个高智商精神病人，她入院的谎言就是故事的基础，在这个谎言的基础上，她想象出了自己如何能够走出精神病院的大致方案，也就是观众们看到的第一条女主作为侦探调查死亡的事件（这时是女主的想象，也是后来的现实），接着一环扣一环，女主逐步实现了计划。借用网友的一句话：女主在循环自己。</p><p>值得注意的是，除了开场是以女主视角来推进的以外，后来的故事基本都是第三视角看待女主，并非女主内心视角，因此对于观众所看到的，也是女主的“谎言”。</p></li><li><p>片尾女主自证时说老公没有留下任何蛛丝马迹，私人医生 Donadio 在苏黎世失踪了，她如何知道的？且她说私人医生失踪时，镜头切换到了院长警惕的神态，可以知道院长在思考怎样合适地揭穿她了，也就是说从这个时候起院长投不投票已经无所谓，他反正也“被迫”辞职了，事不关己，打那些医生的脸就行。<br>后续就是私人医生 Donadio 马上回来说她在搞什么飞机。（这好像太明显了）</p></li><li>女主为了破案，强行伪装成偏执狂进精神病院这件事情本身也太偏执狂了。很符合院长说的优越感和自负。</li></ol><p>至于说那几个帮助女主的医生可能与女主做了交易，或者那个女医生想顶替院长，我觉得有可能但概率不大。</p><p>所以总的来说，女主有精神问题，也确实是侦探，私人医生 Donadio 真实存在，女主给丈夫下毒也真实发生，丈夫恶意卷款送女主入院也真实发生，院长收钱了但是走的公账，他是真想治女主的病。</p><h2 id="评价"><a href="#评价" class="headerlink" title="评价"></a>评价</h2><p>我觉得这部片很好，但是坏在哪里呢，坏就坏在故意引导观众去思考的部分过多了，会导致各种逻辑都无法自洽，观点对冲过多了，有一种用力过猛的不适感。</p><p>个人主观评价：7.5 分。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;看这部电影还是蛮曲折的，两天断断续续的才看完，主要是前半段确实铺垫较多，节奏较慢，后半部分着实精彩，现在来回顾一些关于影片的疑点和思考。&lt;/p&gt;</summary>
    
    
    
    <category term="生活" scheme="https://laelwz.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="上帝的笔误" scheme="https://laelwz.github.io/tags/%E4%B8%8A%E5%B8%9D%E7%9A%84%E7%AC%94%E8%AF%AF/"/>
    
    <category term="电影" scheme="https://laelwz.github.io/tags/%E7%94%B5%E5%BD%B1/"/>
    
    <category term="悬疑" scheme="https://laelwz.github.io/tags/%E6%82%AC%E7%96%91/"/>
    
    <category term="剧情" scheme="https://laelwz.github.io/tags/%E5%89%A7%E6%83%85/"/>
    
  </entry>
  
  <entry>
    <title>关于2022</title>
    <link href="https://laelwz.github.io/posts/14413/"/>
    <id>https://laelwz.github.io/posts/14413/</id>
    <published>2022-12-28T11:05:53.000Z</published>
    <updated>2023-01-01T16:54:20.638Z</updated>
    
    <content type="html"><![CDATA[<p>混沌和迷茫的2022。<br>这是一篇年终总结，关乎生活，不仅仅是学业上的一些东西。</p><span id="more"></span><h2 id="死胡同"><a href="#死胡同" class="headerlink" title="死胡同"></a>死胡同</h2><p>起初重建博客的初衷是记录自己的关于编程方面的学习问题，但我走进了死胡同，既没有生活、也没有学习。单纯的笔记，可以通过本地化保存实现，并且更方便，所谓的博客，不该桎梏于所谓笔记，我发现，学习与生活绝对是无法相割裂开来的两个东西。</p><p>你说，当你遇到一个学习上的问题，你会如何去解决呢？解决方法，解决路径，这些种种程式化的，我本身而言是很讨厌的。尽管想成为一个有着清晰思路去妥善完成各种工作的人，但也绝非是这种。人从来是感性化的动物，我们不该剔除人性。于是我想再接下来的日子里，这个博客的主旋律也应该是生活。继续将生活好好记录，不管是通过文字还是各项媒介。</p><h2 id="破碎的2022"><a href="#破碎的2022" class="headerlink" title="破碎的2022"></a>破碎的2022</h2><p>任谁而言，2022是满足和充实的呢。</p><p>已经记忆不起上半年发生的事情，好像魔幻的魔术橡皮擦在不经意间随手涂抹，我人生仅剩的百分之一时光已经消逝。</p><p>今年度过了人生中最为炎热的盛夏，炎热得仿佛不真实，脑子里只剩下空调外机和电风扇的嗡嗡噪音。酷热中重新拾起了守望先锋，遇到了一群网友，能够让我怀念起2016的那个夏天，但现在它要结束了，同样虚幻的不真实——2016年的我从未想象到守望先锋会迎来关闭国服的结局。</p><p>暑假曾回到母校看老师，没什么好讲的，老师很好，学校很好，我很不好。</p><p>在暑假结束，回学校的高铁上，我拿着平板赶着暑期社会实践的任务报告。接下来回到学校便是三天的数学建模比赛，通宵了一天，一天也是睡在教室，所幸取得一些名次，要不然会愤恨死自己，这么折腾自己的身体，如若没有什么结果，那对生理和心理都是莫大的伤害。</p><p>仍然闷热的十月份，来杭州这么久了，第一次去看了钱塘江。骑着自行车滑过拥挤的街道，细碎的晚风一边切割着银色的波浪，一边轻抚我燥热的胸膛。每隔几十米能见到在路上唱歌的人、跳舞的人和野餐的人，人各有各的幸福。左方能够望见钱塘江大桥，斑驳的车尾灯呼啸，在远处的我只见一丝丝红黄闪现而过。桥只管巨大的伫立在那里，无论如何。而我万不能伫立在原地，我得奔跑。</p><p>随同学去杭州各地景点摄影，正是在摄影的路上，我发现自己并不是喜欢摄影，只是喜欢好看的风景，摄影对于我而言，仅是保存那些画面的一个步骤。任意学问都有它自己的独特之处，我不揣摩我不明白也并不想深入的事物。</p><p>同样是十月份，在寝室的饮水机旁发现一颗蘑菇，顶好的生长着，尽管它第二天枯萎死去了。一定是饮水机漏水有点严重，12月份时饮水机也换新了，寝室没有人愿意搬它下楼，是我顺手搬下去了，再把新的抬上来。</p><p>蔡赠送了我一本2023的豆瓣日历，我那时想日子还远着呢，2022相当漫长啊，没想到要开始使用了。日历是个好东西，它能提醒我日子如水，淌着淌着就过去了。</p><p>如愿拿到了驾照，过程相当曲折，科目三是除高考外人生最折磨却不是最痛苦的实践经历，一无是处是书生，书本毫无作用。越长大越发现，所谓想回到小时候不是因为小时候有多舒服，有多快活，而是因为光是可以沉浸在书本当中，而不用去切身处理生活的琐碎，便已经是莫大的幸福了。</p><p>十一月份仍旧穿着短袖，酷热难耐，这回终于去了一趟动物园。说来惭愧，我从未去过动物园，唯一一次有机会，是在小学的某一次春游当中，而遗憾的是，那会儿老师好像说，因为成绩还是某些原因，某些同学不能去，很不巧，我就是那些同学之一，于是我在一个大家都去动物园的日子里放假了，但我没有伙伴可以一起玩耍，因为大家都在动物园。</p><p>熊、秃鹫、白虎、海狮等等动物，我只在视频中见过，如今见到了，相当欣喜。不过美中不足的是，动物们普遍无精打采，甚至带病上岗，动物也在疫情中累了么。最烦的是一个地方的许多大号鹦鹉，狂叫，震得耳膜生疼，没有看它们的欲望。最可惜的是，逛了一天也没找着熊猫馆，最后发现，原来在出口上写着熊猫馆维护了。袋鼠很可爱，于是狠狠的拍照，没有长焦镜头，也用数码变焦狠狠的放大来给它的肌肉一点特写。</p><p>突然的，十一月底下雪了，大片大片的雪花在身上落下，没见过几次大雪的南方孩子眼珠子已经离不开那些亮晶晶的雪花了。我后悔没有跟朋友们一起去堆雪人，现在来看，肯定是相当快活的回忆。</p><p>同样在十一月底，输掉了排球比赛，很懊恼，没有发挥应有的水平，虽然水平也不高，不过还是懊恼。接下来的日子，一定要狠狠的锻炼，狠狠的赢上那么几场比赛，狠狠的拍照庆祝，狠狠的在团建上喝上那么几杯。</p><p>12.7，《放牛班的春天》重映了，于是赶着去重温了一遍老师的温柔，坐在只有四个人的影院里，我觉得音乐是有灵魂的。</p><p>接下来就回家了，早早的回到了温州，然后在一次朋友聚会中阳了，卧病一周，刚好赶上了这年底。</p><p>恰好能从一年初始而重新开始计划和奋斗，这是非常好的开始。我喜欢开始这个词，能开始也是莫大的幸福。</p><h2 id="该死的自律"><a href="#该死的自律" class="headerlink" title="该死的自律"></a>该死的自律</h2><p>这年中，书没读几本，单词没背几个，身体也没好好的去锻炼，总而言之，是缺乏自律的一年。吃的是非常不健康但好吃的东西，作息是非常不健康但很爽的生物钟，学习方面也是三天打鱼两天晒网。当下过得非常愉快，但给我兜底的是我的人生。有人说每天百分之一的进步，日积月累会有很好的回报，而我每天百分之一的退步，那积累的错误是何等量级呢。</p><p>今年的自律，理应从早睡早起开始。</p><h2 id="关于2023"><a href="#关于2023" class="headerlink" title="关于2023"></a>关于2023</h2><p>因为还年轻，一切都是变数，不是30岁的而立，不是40岁的中年，生活中心已经压在了一处，身子都无法挪移一点，重大的变动的后果是难以接受的，而年轻的我可以开始，在任何地方开始。</p><p>希望2023有更强壮的身体，更平和的心态，更聪明的大脑。</p><h2 id="结"><a href="#结" class="headerlink" title="结"></a>结</h2><p>每当动笔，就有一种没什么好写的感觉袭来，像傍晚飕飕的冷风，提醒你将步入阴寒的黑暗了。这种感受蔓延到任何事物，无论做什么都有一种不够及时的满足感。但不能止步于此，继续坚持着续写人生的长文吧。</p><p>各位新年吉祥。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;混沌和迷茫的2022。&lt;br&gt;这是一篇年终总结，关乎生活，不仅仅是学业上的一些东西。&lt;/p&gt;</summary>
    
    
    
    <category term="生活" scheme="https://laelwz.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="年终总结" scheme="https://laelwz.github.io/tags/%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    
    <category term="计划" scheme="https://laelwz.github.io/tags/%E8%AE%A1%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>Java基础</title>
    <link href="https://laelwz.github.io/posts/45350/"/>
    <id>https://laelwz.github.io/posts/45350/</id>
    <published>2022-10-18T08:03:59.000Z</published>
    <updated>2023-03-03T09:52:48.128Z</updated>
    
    <content type="html"><![CDATA[<p>关于Java基础的杂记</p><span id="more"></span><h2 id="第一章-序"><a href="#第一章-序" class="headerlink" title="第一章 序"></a>第一章 序</h2><p>万丈高楼平地起。</p><h2 id="第二章-概述"><a href="#第二章-概述" class="headerlink" title="第二章 概述"></a>第二章 概述</h2><h3 id="java-转义字符"><a href="#java-转义字符" class="headerlink" title="java 转义字符"></a>java 转义字符</h3><p>\\t ：一个制表位，实现对齐功能<br>\\n ：换行符<br>\\\ ：一个真实的斜杠<br>\\” ： 一个真实的双引号<br>\\’ ： 一个真实的单引号<br>\\r ：一个回车，没有换行，将光标置于最前，逐个输出\r 后的字符</p><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><ul><li><p>单行注释</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//需要注释的语句</span></span><br></pre></td></tr></table></figure></li><li><p>多行注释</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">这里是多行注释</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></li><li><p>Javadoc 注释</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> lael</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure></li><li><p>细节</p><ul><li>注释语句不会执行。</li></ul></li></ul><h3 id="代码规范"><a href="#代码规范" class="headerlink" title="代码规范"></a>代码规范</h3><ol><li>类、方法的注释，要以 javadoc 的方式来写。</li><li>非 javadoc 注释着重告诉维护者如何修改、为什么这样写，以及注意事项。</li><li>运算符和 = 两边加一个空格。</li><li>实际工作使用 UTF-8 编码格式。</li><li>行宽不超过 80 字符。</li><li>代码编写使用行尾风格或次行风格。</li><li>一段代码一个模块，尽量只写一个功能，避免混乱。</li></ol><h3 id="JDK、JRE、JVM-之间关系"><a href="#JDK、JRE、JVM-之间关系" class="headerlink" title="JDK、JRE、JVM 之间关系"></a>JDK、JRE、JVM 之间关系</h3><ol><li>JDK = JRE + JAVA 开发工具</li><li>JRE = JVM + 核心类库</li></ol><h2 id="第三章-变量"><a href="#第三章-变量" class="headerlink" title="第三章 变量"></a>第三章 变量</h2><h3 id="变量注意事项"><a href="#变量注意事项" class="headerlink" title="变量注意事项"></a>变量注意事项</h3><ol><li>int 4 个字节、double 8 个字节，每个类型占用空间不同。</li><li>变量必须先声明，后使用。</li><li>变量在同一个作用域中不可重名。</li><li>变量 = 变量名 + 值 + 数据类型 （三要素）。</li></ol><h3 id="号"><a href="#号" class="headerlink" title="+ 号"></a>+ 号</h3><ul><li>当 + 左右两边有一方为字符串，则做拼接运算。</li><li>两边均为数值类型，则做加法运算。</li><li>运算顺序为从左到右。</li></ul><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><ul><li>数值型<ul><li>整数：byte[1]、short[2]、int[4]、long[8]</li><li>浮点数（小数）：float[4]、double[8]</li></ul></li><li>字符型<ul><li>char[2]：存放单个字符，如 ‘a’</li></ul></li><li>布尔型<ul><li>boolean[1]：存放 true/false</li></ul></li></ul><h3 id="整型使用细节"><a href="#整型使用细节" class="headerlink" title="整型使用细节"></a>整型使用细节</h3><ol><li><p>java 整型常量默认为 int 类型，声明 long 型常量须后加 ‘l’ 或 ‘L’</p></li><li><ul><li><p>bit：计算机中最小存储单位</p></li><li><p>byte：计算机中基本存储单位</p></li><li>1 byte = 8 bit</li></ul></li></ol><h3 id="浮点型使用细节"><a href="#浮点型使用细节" class="headerlink" title="浮点型使用细节"></a>浮点型使用细节</h3><ol><li>默认为 double 类型，声明 float 型单精度常量须后加 ‘f’ 或 ‘F’</li><li>表示形式：<ul><li>十进制</li><li>科学计数法，如：5.12e10 = 5.12 x 10<sup>10</sup></li></ul></li><li>通常情况下应该使用 double，因为它比 float 更精确，而 float 会损失一些小数位</li></ol><h3 id="字符型使用细节"><a href="#字符型使用细节" class="headerlink" title="字符型使用细节"></a>字符型使用细节</h3><ol><li>字符常量用单引号括起单个字符</li><li>允许使用转义字符</li><li>char 的本质是一个整数，所以可以直接给 char 赋值整数，输出时是对应 unicode 对应字符</li><li>char 类型可以进行运算</li></ol><h3 id="基本数据类型的转换"><a href="#基本数据类型的转换" class="headerlink" title="基本数据类型的转换"></a>基本数据类型的转换</h3><ul><li><p>精度小的类型自动转换为精度大的数据类型</p><p>char int long float double</p><p>byte short int long float double</p></li><li><p>有多种类型的数据混合运算时，系统首先自动将所有数据转换成容量最大的数据类型，再进行计算</p></li><li><p>精度大的赋值给精度小的数据类型就会报错</p></li><li><p>(byte, short) 和 char 之间不会相互自动转换</p></li><li><p>byte, short, char 三者之间可以计算，在计算时首先转换为 int 类型</p></li><li><p>boolean 不参与类型自动转换</p></li></ul><h3 id="强制转换细节"><a href="#强制转换细节" class="headerlink" title="强制转换细节"></a>强制转换细节</h3><ol><li>需要数据从大到小时，就需要使用强制转换</li></ol><h3 id="字符串转换基本类型"><a href="#字符串转换基本类型" class="headerlink" title="字符串转换基本类型"></a>字符串转换基本类型</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">num1</span> <span class="operator">=</span> Integer.parseInt(s5);</span><br><span class="line"><span class="type">double</span> <span class="variable">num2</span> <span class="operator">=</span> Double.parseDouble(s5);</span><br><span class="line"><span class="type">float</span> <span class="variable">num3</span> <span class="operator">=</span> Float.parseFloat(s5);</span><br><span class="line"><span class="type">long</span> <span class="variable">num4</span> <span class="operator">=</span> Long.parseLong(s5);</span><br><span class="line"><span class="type">byte</span> <span class="variable">num5</span> <span class="operator">=</span> Byte.parseByte(s5);</span><br><span class="line"><span class="type">boolean</span> <span class="variable">b</span> <span class="operator">=</span> Boolean.parseBoolean(<span class="string">&quot;true&quot;</span>);</span><br><span class="line"><span class="type">short</span> <span class="variable">num6</span>  <span class="operator">=</span> Short.parseShort(s5);</span><br><span class="line"><span class="type">char</span> <span class="variable">num7</span> <span class="operator">=</span> s5.charAt(<span class="number">0</span>); <span class="comment">//获取字符串的第一个字符</span></span><br></pre></td></tr></table></figure><ol><li>转换错误类型，会抛出异常，程序终止</li></ol><h2 id="第四章-运算符"><a href="#第四章-运算符" class="headerlink" title="第四章 运算符"></a>第四章 运算符</h2><h3 id="取余，取模"><a href="#取余，取模" class="headerlink" title="% 取余，取模"></a>% 取余，取模</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// % 取模，取余</span></span><br><span class="line"><span class="comment">// 本质公式：a % b = a - a / b * b</span></span><br><span class="line">System.out.println(<span class="number">10</span> % <span class="number">3</span>); <span class="comment">//1</span></span><br><span class="line">System.out.println(-<span class="number">10</span> % <span class="number">3</span>); <span class="comment">//-1</span></span><br><span class="line">System.out.println(<span class="number">10</span> % -<span class="number">3</span>); <span class="comment">//1</span></span><br><span class="line">System.out.println(-<span class="number">10</span> % -<span class="number">3</span>); <span class="comment">//-1</span></span><br></pre></td></tr></table></figure><h3 id="自增-—-自减"><a href="#自增-—-自减" class="headerlink" title="++ 自增 / — 自减"></a>++ 自增 / — 自减</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ++ 自增</span></span><br><span class="line"><span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">i++; <span class="comment">//自增 等价于 i = i + 1 =&gt; i = 11</span></span><br><span class="line">++i; <span class="comment">//自增 等价于 i = i + 1 =&gt; i = 12</span></span><br><span class="line">System.out.println(<span class="string">&quot;i=&quot;</span> + i);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">作为表达式使用</span></span><br><span class="line"><span class="comment">前++ ：++i先自增后赋值</span></span><br><span class="line"><span class="comment">后++ ：i++先赋值后自增</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">8</span>;</span><br><span class="line"><span class="comment">//   int k = ++j; //等价于 j = j + 1; k = j;</span></span><br><span class="line"><span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> j++; <span class="comment">//等价于 k = j; j = j + 1;</span></span><br><span class="line">System.out.println(<span class="string">&quot;k=&quot;</span> + k + <span class="string">&quot;\nj=&quot;</span> + j);</span><br></pre></td></tr></table></figure><h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><h4 id="逻辑与-amp"><a href="#逻辑与-amp" class="headerlink" title="逻辑与 &amp;"></a>逻辑与 &amp;</h4><p>对于逻辑与，第一个条件为 false，后面条件仍会判断执行</p><h4 id="短路与-amp-amp"><a href="#短路与-amp-amp" class="headerlink" title="短路与 &amp;&amp;"></a>短路与 &amp;&amp;</h4><p>对于短路与，第一个条件为 false，后面条件不再判断执行</p><h4 id="逻辑或"><a href="#逻辑或" class="headerlink" title="逻辑或 |"></a>逻辑或 |</h4><p>对于逻辑或，第一个条件为 true，后面条件仍会判断执行</p><h4 id="逻辑或-1"><a href="#逻辑或-1" class="headerlink" title="逻辑或 ||"></a>逻辑或 ||</h4><p>对于短路或，第一个条件为 true，后面条件不再判断执行</p><h4 id="异或操作"><a href="#异或操作" class="headerlink" title="异或操作 ^"></a>异或操作 ^</h4><p>a ^ b，如果 a 与 b 结果不同，则为 true，否则为 false</p><h4 id="取反操作"><a href="#取反操作" class="headerlink" title="取反操作 ~"></a>取反操作 ~</h4><p>对参数二进制格式进行 01 取反</p><h3 id="三元运算符"><a href="#三元运算符" class="headerlink" title="三元运算符"></a>三元运算符</h3><p><code>条件表达式 ？ 表达式1 : 表达式2</code></p><ol><li>如果条件表达式为 true，运算后的结果是表达式 1</li><li>如果条件表达式为 false，运算后的结果是表达式 2</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">99</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> a &gt; b ? a++ : b--;</span><br><span class="line">System.out.println(<span class="string">&quot;result: &quot;</span> + result + <span class="string">&quot;\nb: &quot;</span> + b);</span><br></pre></td></tr></table></figure><h3 id="原码、反码、补码"><a href="#原码、反码、补码" class="headerlink" title="原码、反码、补码"></a>原码、反码、补码</h3><p><strong>重要：负数的计算，需要先从原码转换为反码，反码再转换为补码再进行位运算，运算完毕后，再依次转回反码、原码。</strong></p><ol><li>二进制的最高位是符号位：0 表示正数，1 表示负数。</li><li>正数源码、反码、补码都一样。</li><li><strong>负数的</strong> 反码 = 它的原码符号位不变，其他位取反。</li><li><strong>负数的</strong> 补码 = 反码 + 1，反码 = 补码 -1。</li><li>0 的反码，补码都是 0。</li><li>java 没有无符号数。</li><li>计算机运算都以补码方式运算。</li><li>看运算结果的时候，要看它的原码。</li></ol><h3 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h3><h4 id="按位与-amp"><a href="#按位与-amp" class="headerlink" title="按位与 &amp;"></a>按位与 &amp;</h4><p>两者全为 1，结果为 1，否则为 0。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1. 先得到 2 的补码 =&gt; 2的原码 00000000 00000000 0000000 0000010</span></span><br><span class="line"><span class="comment">//2. 3的补码 3的原码 00000000 00000000 0000000 0000011</span></span><br><span class="line"><span class="comment">//3. 按位与 &amp;</span></span><br><span class="line"><span class="comment">// 00000000 00000000 0000000 0000010</span></span><br><span class="line"><span class="comment">// 00000000 00000000 0000000 0000011</span></span><br><span class="line"><span class="comment">//4. 得到是运算后的补码，因为是正数，三码合一，也是原码</span></span><br><span class="line"><span class="comment">// 00000000 00000000 0000000 0000010 =&gt; 2</span></span><br><span class="line">System.out.println(<span class="number">2</span>&amp;<span class="number">3</span>);<span class="comment">//2</span></span><br></pre></td></tr></table></figure><h4 id="按位或"><a href="#按位或" class="headerlink" title="按位或 |"></a>按位或 |</h4><p>两位有一个为 1，结果为 1，否则为 0</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1. 先得到 2 的补码 = 2的原码 00000000 00000000 0000000 0000010</span></span><br><span class="line"><span class="comment">//2. 3的补码 = 3的原码 00000000 00000000 0000000 0000011</span></span><br><span class="line"><span class="comment">//3. 按位或 | 得到 00000000 00000000 0000000 0000011 =&gt; 3</span></span><br><span class="line">System.out.println(<span class="number">2</span>|<span class="number">3</span>);<span class="comment">//3</span></span><br></pre></td></tr></table></figure><h4 id="按位异或"><a href="#按位异或" class="headerlink" title="按位异或 ^"></a>按位异或 ^</h4><p>两位有一个为 0，一个 1，结果为 1，否则为 0</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1. 先得到 2 的补码 = 2的原码 00000000 00000000 0000000 0000010</span></span><br><span class="line"><span class="comment">//2. 3的补码 = 3的原码 00000000 00000000 0000000 0000011</span></span><br><span class="line"><span class="comment">//3. 按位异或 ^ 得到 00000000 00000000 0000000 0000001 =&gt; 1</span></span><br><span class="line">System.out.println(<span class="number">2</span>^<span class="number">3</span>);<span class="comment">//1</span></span><br></pre></td></tr></table></figure><h4 id="按位取反"><a href="#按位取反" class="headerlink" title="按位取反 ~"></a>按位取反 ~</h4><p>0 -&gt; 1，1 -&gt; 0</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1. 先得到 -2 的原码 10000000 00000000 00000000 00000010</span></span><br><span class="line"><span class="comment">//2. -2 的反码 11111111 11111111 11111111 11111101</span></span><br><span class="line"><span class="comment">//3. -2 的补码 11111111 11111111 11111111 11111110</span></span><br><span class="line"><span class="comment">//4. ~-2 操作 00000000 00000000 00000000 00000001 运算后的补码</span></span><br><span class="line"><span class="comment">//5. 运算后的原码就是 00000000 00000000 00000000 00000001 =&gt; 1</span></span><br><span class="line">System.out.println(~-<span class="number">2</span>);<span class="comment">//1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//1. 得到2的补码 0000000 00000000 00000000 00000010 正数原码、补码、反码三合一</span></span><br><span class="line"><span class="comment">//2. ~2 操作 11111111 11111111 11111111 11111101 运算后的补码（负数）</span></span><br><span class="line"><span class="comment">//3. 运算后的反码 11111111 11111111 11111111 11111100 反码 = 补码 - 1（负数）</span></span><br><span class="line"><span class="comment">//4. 运算后的原码 10000000 00000000 00000000 00000011 =&gt; -3</span></span><br><span class="line">System.out.println(~<span class="number">2</span>); <span class="comment">//-3</span></span><br></pre></td></tr></table></figure><h4 id="算数左移运算符-lt-lt"><a href="#算数左移运算符-lt-lt" class="headerlink" title="算数左移运算符 &lt;&lt;"></a>算数左移运算符 &lt;&lt;</h4><p>符号位不变，按二进制位数左移指定位数，低位补 0。</p><h4 id="算数右移运算符-gt-gt"><a href="#算数右移运算符-gt-gt" class="headerlink" title="算数右移运算符 &gt;&gt;"></a>算数右移运算符 &gt;&gt;</h4><p>低位溢出，符号位不变，并用符号位补溢出的高位。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1. 先得到 -1 的原码 10000000 00000000 0000000 00000001</span></span><br><span class="line"><span class="comment">//2. 得到反码 11111111 11111111 11111111 11111110</span></span><br><span class="line"><span class="comment">//3. 转换为补码 11111111 11111111 11111111 11111111</span></span><br><span class="line"><span class="comment">//4. &gt;&gt;2操作 11111111 11111111 11111111 11111111</span></span><br><span class="line"><span class="comment">//5. 转换为反码 11111111 11111111 11111111 11111110</span></span><br><span class="line"><span class="comment">//6. 转换为原码 操作 10000000 00000000 00000000 00000001 =&gt; -1</span></span><br><span class="line"><span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> -<span class="number">1</span> &gt;&gt; <span class="number">2</span>; <span class="comment">//-1</span></span><br></pre></td></tr></table></figure><h4 id="逻辑右移操作符-gt-gt-gt"><a href="#逻辑右移操作符-gt-gt-gt" class="headerlink" title="逻辑右移操作符 &gt;&gt;&gt;"></a>逻辑右移操作符 &gt;&gt;&gt;</h4><p>低位溢出，高位补 0。</p><h2 id="标识符的命名规则和规范"><a href="#标识符的命名规则和规范" class="headerlink" title="标识符的命名规则和规范"></a>标识符的命名规则和规范</h2><p>^cd9c26</p><h3 id="标识符概念"><a href="#标识符概念" class="headerlink" title="标识符概念"></a>标识符概念</h3><ol><li>Java 中对各种变量、方法和类等命名时使用的字符序列称为标识符</li><li>凡是自己起名字的地方都称为标识符</li></ol><h3 id="命名规则"><a href="#命名规则" class="headerlink" title="命名规则"></a>命名规则</h3><ol><li>由 26 个英文字母大小写，0-9，或$组成</li><li>不可以使用数字开头</li><li>不可以使用关键字和保留字，但可以包含</li><li>严格区分大小写，长度无限制</li><li>标识符不能包含空格</li></ol><h4 id="包名"><a href="#包名" class="headerlink" title="包名"></a>包名</h4><p>多单词组成时<strong>所有字母小写</strong></p><p>例：<code>com.hahah.cpm</code></p><h4 id="类名-、接口名"><a href="#类名-、接口名" class="headerlink" title="类名 、接口名"></a>类名 、接口名</h4><p>多单词组成时，<strong>所有单词首字母大写</strong> [大驼峰]</p><p>例：<code>TankShotGame</code></p><h4 id="变量名、方法名"><a href="#变量名、方法名" class="headerlink" title="变量名、方法名"></a>变量名、方法名</h4><p>多单词组成时，<strong>第一个单词首字母小写</strong>，第二个单词开始每个单词首字母大写 [小驼峰] ^09fac8</p><p>例：<code>tankShotGame</code></p><h4 id="常量名"><a href="#常量名" class="headerlink" title="常量名"></a>常量名</h4><p><strong>所有字母都大写</strong>，多个单词时用下划线连接</p><p>例：定义一个所得税税率 <code>TAX_RATE</code></p><h2 id="进制"><a href="#进制" class="headerlink" title="进制"></a>进制</h2><h3 id="二进制"><a href="#二进制" class="headerlink" title="二进制"></a>二进制</h3><p><code>0,1</code>，满 2 进 1，以 <code>0b</code> 或 <code>0B</code> 开头</p><h4 id="转八进制"><a href="#转八进制" class="headerlink" title="转八进制"></a>转八进制</h4><p>从低位(右)开始，将二进制数每三位一组，转成对应八进制数。</p><p>例：0b11010101 转为八进制</p><p><code>0b11(3)010(2)101(5) = 325</code></p><h3 id="十进制"><a href="#十进制" class="headerlink" title="十进制"></a>十进制</h3><p><code>0-9</code>，满 10 进 1</p><h4 id="转二进制"><a href="#转二进制" class="headerlink" title="转二进制"></a>转二进制</h4><p>将十进制数不断除以 2，直到商为 0，再将每步得到的余数倒置，就是对应的二进制</p><p>例：十进制 34 转为二进制</p><p><code>0b100010</code></p><h4 id="转八进制-1"><a href="#转八进制-1" class="headerlink" title="转八进制"></a>转八进制</h4><p>将十进制数不断除以 8，直到商为 0，再将每步得到的余数倒置，就是对应的八进制</p><p>例：十进制 131 转为八进制</p><p><code>0203</code></p><h4 id="转十六进制"><a href="#转十六进制" class="headerlink" title="转十六进制"></a>转十六进制</h4><p>将十进制数不断除以 16，直到商为 0，再将每步得到的余数倒置，就是对应的十六进制</p><p>例：十进制 237 转为十六进制</p><p><code>0xED</code></p><h3 id="八进制"><a href="#八进制" class="headerlink" title="八进制"></a>八进制</h3><p><code>0-7</code>，满 8 进 1，以数字<code>0</code>开头</p><h4 id="转二进制-1"><a href="#转二进制-1" class="headerlink" title="转二进制"></a>转二进制</h4><p>将八进制数每 1 位转换为对应 3 位二进制</p><p>例：八进制 0237 转为二进制</p><p><code>0b010011111</code></p><h3 id="十六进制"><a href="#十六进制" class="headerlink" title="十六进制"></a>十六进制</h3><p><code>0-9</code>以及<code>A(10)-F(15)</code>，</p><p>满 16 进 1，以<code>0x</code>或<code>0X</code>开头</p><p><code>A-F</code>不区分大小写</p><h4 id="转二进制-2"><a href="#转二进制-2" class="headerlink" title="转二进制"></a>转二进制</h4><p>将十六进制数每 1 位转换为对应 4 位二进制</p><p>例：十六进制 0x23B 转为二进制</p><p><code>0b001000111011</code></p><h2 id="第五章-控制结构"><a href="#第五章-控制结构" class="headerlink" title="第五章 控制结构"></a>第五章 控制结构</h2><h3 id="顺序控制"><a href="#顺序控制" class="headerlink" title="顺序控制"></a>顺序控制</h3><p>从上到下逐行执行，中间没有任何判断和跳转，遵循向前引用原则。</p><h3 id="分支控制"><a href="#分支控制" class="headerlink" title="分支控制"></a>分支控制</h3><h4 id="if-else"><a href="#if-else" class="headerlink" title="if else"></a>if else</h4><p>如果表达式为 true，则执行语句块 1，如果表达式为 false，则执行语句块 2。</p><p><strong>双分支：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (表达式) &#123;</span><br><span class="line">    语句块<span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    语句块<span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>多分支：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(表达式<span class="number">1</span>) &#123;</span><br><span class="line">    语句块<span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>(表达式<span class="number">2</span>) &#123;</span><br><span class="line">    语句块<span class="number">2</span>;</span><br><span class="line">...</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>(表达式n) &#123;</span><br><span class="line">    语句块n;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    语句块n+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果表达式 1 为 true，则执行语句块 1，如果表达式 1 为 false，则继续判断表达式 2，为 true 则执行语句块 2，以此类推。</p><p>特别说明：</p><ol><li>多分支可以没有 else。</li><li>如果所有表达式都不成立，则默认执行 else 代码块。</li></ol><p><strong>嵌套分支：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(表达式<span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(表达式<span class="number">2</span>) &#123;</span><br><span class="line">        语句块<span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        语句块<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(表达式<span class="number">3</span>) &#123;</span><br><span class="line">        语句块<span class="number">3</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(表达式<span class="number">4</span>) &#123;</span><br><span class="line">        语句块<span class="number">4</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(表达式n) &#123;</span><br><span class="line">            语句块n;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            语句块n+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实际开发中，嵌套不要超过三层，可读性不好。</p><h4 id="switch"><a href="#switch" class="headerlink" title="switch"></a>switch</h4><p>表达式对应一个值，当表达式的值等于值 1，就执行语句块 1，并<code>break</code>跳出 swtich，不等于值 1 便逐次与值 2、值 3……进行匹配。<br>如果表达式和值一个都没有匹配上，就默认执行 default 语句块。</p><p>如果不加<code>break</code>，则发生穿透，执行完该值的语句块并继续进行下一个值的判断。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(表达式) &#123;</span><br><span class="line">    <span class="keyword">case</span> 值<span class="number">1</span>:</span><br><span class="line">        语句块<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> 值<span class="number">2</span>:</span><br><span class="line">        语句块<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    …</span><br><span class="line">    <span class="keyword">case</span> 值n:</span><br><span class="line">        语句块n;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        语句块n+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>switch 细节讨论：</strong></p><ol><li>表达式数据类型应与<code>case</code>后的常量类型一致，或者是能够自动转换或比较的类型。如<code>char</code>与<code>int</code>类型可以相互转换。</li><li>switch 中的表达式的返回值必须是：byte, short, int, char, enum[枚举], String 中的一种。</li><li><code>case</code>子句中的值必须是常量（1, ‘a’）或者是常量表达式，不能是变量。</li><li><code>default</code>的子句是可选的，当没有匹配的<code>case</code>时，执行<code>default</code>。</li><li><code>break</code>用于退出 switch，如果没有，程序会进行<strong>穿透</strong>，执行到 switch 结尾。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//3. 季节判断，使用穿透。</span></span><br><span class="line">System.out.println(<span class="string">&quot;输入月份：&quot;</span>);</span><br><span class="line"><span class="type">int</span> <span class="variable">season</span> <span class="operator">=</span> myScanner.nextInt();</span><br><span class="line"><span class="keyword">switch</span> (season) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">        System.out.println(<span class="string">&quot;春季。&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">        System.out.println(<span class="string">&quot;夏季。&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">        System.out.println(<span class="string">&quot;秋季。&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">        System.out.println(<span class="string">&quot;冬季。&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        System.out.println(<span class="string">&quot;月份错误！&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="switch-与-if-的比较"><a href="#switch-与-if-的比较" class="headerlink" title="switch 与 if 的比较"></a>switch 与 if 的比较</h4><ol><li>如果判断具体数值不多，并且符合 byte, short, int, char, enum[枚举], String 这六种类型，建议使用 switch 语句。</li><li>对于区间判断、结果为 boolean 类型的判断，使用 if 的范围更广。</li></ol><h3 id="循环控制"><a href="#循环控制" class="headerlink" title="循环控制"></a>循环控制</h3><h4 id="for"><a href="#for" class="headerlink" title="for"></a>for</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(循环变量初始化; 循环条件; 循环变量迭代) &#123;</span><br><span class="line">    语句块; <span class="comment">//只有一句语句可以省略 &#123;&#125;。</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>for 循环细节：</strong></p><ol><li><p>循环条件应返回一个布尔值的表达式。</p></li><li><p>初始化变量和变量迭代可以写到其他地方，分号不能省略。</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; <span class="comment">//循环变量初始化</span></span><br><span class="line"><span class="keyword">for</span> (; i &lt;= <span class="number">10</span>;) &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;你好&quot;</span> + i);</span><br><span class="line">    i++; <span class="comment">//循环变量迭代</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>循环变量初始值可以<strong>有多条初始化语句，但是要求类型一致</strong>，循环遍历迭代同理。</li></ol><h4 id="while"><a href="#while" class="headerlink" title="while"></a>while</h4><p>先判断，再循环。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(条件表达式) &#123;</span><br><span class="line">    语句块;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="do-while"><a href="#do-while" class="headerlink" title="do while"></a>do while</h4><p>先执行，再判断，一定会执行一次。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">    语句块;</span><br><span class="line">&#125;<span class="keyword">while</span>(条件表达式);</span><br></pre></td></tr></table></figure><h4 id="循环嵌套"><a href="#循环嵌套" class="headerlink" title="循环嵌套"></a>循环嵌套</h4><p>将一个循环放在另一个循环体内，内层循环作为外层循环的执行代码。</p><p>九九乘法表：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;乘法口诀表：&quot;</span>);</span><br><span class="line">    <span class="comment">// 外层循环</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">9</span>; i++) &#123;</span><br><span class="line">        <span class="comment">// 内层循环</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt;= i; j++) &#123;</span><br><span class="line">            System.out.print(j + <span class="string">&quot;*&quot;</span> + i + <span class="string">&quot;=&quot;</span> + j * i + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>空心金字塔：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分析思路</span></span><br><span class="line"><span class="comment">//化繁为简：</span></span><br><span class="line"><span class="comment">//1. 先打印一个矩形</span></span><br><span class="line"><span class="comment">//2. 打印半个金字塔</span></span><br><span class="line"><span class="comment">//3. 打印整个金字塔 （一个循环中嵌套两个循环。先算星星，再算空格）</span></span><br><span class="line"><span class="comment">//4. 打印空心金字塔 (第一个位置是*，最后一个位置也是*，最后一层全部是*)</span></span><br><span class="line"><span class="comment">//5. 先死后活： 层数作为变量</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="variable">totalLevel</span> <span class="operator">=</span> <span class="number">54</span>; <span class="comment">//层数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= totalLevel; i++) &#123; <span class="comment">//i为层数</span></span><br><span class="line">    <span class="comment">//再打印星星之前需要打印空格，空格 = 总层数 -当前层</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">1</span>; k &lt;= totalLevel -i; k++) &#123;</span><br><span class="line">        System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt;= <span class="number">2</span> * i - <span class="number">1</span>; j++) &#123;</span><br><span class="line">        <span class="comment">//当前行第一个位置是*，最后一个位置也是*，最后一层全部是*</span></span><br><span class="line">        <span class="keyword">if</span> (j ==<span class="number">1</span> || j ==<span class="number">2</span> * i -<span class="number">1</span> || i == totalLevel) &#123;</span><br><span class="line">            System.out.print(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123; <span class="comment">//其他情况输出空格</span></span><br><span class="line">            System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println();</span><br></pre></td></tr></table></figure><p>空心菱形：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">化繁为简</span></span><br><span class="line"><span class="comment">1. 打印一个金字塔 (空格个数为总层数-当前层)</span></span><br><span class="line"><span class="comment">2. 打印菱形</span></span><br><span class="line"><span class="comment">3. 打印空心菱形</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">先死后活</span></span><br><span class="line"><span class="comment">设置层数变量</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> <span class="number">4</span>; <span class="comment">//层数</span></span><br><span class="line"><span class="type">int</span> <span class="variable">totalLevel</span> <span class="operator">=</span> n/<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= totalLevel; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">1</span>; k &lt;= totalLevel - i; k++) &#123;</span><br><span class="line">        System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt;= i * <span class="number">2</span> -<span class="number">1</span>; j++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (j == <span class="number">1</span> || j == i * <span class="number">2</span> - <span class="number">1</span>) &#123;</span><br><span class="line">            System.out.print(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> totalLevel - <span class="number">1</span> ; i &gt;= <span class="number">1</span>; i--) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">1</span>; k &lt;= totalLevel - i; k++) &#123;</span><br><span class="line">        System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt;= i * <span class="number">2</span> -<span class="number">1</span>; j++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (j == <span class="number">1</span> || j == i * <span class="number">2</span> - <span class="number">1</span>) &#123;</span><br><span class="line">            System.out.print(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println();</span><br></pre></td></tr></table></figure><h3 id="跳转控制"><a href="#跳转控制" class="headerlink" title="跳转控制"></a>跳转控制</h3><h4 id="break"><a href="#break" class="headerlink" title="break"></a>break</h4><p>break 语句可以强制终止所在所在循环，在嵌套循环中，break 仅影响当前所在循环。<br>一个循环中可以不只有一个 break 语句。</p><p>break 语句出现在多层嵌套的语句块中，可以通过标签指明要<strong>终止</strong>的是哪一层语句块。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">lable1:</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; <span class="number">4</span>; j++) &#123;</span><br><span class="line">    lable2:</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">break</span>; <span class="comment">//等价 break label2</span></span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;i = &quot;</span> + i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="continue"><a href="#continue" class="headerlink" title="continue"></a>continue</h4><p>countinue 与 break 的区别在于，countinue 并不是终止整个循环，而是中止最近的一次循环的当次迭代。</p><p>注意：</p><ol><li>continue 语句只能用在 while 语句、for 语句或者 foreach 语句的循环体之中，在这之外的任何地方使用它都会引起语法错误。</li><li><strong>终止</strong>指的是结束整个循环，<strong>中止</strong>指的是结束循环的当次迭代（跳过）。</li></ol><p>coutinue 语句出现在多层嵌套的语句块中，可以通过标签指明要<strong>中止</strong>的是哪一层语句块。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">        label1:</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; <span class="number">4</span>; j++) &#123;</span><br><span class="line">            label2:</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (i == <span class="number">2</span>) &#123;</span><br><span class="line"><span class="comment">//continue; //等价于 coutinue label2</span></span><br><span class="line"><span class="keyword">continue</span> label1;</span><br><span class="line">                &#125;</span><br><span class="line">                System.out.println(<span class="string">&quot;i = &quot;</span> + i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h4 id="return"><a href="#return" class="headerlink" title="return"></a>return</h4><p>在方法中，return 表示跳出所在的方法。</p><p>注意：如果 return 在 main 中使用，将表示为退出程序。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (i == <span class="number">3</span>) &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;你好&quot;</span> + i);</span><br><span class="line">        <span class="keyword">return</span>; <span class="comment">//当使用在方法时。表示跳出方法，如果在main中，表示退出程序</span></span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">&quot;go on..&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="第六章-数组、排序和查找"><a href="#第六章-数组、排序和查找" class="headerlink" title="第六章 数组、排序和查找"></a>第六章 数组、排序和查找</h2><h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><p>数组可以存放多个同一类型的数据。数组也是一种数据类型，是引用类型（数组就是一组数据）。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义一个数组</span></span><br><span class="line"><span class="type">double</span>[] hens = &#123;<span class="number">3</span>, <span class="number">5</span>, <span class="number">1</span>, <span class="number">3.4</span>, <span class="number">2</span>, <span class="number">50</span>&#125;;</span><br><span class="line"><span class="type">double</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//遍历数组得到所有元素的和</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">6</span>; i++) &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;第 &quot;</span> + (i + <span class="number">1</span>) + <span class="string">&quot; 个元素的值：&quot;</span> + hens[i]);</span><br><span class="line">    sum += hens[i];</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">&quot;所有元素和：&quot;</span> + sum);</span><br></pre></td></tr></table></figure><ol><li>double[] 表示该数组为 double 类型的数组，数组名 hens。</li><li>{3, 5, 1, 3.4, 2, 50}表示该数组的值/元素，依次表示数组的第几个元素。</li><li>通过 数组名[下标] 来访问数组的元素，下标从 0 开始编号，第一个元素就是 hens[0]，第二个元素就是 hens[1]，以此类推。</li></ol><p><strong>动态初始化：</strong></p><ol><li>直接定义数组大小类型。<br><code>数据类型[] 数组名 = new 数据类型[大小]</code></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[] a = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">3</span>];</span><br><span class="line"><span class="comment">//int 类型的名为 a 的数组存放了 3 个int类型的数据</span></span><br></pre></td></tr></table></figure><ol><li>先声明数组，再 new 分配空间。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1. 声明数组</span></span><br><span class="line"><span class="type">int</span>[] a;</span><br><span class="line"><span class="comment">//或 int a[]，此方法不推荐使用</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2. 分配空间</span></span><br><span class="line">a = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">3</span>]; <span class="comment">//分配内存空间，可以存放数据</span></span><br></pre></td></tr></table></figure><ol><li>静态初始化<br><code>数据类型[] 数组名 = &#123;元素值1, 元素值2...&#125;</code></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">double</span>[] hens = &#123;<span class="number">3</span>, <span class="number">5</span>, <span class="number">1</span>, <span class="number">3.4</span>, <span class="number">2</span>, <span class="number">50</span>&#125;;</span><br><span class="line"><span class="comment">//注意：仅适用于有指定元素。</span></span><br></pre></td></tr></table></figure><p><strong>数组使用细节：</strong></p><ol><li>数组元素可以是任何数据类型，但是不能混用。</li><li>数组创建后如果没有赋值，会有默认值，char 为<code>\u0000</code>，String 为 null，boolean 为 false。</li><li>数组属于引用类型，数组型数据是对象（）。</li></ol><p><strong>数组赋值机制（重要）：</strong></p><ol><li>基本数据类型赋值，这个值就是具体的数据（栈），而且相互不影响。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">n1</span> <span class="operator">=</span> <span class="number">2</span>; <span class="type">int</span> <span class="variable">n2</span> <span class="operator">=</span> n1;</span><br></pre></td></tr></table></figure><ol><li>数组在默认情况下是引用转递，<strong>赋的值是地址（堆）</strong>，实际数据存放在堆中相应地址空间。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> [] arr1 = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;;</span><br><span class="line"><span class="type">int</span> [] arr2 = arr1;</span><br></pre></td></tr></table></figure><ol><li>数组赋值手动<strong>内容拷贝</strong>方式，数据传递，非引用传递。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//数组内容拷贝，非地址</span></span><br><span class="line"><span class="type">int</span>[] arr1 = &#123;<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建一个新的数组arr2，开辟新的数据空间</span></span><br><span class="line"><span class="type">int</span>[] arr2 = <span class="keyword">new</span> <span class="title class_">int</span>[arr1.length];</span><br><span class="line"></span><br><span class="line"><span class="comment">//遍历 arr1，把每个元素拷贝到 arr2 对应位置</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr1.length; i++) &#123;</span><br><span class="line">    arr2[i] = arr1[i];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>数组操作：</strong></p><ol><li>翻转</li></ol><p>方式一：元素逐个交换</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义数组</span></span><br><span class="line"><span class="type">int</span>[] arr = &#123;<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>, <span class="number">44</span>, <span class="number">55</span>, <span class="number">66</span>&#125;;</span><br><span class="line"><span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//共交换三次</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length / <span class="number">2</span>; i++) &#123;</span><br><span class="line">    temp = arr[i]; <span class="comment">//临时变量保存需要替换的元素</span></span><br><span class="line">    arr[i] = arr[arr.length - i - <span class="number">1</span>];</span><br><span class="line">    arr[arr.length - i - <span class="number">1</span>] = temp;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(Arrays.toString(arr));</span><br></pre></td></tr></table></figure><p>方式二：逆序遍历，赋值新数组</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义数组</span></span><br><span class="line"><span class="type">int</span>[] arr = &#123;<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>, <span class="number">44</span>, <span class="number">55</span>, <span class="number">66</span>&#125;;</span><br><span class="line"><span class="type">int</span>[] arr2 = <span class="keyword">new</span> <span class="title class_">int</span>[arr.length];</span><br><span class="line"><span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//逆序遍历原数组，再存放入新数组</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> arr.length; i &lt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">    arr2[i] = arr[i];</span><br><span class="line">&#125;</span><br><span class="line">arr = arr2; <span class="comment">//arr原空间数据没有被变量引用，jvm自动销毁</span></span><br><span class="line">System.out.println(Arrays.toString(arr));</span><br></pre></td></tr></table></figure><ol><li>扩容</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[] arr = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;;</span><br><span class="line"><span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;请输入添加元素值：&quot;</span>);</span><br><span class="line">    <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">    <span class="comment">//建立新数组用于存放新添加的元素</span></span><br><span class="line">    <span class="type">int</span>[] arr2 = <span class="keyword">new</span> <span class="title class_">int</span>[arr.length + <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">        arr2[i] = arr[i];</span><br><span class="line">    &#125;</span><br><span class="line">    arr2[arr2.length - <span class="number">1</span>] = num;</span><br><span class="line">    arr = arr2;</span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">&quot;添加成功！&quot;</span>);</span><br><span class="line">    System.out.println(Arrays.toString(arr));</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断是否继续添加</span></span><br><span class="line">    System.out.println(<span class="string">&quot;是否继续添加（y/n）：&quot;</span>);</span><br><span class="line">    <span class="type">char</span> <span class="variable">yes</span> <span class="operator">=</span> sc.next().charAt(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span> (yes == <span class="string">&#x27;n&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (yes == <span class="string">&#x27;y&#x27;</span>) &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;继续添加！&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;输入有误，退出程序！&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>缩减</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[] arr = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;;</span><br><span class="line"><span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">    <span class="comment">//建立新数组用于存放缩减后的元素</span></span><br><span class="line">    <span class="type">int</span>[] arr2 = <span class="keyword">new</span> <span class="title class_">int</span>[arr.length - <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        arr2[i] = arr[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    arr = arr2;</span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">&quot;缩减成功！&quot;</span>);</span><br><span class="line">    System.out.println(Arrays.toString(arr));</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断是否能够继续缩减</span></span><br><span class="line">    <span class="keyword">if</span> (arr.length == <span class="number">1</span>) &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;数组仅剩一位，无法继续缩减！&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断是否继续缩减</span></span><br><span class="line">    System.out.println(<span class="string">&quot;是否继续缩减（y/n）：&quot;</span>);</span><br><span class="line">    <span class="type">char</span> <span class="variable">yes</span> <span class="operator">=</span> sc.next().charAt(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span> (yes == <span class="string">&#x27;n&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (yes == <span class="string">&#x27;y&#x27;</span>) &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;继续缩减！&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;输入有误，退出程序！&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h3><p>将多个数据，依照指定的顺序进行排列的过程。</p><p><strong>冒泡排序：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[] arr = &#123;<span class="number">24</span>, <span class="number">69</span>, <span class="number">80</span>, <span class="number">57</span>, <span class="number">13</span>&#125;;</span><br><span class="line"><span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="type">boolean</span> <span class="variable">sorted</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; arr.length - i - <span class="number">1</span>; j++) &#123;</span><br><span class="line">        <span class="comment">//如果前面的数大于后面的数，就交换</span></span><br><span class="line">        <span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>]) &#123;</span><br><span class="line">            temp = arr[j];</span><br><span class="line">            arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">            arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">            sorted = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (sorted) <span class="keyword">break</span>; <span class="comment">//如果某一轮没有交换了，代表已经有序，提前退出程序</span></span><br><span class="line">&#125;</span><br><span class="line">System.out.println(Arrays.toString(arr));</span><br></pre></td></tr></table></figure><h3 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h3><p><strong>顺序查找：</strong></p><p>从头到尾一一比对，成功则停止，不成功则继续。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义一个字符串数组</span></span><br><span class="line">String[] names = &#123;<span class="string">&quot;aa&quot;</span>, <span class="string">&quot;bb&quot;</span>, <span class="string">&quot;cc&quot;</span>, <span class="string">&quot;dd&quot;</span>&#125;;</span><br><span class="line"><span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">&quot;请输入名字：&quot;</span>);</span><br><span class="line"><span class="type">String</span> <span class="variable">findName</span> <span class="operator">=</span> sc.next();</span><br><span class="line"></span><br><span class="line"><span class="comment">//遍历数组，逐一比较</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; names.length; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (findName.equals(names[i])) &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;找到了！在第 &quot;</span> + (i + <span class="number">1</span>) + <span class="string">&quot; 位。&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>; <span class="comment">//直接退出</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">&quot;没找到！&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h3><p>数组的数组，即二维数组也是一个特殊的一维数组，其每个元素又是一个一维数组。</p><p>`数据类型[][] 数组名 = </p>]]></content>
    
    
    <summary type="html">&lt;p&gt;关于Java基础的杂记&lt;/p&gt;</summary>
    
    
    
    <category term="笔记" scheme="https://laelwz.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Java" scheme="https://laelwz.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Linux 输入/输出重定向</title>
    <link href="https://laelwz.github.io/posts/59339/"/>
    <id>https://laelwz.github.io/posts/59339/</id>
    <published>2022-10-18T08:03:59.000Z</published>
    <updated>2022-12-29T07:08:38.216Z</updated>
    
    <content type="html"><![CDATA[<p>Linux 下输入/输入重定向简析</p><span id="more"></span><p>一个命令通常都会打开三个文件，默认使用文件描述符0, 1, 2来指代这个三个文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">stdin   0   #标准输入流 （键盘）</span><br><span class="line">stdout  1   #标准输出流 （终端）</span><br><span class="line">stderr  2   #标准错误输出流 （终端）</span><br></pre></td></tr></table></figure><h3 id="输出重定向"><a href="#输出重定向" class="headerlink" title="输出重定向"></a>输出重定向</h3><p><code>command</code> 为任意命令，file为任意文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">command &gt; file  #将标注输出重定向（写入）到 file 里</span><br><span class="line">command 1&gt; file #将标准输出重定向到 file 里（与上式一致）</span><br><span class="line">command 2&gt; file #将错误输出重定向到 file 里</span><br><span class="line">command &amp;&gt; file #将标准输出与错误输出一起重定向到 file 里</span><br><span class="line">command &gt;&gt; file #将标准输出追加到file中</span><br></pre></td></tr></table></figure><p>例：标注输出至文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">ls</span> <span class="comment">#展示当前目录</span></span></span><br><span class="line">test1  test2  test3</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">ls</span> &gt; test3 <span class="comment">#将当前目录展示输出到test3文件中</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cat</span> test3 <span class="comment">#查看test3文件内容</span></span></span><br><span class="line">test1</span><br><span class="line">test2</span><br><span class="line">test3</span><br></pre></td></tr></table></figure><p>例：错误输出至文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">ls</span></span></span><br><span class="line">test1  test2  test3</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cat</span> testx</span></span><br><span class="line">cat: testx: 没有那个文件或目录</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cat</span> testx 2&gt;&gt; test3 <span class="comment">#追加错误输出至test3文件中</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cat</span> <span class="built_in">test</span></span></span><br><span class="line">cat: test: 没有那个文件或目录</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cat</span> test3</span></span><br><span class="line">test1</span><br><span class="line">test2</span><br><span class="line">test3</span><br><span class="line">cat: testx: 没有那个文件或目录</span><br></pre></td></tr></table></figure><p>例：标准输出与错误输出一同写入文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ cat test2</span><br><span class="line">$ cat testxxxx test3 &amp;&gt; test2</span><br><span class="line">$ cat test2</span><br><span class="line">cat: testxxxx: 没有那个文件或目录</span><br><span class="line">test1</span><br><span class="line">test2</span><br><span class="line">test3</span><br><span class="line">cat: testx: 没有那个文件或目录</span><br></pre></td></tr></table></figure><h3 id="输入重定向"><a href="#输入重定向" class="headerlink" title="输入重定向"></a>输入重定向</h3><p><code>xxx</code> 为标签</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">command &lt; file #重定向标准输入</span><br><span class="line">command &lt;&lt; xxx #多行输入</span><br></pre></td></tr></table></figure><p>例：标注输入与命令读取的异同</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">head</span> -v test1 <span class="comment">#head -v展示文件内容以及文件名称</span></span></span><br><span class="line">==&gt; test1 &lt;==</span><br><span class="line">123</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">head</span> -v &lt; test1 <span class="comment">#使用标准输入读取</span></span></span><br><span class="line">==&gt; 标准输入 &lt;==</span><br><span class="line">123</span><br></pre></td></tr></table></figure><p>可见使用标准输入时，文件名称变为了<code>标准输入</code>。</p><p>例：标准输入实现多行输入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">head</span> -v &lt;&lt;<span class="string">abc</span></span></span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash"><span class="string">123</span></span></span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash"><span class="string">123</span></span></span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash"><span class="string">asd</span></span></span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash"><span class="string">abc</span></span></span><br><span class="line">==&gt; 标准输入 &lt;==</span><br><span class="line">123</span><br><span class="line">123</span><br><span class="line">asd</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cat</span> test1</span></span><br><span class="line">123</span><br></pre></td></tr></table></figure><p>以上命令中，设定 <code>abc</code> 为结束标签，在多行输入结束时，输入abc，即识别标签并结束输入。</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ol><li><a href="https://gwaslab.com/2021/11/28/linux-redirection/">https://gwaslab.com/2021/11/28/linux-redirection/</a></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;Linux 下输入/输入重定向简析&lt;/p&gt;</summary>
    
    
    
    <category term="笔记" scheme="https://laelwz.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="LINUX" scheme="https://laelwz.github.io/tags/LINUX/"/>
    
    <category term="SHELL" scheme="https://laelwz.github.io/tags/SHELL/"/>
    
  </entry>
  
  <entry>
    <title>Hadoop伪分布式部署踩坑</title>
    <link href="https://laelwz.github.io/posts/942/"/>
    <id>https://laelwz.github.io/posts/942/</id>
    <published>2022-09-29T08:03:59.000Z</published>
    <updated>2022-12-29T07:04:41.984Z</updated>
    
    <content type="html"><![CDATA[<p>在上Hadoop分布式存储课时首先让我们部署一个简单的伪分布式存储系统，但是实机安装和机房老师已经弄好的快照还是十分不同的，踩了一些坑。</p><span id="more"></span><h3 id="1-启动namenode时，自动关闭"><a href="#1-启动namenode时，自动关闭" class="headerlink" title="1. 启动namenode时，自动关闭"></a>1. 启动namenode时，自动关闭</h3><p>查询 log (日志) 可以发现如下错误代码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hadoop-root-namenode-localhost.localdomain.log</span><br><span class="line"></span><br><span class="line">Call From hadoop to null:0 failed on socket exception:java.net.SocketException: Unresolved address</span><br></pre></td></tr></table></figure><p>解决方法：</p><ul><li>修改etc/hadoop目录下的core-site.xml，把hdfs://hadoop:9000中的hadoop改为本机ip。</li><li>或在namenode主机 hosts (主机) 将hadoop代理到本机ip。</li></ul><h3 id="2-namenode启动成功，关闭防火墙后无法访问50070端口"><a href="#2-namenode启动成功，关闭防火墙后无法访问50070端口" class="headerlink" title="2. namenode启动成功，关闭防火墙后无法访问50070端口"></a>2. namenode启动成功，关闭防火墙后无法访问50070端口</h3><p>解决方法：</p><ul><li><p>先查看端口开放情况<br>  <code>netstat -ant</code></p></li><li><p>50070端口显示为<br>  <code>127.0.0.1:50070</code></p></li><li><p>将绑定IP改为0.0.0.0，而不是本地回环IP，这样，就能够实现外网访问本机的50070端口。<br>  在hdfs-site.xml中修改添加如下代码：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">hdfs-site.xml</span><br><span class="line"></span><br><span class="line">&lt;property&gt;</span><br><span class="line">  &lt;name&gt;dfs.http.address&lt;/name&gt;</span><br><span class="line">  &lt;value&gt;0.0.0.0:50070&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;在上Hadoop分布式存储课时首先让我们部署一个简单的伪分布式存储系统，但是实机安装和机房老师已经弄好的快照还是十分不同的，踩了一些坑。&lt;/p&gt;</summary>
    
    
    
    <category term="笔记" scheme="https://laelwz.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="HADOOP" scheme="https://laelwz.github.io/tags/HADOOP/"/>
    
    <category term="分布式" scheme="https://laelwz.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
    <category term="踩坑" scheme="https://laelwz.github.io/tags/%E8%B8%A9%E5%9D%91/"/>
    
  </entry>
  
  <entry>
    <title>MATLAB基于问题的整数线性规划</title>
    <link href="https://laelwz.github.io/posts/25548/"/>
    <id>https://laelwz.github.io/posts/25548/</id>
    <published>2022-08-22T08:03:59.000Z</published>
    <updated>2023-01-13T14:04:43.342Z</updated>
    
    <content type="html"><![CDATA[<p>这几天做题遇到了较为复杂的规划问题，在想能不能用MATLAB实现像LINGO那样的偏向用户输入的编写方法，而非MATLAB矩阵式的，最终实现了基于问题的求解代码。</p><span id="more"></span><script type="math/tex; mode=display">\begin{equation}A =\begin{bmatrix}  a & b \\  c & c\end{bmatrix}\end{equation}</script><script type="math/tex; mode=display">\begin{equation}\    \begin{array}{c}        \begin{aligned}            \max \quad \mathrm{E} = \frac{Q-F-T}{F+T} \times 100 \% \\        \end{aligned}        \\        \begin{aligned}        s \cdot t\left\{\begin{array}{l}            \frac{\sum_{i = 1}^{8} b_{i} \cdot x_{i}}{L} \leq 2.28 \\            m_{i} \leq x_{i} \leq M_{i} \\            \sum_{i = 1}^{11} x_{i} \cdot r_{i} \geq 0.7069 \cdot \theta \quad 0 \quad 0<\theta \leq 1,2, \cdots 11 \\            x_{i} \text { 为整数 } \quad i = 1,2, \cdots 11            \end{array}\right.        \end{aligned}    \end{array}\end{equation}</script><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight matlab"><figcaption><span>主文件</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%重新设计建筑规划方案中各房型的最低套数约束;</span></span><br><span class="line">m=[<span class="number">50</span>;<span class="number">50</span>;<span class="number">50</span>;<span class="number">150</span>;<span class="number">100</span>;<span class="number">150</span>;<span class="number">50</span>;<span class="number">100</span>;<span class="number">50</span>;<span class="number">50</span>;<span class="number">50</span>];</span><br><span class="line"><span class="comment">%重新设计建筑规划方案中各房型的最高套数约束;</span></span><br><span class="line">MM=[<span class="number">450</span>;<span class="number">500</span>;<span class="number">300</span>;<span class="number">500</span>;<span class="number">550</span>;<span class="number">350</span>;<span class="number">450</span>;<span class="number">250</span>;<span class="number">350</span>;<span class="number">400</span>;<span class="number">250</span>];</span><br><span class="line"><span class="comment">%各房型的房型面积;</span></span><br><span class="line">b=[<span class="number">77</span>;<span class="number">98</span>;<span class="number">117</span>;<span class="number">145</span>;<span class="number">156</span>;<span class="number">167</span>;<span class="number">178</span>;<span class="number">126</span>;<span class="number">103</span>;<span class="number">129</span>;<span class="number">133</span>];</span><br><span class="line"><span class="comment">%参筹者对各种房型的满意比例;</span></span><br><span class="line">r=[<span class="number">0.4</span>;<span class="number">0.6</span>;<span class="number">0.5</span>;<span class="number">0.6</span>;<span class="number">0.7</span>;<span class="number">0.8</span>;<span class="number">0.9</span>;<span class="number">0.6</span>;<span class="number">0.2</span>;<span class="number">0.3</span>;<span class="number">0.4</span>];</span><br><span class="line"></span><br><span class="line">v = <span class="number">1</span>;</span><br><span class="line">jieguo = [];</span><br><span class="line">taoshu = [];</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">0</span>:<span class="number">10</span></span><br><span class="line">    v = <span class="number">1</span> - <span class="number">0.01</span>*<span class="built_in">i</span>;</span><br><span class="line">    x = optimvar(<span class="string">&#x27;x&#x27;</span>,<span class="number">11</span>,<span class="string">&#x27;LowerBound&#x27;</span>, <span class="number">0</span>, <span class="string">&#x27;Type&#x27;</span>,<span class="string">&#x27;integer&#x27;</span>);</span><br><span class="line">    <span class="comment">% prob = optimproblem(&#x27;Objective&#x27;, sum(r) .* x ./ sum(x) );</span></span><br><span class="line">     prob = optimproblem(<span class="string">&#x27;ObjectiveSense&#x27;</span>, <span class="string">&#x27;max&#x27;</span>, <span class="string">&#x27;Objective&#x27;</span>, qiujie(x) ); </span><br><span class="line">     t1 = sum(r .* x) ./ sum(x);</span><br><span class="line">    con1 = [</span><br><span class="line">        m &lt;= x</span><br><span class="line">        x &lt;= MM</span><br><span class="line">        <span class="number">0.7069</span> * v &lt;= t1</span><br><span class="line">        sum(x(<span class="number">1</span>:<span class="number">8</span>).*b(<span class="number">1</span>:<span class="number">8</span>))./<span class="number">102077.6</span> - sum(x(<span class="number">9</span>:<span class="number">11</span>).*b(<span class="number">9</span>:<span class="number">11</span>))./<span class="number">102077.6</span> &lt;= <span class="number">2.28</span></span><br><span class="line">    ];</span><br><span class="line">    prob.Constraints.con1 = con1;</span><br><span class="line">    [sol,fvl] = solve(prob);</span><br><span class="line">    jieguo(<span class="built_in">i</span>+<span class="number">1</span>) = fvl;</span><br><span class="line">    taoshu(:,<span class="built_in">i</span>+<span class="number">1</span>) = sol.x;</span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">final = [jieguo;taoshu]</span><br><span class="line">目标函数文件</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span> = <span class="title">qiujie</span><span class="params">(x)</span></span></span><br><span class="line"><span class="comment">%房型面积；</span></span><br><span class="line">b=[<span class="number">77</span> <span class="number">98</span> <span class="number">117</span> <span class="number">145</span> <span class="number">156</span> <span class="number">167</span> <span class="number">178</span> <span class="number">126</span> <span class="number">103</span> <span class="number">129</span> <span class="number">133</span>];</span><br><span class="line"><span class="comment">%房型开发成本；</span></span><br><span class="line">    c=[<span class="number">4263</span> <span class="number">4323</span> <span class="number">4532</span> <span class="number">5288</span> <span class="number">5268</span> <span class="number">5533</span> <span class="number">5685</span> <span class="number">4323</span> <span class="number">2663</span> <span class="number">2791</span> <span class="number">2982</span>];</span><br><span class="line"><span class="comment">%房型单元售价；</span></span><br><span class="line">p=[<span class="number">12000</span> <span class="number">10800</span> <span class="number">11200</span> <span class="number">12800</span> <span class="number">12800</span> <span class="number">13600</span> <span class="number">14000</span> <span class="number">10400</span> <span class="number">6400</span> <span class="number">6800</span> <span class="number">7200</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">%容积率R；</span></span><br><span class="line">sum1=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="number">8</span>;</span><br><span class="line">sum1=sum1+x(<span class="built_in">i</span>)*b(<span class="built_in">i</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">R=sum1/<span class="number">102077.6</span></span><br><span class="line"><span class="comment">%建筑总面积B；</span></span><br><span class="line">B=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="number">11</span>;</span><br><span class="line">B=B+x(<span class="built_in">i</span>)*b(<span class="built_in">i</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">B</span><br><span class="line"><span class="comment">%普通宅的建筑总面积b1；</span></span><br><span class="line">b1=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="number">3</span>;</span><br><span class="line">b1=b1+x(<span class="built_in">i</span>)*b(<span class="built_in">i</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">b1</span><br><span class="line"><span class="comment">%非普通宅的建筑总面积b2；</span></span><br><span class="line">b2=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">4</span>:<span class="number">8</span>;</span><br><span class="line">b2=b2+x(<span class="built_in">i</span>)*b(<span class="built_in">i</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">b2=b2+x(<span class="number">11</span>)*b(<span class="number">11</span>)</span><br><span class="line"><span class="comment">%非普通宅的售房总收入sum2；</span></span><br><span class="line">sum2=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">4</span>:<span class="number">8</span>;</span><br><span class="line">sum2=sum2+x(<span class="built_in">i</span>)*b(<span class="built_in">i</span>)*p(<span class="built_in">i</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">sum2=sum2+x(<span class="number">11</span>)*b(<span class="number">11</span>)*p(<span class="number">11</span>);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">9</span>:<span class="number">10</span>;</span><br><span class="line">sum2=sum2+x(<span class="built_in">i</span>)*b(<span class="built_in">i</span>)*p(<span class="built_in">i</span>)*b2/(b1+b2);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">sum2</span><br><span class="line"><span class="comment">%非普通宅的扣除项目总金额sum3</span></span><br><span class="line"><span class="number">17</span></span><br><span class="line">s1=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">4</span>:<span class="number">8</span></span><br><span class="line">s1=s1+x(<span class="built_in">i</span>)*b(<span class="built_in">i</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">s1=s1+x(<span class="number">11</span>)*b(<span class="number">11</span>);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">9</span>:<span class="number">10</span></span><br><span class="line">s1=s1+x(<span class="built_in">i</span>)*b(<span class="built_in">i</span>)*b2/(b1+b2);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">s1=<span class="number">777179627</span>*s1/B;</span><br><span class="line">s2=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">4</span>:<span class="number">7</span>;</span><br><span class="line">s2=s2+x(<span class="built_in">i</span>)*b(<span class="built_in">i</span>)*c(<span class="built_in">i</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">9</span>:<span class="number">10</span></span><br><span class="line">s2=s2+x(<span class="built_in">i</span>)*b(<span class="built_in">i</span>)*c(<span class="built_in">i</span>)*b2/(b1+b2);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">s2</span><br><span class="line">s3=(s1+s2)*<span class="number">0.3</span>;</span><br><span class="line">s4=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">4</span>:<span class="number">8</span>;</span><br><span class="line">s4=s4+x(<span class="built_in">i</span>)*b(<span class="built_in">i</span>)*p(<span class="built_in">i</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">s4=s4+x(<span class="number">11</span>)*b(<span class="number">11</span>)*p(<span class="number">11</span>);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">9</span>:<span class="number">10</span>;</span><br><span class="line">s4=s4+x(<span class="built_in">i</span>)*b(<span class="built_in">i</span>)*p(<span class="built_in">i</span>)*b2/(b1+b2);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">s4=s4*<span class="number">0.0565</span>;</span><br><span class="line">sum3=s1+s2+s3+s4</span><br><span class="line"><span class="comment">%非普通住宅增值额与扣除金额比例：</span></span><br><span class="line">R2=(sum2-sum3)/sum3</span><br><span class="line"></span><br><span class="line"><span class="comment">%非普通住宅增值税计算</span></span><br><span class="line">T2 = (sum2-sum3)*<span class="number">0.3</span></span><br><span class="line"><span class="comment">% if R2 &lt;= 0.5</span></span><br><span class="line"><span class="comment">%     T2 = (sum2-sum3)*0.3;</span></span><br><span class="line"><span class="comment">% elseif R2 &lt;= 1</span></span><br><span class="line"><span class="comment">%     T2 = (sum2-sum3)*0.4;</span></span><br><span class="line"><span class="comment">% elseif R2 &lt;= 2</span></span><br><span class="line"><span class="comment">%     T2 = (sum2-sum3)*0.5;</span></span><br><span class="line"><span class="comment">% else</span></span><br><span class="line"><span class="comment">%     T2 = (sum2-sum3)*0.6;</span></span><br><span class="line"><span class="comment">% end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">%普通宅的售房总收入sum4；</span></span><br><span class="line">sum4=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="number">3</span>;</span><br><span class="line">sum4=sum4+x(<span class="built_in">i</span>)*b(<span class="built_in">i</span>)*p(<span class="built_in">i</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">9</span>:<span class="number">10</span>;</span><br><span class="line">sum4=sum4+x(<span class="built_in">i</span>)*b(<span class="built_in">i</span>)*p(<span class="built_in">i</span>)*b1/(b1+b2);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">sum4</span><br><span class="line"><span class="comment">%普通宅的扣除项目总金额sum5；</span></span><br><span class="line">ss1=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="number">3</span></span><br><span class="line">ss1=ss1+x(<span class="built_in">i</span>)*b(<span class="built_in">i</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">9</span>:<span class="number">10</span></span><br><span class="line">ss1=ss1+x(<span class="built_in">i</span>)*b(<span class="built_in">i</span>)*b1/(b1+b2);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">ss1=<span class="number">777179627</span>*ss1/B;</span><br><span class="line">ss2=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="number">2</span>;</span><br><span class="line">ss2=ss2+x(<span class="built_in">i</span>)*b(<span class="built_in">i</span>)*c(<span class="built_in">i</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">9</span>:<span class="number">10</span></span><br><span class="line">ss2=ss2+x(<span class="built_in">i</span>)*b(<span class="built_in">i</span>)*c(<span class="built_in">i</span>)*b1/(b1+b2);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">ss3=(ss1+ss2)*<span class="number">0.3</span>;</span><br><span class="line">ss4=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="number">3</span>;</span><br><span class="line">ss4=ss4+x(<span class="built_in">i</span>)*b(<span class="built_in">i</span>)*p(<span class="built_in">i</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">9</span>:<span class="number">10</span></span><br><span class="line">ss4=ss4+x(<span class="built_in">i</span>)*b(<span class="built_in">i</span>)*p(<span class="built_in">i</span>)*b1/(b1+b2);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">ss4=ss4*<span class="number">0.0565</span>;</span><br><span class="line">sum5=ss1+ss2+ss3+ss4</span><br><span class="line"><span class="comment">%普通住宅增值额与扣除金额比例；</span></span><br><span class="line">R1=(sum4-sum5)/sum5</span><br><span class="line"></span><br><span class="line"><span class="comment">%普通住宅增值税计算</span></span><br><span class="line">T1 = (sum4-sum5)*<span class="number">0.3</span></span><br><span class="line"><span class="comment">% if R1 &lt;= 0.5</span></span><br><span class="line"><span class="comment">%     T1 = (sum4-sum5)*0.3;</span></span><br><span class="line"><span class="comment">% elseif R2 &lt;= 1</span></span><br><span class="line"><span class="comment">%     T1 = (sum4-sum5)*0.4;</span></span><br><span class="line"><span class="comment">% elseif R2 &lt;= 2</span></span><br><span class="line"><span class="comment">%     T1 = (sum4-sum5)*0.5;</span></span><br><span class="line"><span class="comment">% else</span></span><br><span class="line"><span class="comment">%     T1 = (sum4-sum5)*0.6;</span></span><br><span class="line"><span class="comment">% end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%总增值税</span></span><br><span class="line">T = T1 + T2</span><br><span class="line"></span><br><span class="line"><span class="comment">%房地产开发成本S1；</span></span><br><span class="line">S1=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="number">11</span>;</span><br><span class="line">S1=S1+x(<span class="built_in">i</span>)*b(<span class="built_in">i</span>)*c(<span class="built_in">i</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">S1</span><br><span class="line"><span class="comment">%房地产开发费用S2；</span></span><br><span class="line">S2=(<span class="number">777179627</span>+S1)*<span class="number">0.1</span></span><br><span class="line"><span class="comment">%与转让房地产有关的税金S3；</span></span><br><span class="line">S3=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="number">11</span>;</span><br><span class="line">S3=S3+x(<span class="built_in">i</span>)*b(<span class="built_in">i</span>)*p(<span class="built_in">i</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">S3=S3*<span class="number">0.0565</span></span><br><span class="line"><span class="comment">%其他扣除项目S4；</span></span><br><span class="line"><span class="comment">%S4=(777179627+S1)*0.2</span></span><br><span class="line"><span class="comment">%总的成本投入chengben；</span></span><br><span class="line"><span class="comment">%chengben=777179627+S1+S2+S3+S4</span></span><br><span class="line">chengben=<span class="number">777179627</span>+S1+S2+S3</span><br><span class="line"><span class="comment">%总的收入zong；</span></span><br><span class="line">zong=S3/<span class="number">0.0565</span></span><br><span class="line">f = (zong-chengben - T)/(chengben + T)</span><br></pre></td></tr></table></figure><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ol><li><a href="https://ww2.mathworks.cn/help/optim/ug/optimproblem.html">https://ww2.mathworks.cn/help/optim/ug/optimproblem.html</a></li><li><a href="https://zhuanlan.zhihu.com/p/359408474">https://zhuanlan.zhihu.com/p/359408474</a></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;这几天做题遇到了较为复杂的规划问题，在想能不能用MATLAB实现像LINGO那样的偏向用户输入的编写方法，而非MATLAB矩阵式的，最终实现了基于问题的求解代码。&lt;/p&gt;</summary>
    
    
    
    <category term="笔记" scheme="https://laelwz.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="数学建模" scheme="https://laelwz.github.io/tags/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
    <category term="MATLAB" scheme="https://laelwz.github.io/tags/MATLAB/"/>
    
  </entry>
  
  <entry>
    <title>MATLAB聚类评价指标计算</title>
    <link href="https://laelwz.github.io/posts/302112/"/>
    <id>https://laelwz.github.io/posts/302112/</id>
    <published>2022-08-15T08:03:59.000Z</published>
    <updated>2022-12-29T07:07:26.237Z</updated>
    
    <content type="html"><![CDATA[<p>发现网上很少关于MATLAB聚类评价指标如CHI、DBI以及轮廓系数的计算，其实使用一个内置函数就搞定了，但是看到很多人在重复造轮子。</p><span id="more"></span><h3 id="evalclusters-函数"><a href="#evalclusters-函数" class="headerlink" title="evalclusters()函数"></a>evalclusters()函数</h3><p>用法：</p><p><code>eva= evalclusters(data,clust,&#39;xxx&#39;);</code></p><blockquote><p><strong>data：</strong>不带标签的原始数据。<br><strong>clust：</strong>聚类后的标签，参数可以是字符串或者矩阵，字符串了话就要写matlab规定的聚类算法，比如’kmeans’。如果你用的不是matlab自带的聚类算法去聚类的，而是想评估自己写的聚类算法性能，那么clust就填写你聚类结果的标签矩阵 Label (标签) 就行了，比如你的数据data是N<em>M的，N是样本个数，M是特征维数。那么标签矩阵 Label (标签) 就是N</em>1的矩阵，代表聚类后每个样本的标签，这样就可以输出评估结果了。<br><strong>‘xxx’</strong>：可以选择四种评价指标：’CalinskiHarabasz’ | ‘DaviesBouldin’ | ‘ gap (差距) ’ | ‘silhouette’<br><strong>‘CalinskiHarabasz’</strong>: Calinski-Harabasz index (指数) (CHI，越大越好)<br><strong>‘DaviesBouldin’</strong>: Davies-Bouldin index (指数) (用的最多，越小越好)<br><strong>‘ gap (差距) ’</strong>: gap (差距) statistic (统计) (越大越好)<br><strong>‘silhouette’</strong>: silhouette coefficient (SC，轮廓系数，越大越好)</p></blockquote><h3 id="MATLAB代码"><a href="#MATLAB代码" class="headerlink" title="MATLAB代码"></a>MATLAB代码</h3><p><a href="https://lael.cc/code/MATLAB/聚类指标示例数据.xlsx">附件一.xlsx</a></p><figure class="highlight matlab"><figcaption><span>代码</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">clear</span><br><span class="line">clc</span><br><span class="line"></span><br><span class="line"><span class="comment">% kmeans聚类中有效性评价指标测试</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 问题一</span></span><br><span class="line">Data = xlsread(<span class="string">&#x27;附件1.xlsx&#x27;</span>);</span><br><span class="line"><span class="comment">% 数据标准化处理</span></span><br><span class="line">Data1 = Data(<span class="number">2</span>:<span class="number">426</span>,<span class="number">2</span>:<span class="number">3349</span>);</span><br><span class="line"><span class="comment">% 建立空数组</span></span><br><span class="line">arzs = zscore(Data1);</span><br><span class="line"><span class="comment">% 使用kmeans聚类函数</span></span><br><span class="line">[ind,C]=kmeans(arzs,<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line">data = Data1;</span><br><span class="line">label = ind; <span class="comment">% 真实标签</span></span><br><span class="line"></span><br><span class="line">eva_DBI_1= evalclusters(data,label,<span class="string">&#x27;DaviesBouldin&#x27;</span>);</span><br><span class="line">eva_SC_1= evalclusters(data,label,<span class="string">&#x27;silhouette&#x27;</span>);</span><br><span class="line">eva_CHI_1= evalclusters(data,label,<span class="string">&#x27;CalinskiHarabasz&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 这三个变量即为结果</span></span><br><span class="line">DBI_1 = eva_DBI_1.CriterionValues; <span class="comment">% 越小越好</span></span><br><span class="line">SC_1 = eva_SC_1.CriterionValues; <span class="comment">% 越大越好</span></span><br><span class="line">CHI_1 = eva_CHI_1.CriterionValues; <span class="comment">% 越大越好</span></span><br></pre></td></tr></table></figure><h4 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">DBI_1 = 0.614370044401414; % 越小越好</span><br><span class="line">SC_1 = 0.724336668984950; % 越大越好</span><br><span class="line">CHI_1 = 1.298586390458516e+03; % 越大越好</span><br></pre></td></tr></table></figure><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ol><li><a href="https://www.mathworks.com/help/stats/evalclusters.html">https://www.mathworks.com/help/stats/evalclusters.html</a></li><li><a href="https://www.cnblogs.com/kailugaji/p/16169796.html">https://www.cnblogs.com/kailugaji/p/16169796.html</a></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;发现网上很少关于MATLAB聚类评价指标如CHI、DBI以及轮廓系数的计算，其实使用一个内置函数就搞定了，但是看到很多人在重复造轮子。&lt;/p&gt;</summary>
    
    
    
    <category term="笔记" scheme="https://laelwz.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="数学建模" scheme="https://laelwz.github.io/tags/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
    <category term="MATLAB" scheme="https://laelwz.github.io/tags/MATLAB/"/>
    
  </entry>
  
  <entry>
    <title>用Scrapy框架爬取豆瓣</title>
    <link href="https://laelwz.github.io/posts/34819/"/>
    <id>https://laelwz.github.io/posts/34819/</id>
    <published>2022-06-19T07:41:42.000Z</published>
    <updated>2022-12-29T07:07:44.781Z</updated>
    
    <content type="html"><![CDATA[<p>这是一项Python爬虫课的课程综合实践作业。</p><span id="more"></span><h2 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h2><p>这个Python老师就喜欢整些花的，上课时间也飘忽不定，然后让我们用从来没用过的Scrapy框架在两天内自学完成一个简单爬虫，真不错，所以浅浅的学了一下，发现Scrapy爬虫的效率真的很高，而且稳定，用Xpath来定位标签也很方便。</p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>目标网站是豆瓣电影TOP250，还是和<a href="https://laelwz.github.io/posts/45300/">之前</a>差不多，250个电影为每页25个分为10页， 每个电影包含其电影海报、电影评分、电影评论等信息。不同的是之前通过正则表达式过滤来从源码中获取想要的信息，而且也用到了bs，因为re虽然匹配强，但是无法对信息顺序有一个记录，而这次使用Xpath来定位信息并抓取，相比手动撰写的re正则表达式，能够在F12中复制的Xpath可太舒服了。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="创建Scrapy项目"><a href="#创建Scrapy项目" class="headerlink" title="创建Scrapy项目"></a>创建Scrapy项目</h3><p><code>crapy startproject doubansp</code></p><h3 id="创建一个爬虫"><a href="#创建一个爬虫" class="headerlink" title="创建一个爬虫"></a>创建一个爬虫</h3><p>先到刚才创建的文件夹下面：</p><p><code>cd doubansp</code></p><p>再创建两个爬虫并指定名称和其域名(其实可以手动创建)：</p><p><code>scrapy genspider pictureSpider movie.douban.com</code></p><p><code>scrapy genspider imgdown movie.douban.com</code></p><h3 id="items-py"><a href="#items-py" class="headerlink" title="items.py"></a>items.py</h3><p>在这个文件中定义一些容器来存放获取到的数据。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Define here the models for your scraped items</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># See documentation in:</span></span><br><span class="line"><span class="comment"># https://docs.scrapy.org/en/latest/topics/items.html</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DoubanspItem</span>(scrapy.Item):</span><br><span class="line">    <span class="comment"># define the fields for your item here like:</span></span><br><span class="line">    <span class="comment"># name = scrapy.Field()</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 信息容器</span></span><br><span class="line">    movie_name = scrapy.Field()</span><br><span class="line">    movie_star = scrapy.Field()</span><br><span class="line">    movie_quote = scrapy.Field()</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DoubanspItem2</span>(scrapy.Item):</span><br><span class="line">    <span class="comment"># 图片容器</span></span><br><span class="line">    img_url = scrapy.Field()</span><br><span class="line">    img_names = scrapy.Field()</span><br></pre></td></tr></table></figure><h3 id="spiders-imgdown-py"><a href="#spiders-imgdown-py" class="headerlink" title="spiders/imgdown.py"></a>spiders/imgdown.py</h3><p>在这个文件中编写下载图片功能的爬虫代码。</p><p>这里使用<code>custom_settings</code>参数来指定这个爬虫使用的管道，防止图片下载的管道在运行获取信息的爬虫时造成数据错误。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">from</span> scrapy.spiders <span class="keyword">import</span> Spider</span><br><span class="line"><span class="keyword">from</span> scrapy.selector <span class="keyword">import</span> Selector</span><br><span class="line"><span class="keyword">from</span> doubansp.items <span class="keyword">import</span> DoubanspItem2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">imgdown</span>(<span class="title class_ inherited__">Spider</span>):</span><br><span class="line">    <span class="comment"># 爬虫名称</span></span><br><span class="line">    name = <span class="string">&quot;imgdown&quot;</span></span><br><span class="line">    <span class="comment"># 开始链接</span></span><br><span class="line">    start_urls = [<span class="string">&quot;https://movie.douban.com/top250&quot;</span>]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">10</span>):</span><br><span class="line">        start_urls.append(<span class="string">&quot;https://movie.douban.com/top250?start=%d&amp;filter=&quot;</span> % (<span class="number">25</span> * i))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 指定使用管道</span></span><br><span class="line">    custom_settings = &#123;</span><br><span class="line">        <span class="string">&#x27;ITEM_PIPELINES&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;doubansp.pipelines.MyImagesPipeline&#x27;</span>: <span class="number">100</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># parse function</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">parse</span>(<span class="params">self, response</span>):</span><br><span class="line"></span><br><span class="line">        item = DoubanspItem2()</span><br><span class="line">        sel = Selector(response)</span><br><span class="line">        <span class="comment"># 使用xpath定位图片链接所在位置</span></span><br><span class="line">        images = sel.xpath(<span class="string">&#x27;//*[@id=&quot;content&quot;]/div/div[1]/ol/li&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 定义图片链接与名称容器</span></span><br><span class="line">        item[<span class="string">&#x27;img_url&#x27;</span>] = []</span><br><span class="line">        item[<span class="string">&#x27;img_names&#x27;</span>] = []</span><br><span class="line">        <span class="comment"># append the url and name of the image in item</span></span><br><span class="line">        <span class="keyword">for</span> image <span class="keyword">in</span> images:</span><br><span class="line">            <span class="comment"># extract url and name of the image</span></span><br><span class="line">            <span class="comment"># 获取图片链接</span></span><br><span class="line">            site = image.xpath(<span class="string">&#x27;div/div[1]/a/img/@src&#x27;</span>).extract_first()</span><br><span class="line">            <span class="comment"># 获取图片名称</span></span><br><span class="line">            img_name = image.xpath(<span class="string">&#x27;div/div[1]/a/img/@alt&#x27;</span>).extract_first()</span><br><span class="line">            <span class="comment"># 获取电影排名顺序</span></span><br><span class="line">            rank = image.xpath(<span class="string">&#x27;div[@class=&quot;item&quot;]/div[@class=&quot;pic&quot;]/em/text()&#x27;</span>).extract_first()</span><br><span class="line"></span><br><span class="line">            item[<span class="string">&#x27;img_url&#x27;</span>].append(site)</span><br><span class="line">            item[<span class="string">&#x27;img_names&#x27;</span>].append(rank + <span class="string">&#x27; &#x27;</span> + img_name)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">yield</span> item</span><br></pre></td></tr></table></figure><h3 id="spiders-PicturespiderSpider-py"><a href="#spiders-PicturespiderSpider-py" class="headerlink" title="spiders/PicturespiderSpider.py"></a>spiders/PicturespiderSpider.py</h3><p>在这个文件中编写获取电影数据的爬虫代码，名字有picture是因为一开始准备在这个文件里编写图片下载功能的，但是后面出了点问题又在另一个爬虫文件里写，然后懒得改这个名字了，有需求可以自己改一下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">from</span> scrapy.spiders <span class="keyword">import</span> Spider</span><br><span class="line"><span class="keyword">from</span> scrapy.selector <span class="keyword">import</span> Selector</span><br><span class="line"><span class="keyword">from</span> doubansp.items <span class="keyword">import</span> DoubanspItem</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PicturespiderSpider</span>(scrapy.Spider):</span><br><span class="line">    <span class="comment"># 设置模块名称</span></span><br><span class="line">    name = <span class="string">&#x27;db&#x27;</span></span><br><span class="line">    <span class="comment"># 所爬取的域名</span></span><br><span class="line">    allowed_domains = [<span class="string">&#x27;movie.douban.com&#x27;</span>]</span><br><span class="line">    <span class="comment"># 开始的网址</span></span><br><span class="line">    start_urls = [<span class="string">&#x27;https://movie.douban.com/top250&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 指定使用管道</span></span><br><span class="line">    custom_settings = &#123;</span><br><span class="line">        <span class="string">&#x27;ITEM_PIPELINES&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;doubansp.pipelines.DoubanspPipeline&#x27;</span>: <span class="number">100</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">parse</span>(<span class="params">self, response</span>):</span><br><span class="line">        <span class="comment"># print(response.body)</span></span><br><span class="line">        selector = Selector(response)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># print(selector)</span></span><br><span class="line">        <span class="comment"># 定义Xpth所在标签，info包含一般电影信息</span></span><br><span class="line">        movies = selector.xpath(<span class="string">&#x27;//div[@class=&quot;info&quot;]&#x27;</span>)</span><br><span class="line">        <span class="keyword">for</span> movie <span class="keyword">in</span> movies:</span><br><span class="line">            <span class="comment"># 定位电影名称所在位置</span></span><br><span class="line">            movie_name = movie.xpath(<span class="string">&#x27;div[@class=&quot;hd&quot;]/a/span/text()&#x27;</span>).extract()</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(movie_name)):</span><br><span class="line">                movie_name[i] =  re.sub(<span class="string">&#x27;\xa0/\xa0&#x27;</span>, <span class="string">&#x27;&#x27;</span>, movie_name[i])</span><br><span class="line">            <span class="comment"># 定位电影电影评分所在位置</span></span><br><span class="line">            movie_star = movie.xpath(<span class="string">&#x27;div[@class=&quot;bd&quot;]/div[@class=&quot;star&quot;]/span[@class=&quot;rating_num&quot;]/text()&#x27;</span>).extract()</span><br><span class="line">            <span class="comment"># 定位电影评论所在位置</span></span><br><span class="line">            movie_quote = movie.xpath(<span class="string">&#x27;div[@class=&quot;bd&quot;]/p[@class=&quot;quote&quot;]/span[@class=&quot;inq&quot;]/text()&#x27;</span>).extract()</span><br><span class="line"></span><br><span class="line">            <span class="comment">#print(movie_name)</span></span><br><span class="line">            <span class="comment">#print(movie_star)</span></span><br><span class="line">            <span class="comment">#print(movie_quote)</span></span><br><span class="line"></span><br><span class="line">            item = DoubanspItem()</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 将爬取到的信息放进item中的容器当中</span></span><br><span class="line">            item[<span class="string">&#x27;movie_name&#x27;</span>] = movie_name</span><br><span class="line">            item[<span class="string">&#x27;movie_star&#x27;</span>] = movie_star</span><br><span class="line">            item[<span class="string">&#x27;movie_quote&#x27;</span>] = movie_quote</span><br><span class="line">            <span class="keyword">yield</span> item</span><br><span class="line">            <span class="comment"># print(movie_name)</span></span><br><span class="line">            <span class="comment"># print(movie_star)</span></span><br><span class="line">            <span class="comment"># print(movie_quote)</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 对下一页链接进行获取定位</span></span><br><span class="line">        next_page = response.selector.xpath(<span class="string">&#x27;//span[@class=&quot;next&quot;]/link/@href&#x27;</span>).extract()</span><br><span class="line">        <span class="keyword">if</span> next_page:</span><br><span class="line">            next_page = next_page[<span class="number">0</span>]</span><br><span class="line">            <span class="comment"># 将下一页的标签参数进行更改递增25</span></span><br><span class="line">            <span class="keyword">yield</span> scrapy.Request(<span class="string">&#x27;https://movie.douban.com/top250&#x27;</span> + next_page, callback=self.parse)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="pipelines-py"><a href="#pipelines-py" class="headerlink" title="pipelines.py"></a>pipelines.py</h3><p>在这个文件中，对Scrapy管道进行编辑，定义一个<code>MyImagesPipeline</code>类用于保存图片。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> itemadapter <span class="keyword">import</span> ItemAdapter</span><br><span class="line"><span class="keyword">from</span> scrapy <span class="keyword">import</span> item</span><br><span class="line"><span class="keyword">from</span> scrapy.pipelines.images <span class="keyword">import</span> ImagesPipeline</span><br><span class="line"><span class="keyword">from</span> scrapy.http <span class="keyword">import</span> Request</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">xsPipeline</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">process_item</span>(<span class="params">self, item, spider</span>):</span><br><span class="line">        <span class="keyword">return</span> item</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 图片下载管道</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyImagesPipeline</span>(<span class="title class_ inherited__">ImagesPipeline</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_media_requests</span>(<span class="params">self, item, info</span>):</span><br><span class="line">        <span class="keyword">if</span> item[<span class="string">&#x27;img_url&#x27;</span>] <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">for</span> url <span class="keyword">in</span> item[<span class="string">&#x27;img_url&#x27;</span>]:</span><br><span class="line">                <span class="keyword">yield</span> Request(url, meta=&#123;<span class="string">&#x27;item&#x27;</span>: item, <span class="string">&#x27;index&#x27;</span>: item[<span class="string">&#x27;img_url&#x27;</span>].index(url)&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># rename the image</span></span><br><span class="line">    <span class="comment"># 保存图片</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">file_path</span>(<span class="params">self, request, response=<span class="literal">None</span>, info=<span class="literal">None</span></span>):</span><br><span class="line">        <span class="comment"># 获取图片</span></span><br><span class="line">        item = request.meta[<span class="string">&#x27;item&#x27;</span>]</span><br><span class="line">        index = request.meta[<span class="string">&#x27;index&#x27;</span>]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 获取图片名称</span></span><br><span class="line">        image_name = item[<span class="string">&#x27;img_name&#x27;</span>][index]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 设置图片名称并保存</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;img/%s.jpg&#x27;</span> % (image_name)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="setting-py"><a href="#setting-py" class="headerlink" title="setting.py"></a>setting.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">BOT_NAME = <span class="string">&#x27;doubansp&#x27;</span></span><br><span class="line"></span><br><span class="line">SPIDER_MODULES = [<span class="string">&#x27;doubansp.spiders&#x27;</span>]</span><br><span class="line">NEWSPIDER_MODULE = <span class="string">&#x27;doubansp.spiders&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定编码格式</span></span><br><span class="line">FEED_EXPORT_ENCODING = <span class="string">&#x27;utf-8&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置UA</span></span><br><span class="line">USER_AGENT = <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/102.0.5005.124 Safari/537.36 Edg/102.0.1245.41&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置管道顺序（因为在爬虫文件中指定了，其实没必要）</span></span><br><span class="line">ITEM_PIPELINES = &#123;<span class="string">&#x27;doubansp.pipelines.DoubanspPipeline&#x27;</span>: <span class="number">100</span>,</span><br><span class="line">                <span class="string">&#x27;doubansp.pipelines.MyImagesPipeline&#x27;</span>:<span class="number">200</span> &#125;</span><br><span class="line"></span><br><span class="line">IMAGES_URLS_FIELD = <span class="string">&#x27;url&#x27;</span></span><br><span class="line">IMAGES_STORE = <span class="string">r&#x27;.&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="main-py"><a href="#main-py" class="headerlink" title="main.py"></a>main.py</h3><p>令人折磨的其实是这里，因为我是分成两个爬虫写的，之前没有为图片爬虫指定管道，导致数据交叉产生错误，然后又使用scrapy自带的<code>cmdline</code>函数来执行启动爬虫的命令，它会导致执行完一条命令后，直接让程序关闭，然后就G了，所以想要多条爬虫按顺序运行，必须使用<code>os.system</code>函数来执行爬虫启动命令。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">os.system(<span class="string">&quot;scrapy crawl imgdown&quot;</span>)</span><br><span class="line"><span class="comment"># 将爬取到的信息保存成josn文件</span></span><br><span class="line">os.system(<span class="string">&quot;scrapy crawl db -o douban.json -t json&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>入门Scrapy的坑还是很多的，我从早到晚就为了解决指定管道的问题，一开始剑走偏锋像网上查到的使用IF语句在管道内判断是哪个爬虫调用，然后一直出BUG或者直接没用，最后才发现直接在爬虫里指定管道就可以了，小问题浪费大时间，典中典了。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;这是一项Python爬虫课的课程综合实践作业。&lt;/p&gt;</summary>
    
    
    
    <category term="编程" scheme="https://laelwz.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Python" scheme="https://laelwz.github.io/categories/%E7%BC%96%E7%A8%8B/Python/"/>
    
    
    <category term="豆瓣" scheme="https://laelwz.github.io/tags/%E8%B1%86%E7%93%A3/"/>
    
    <category term="Python" scheme="https://laelwz.github.io/tags/Python/"/>
    
    <category term="爬虫" scheme="https://laelwz.github.io/tags/%E7%88%AC%E8%99%AB/"/>
    
    <category term="课综" scheme="https://laelwz.github.io/tags/%E8%AF%BE%E7%BB%BC/"/>
    
    <category term="Scrapy" scheme="https://laelwz.github.io/tags/Scrapy/"/>
    
  </entry>
  
  <entry>
    <title>Latex笔记</title>
    <link href="https://laelwz.github.io/posts/59143/"/>
    <id>https://laelwz.github.io/posts/59143/</id>
    <published>2022-06-12T15:28:35.000Z</published>
    <updated>2022-12-29T10:09:46.771Z</updated>
    
    <content type="html"><![CDATA[<p>记录一些Latex排版的技巧和坑。</p><span id="more"></span><h3 id="对列表中新的段落增加缩进"><a href="#对列表中新的段落增加缩进" class="headerlink" title="对列表中新的段落增加缩进"></a>对列表中新的段落增加缩进</h3><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\usepackage</span>&#123;enumitem&#125; <span class="comment">%导言下加入</span></span><br><span class="line"><span class="keyword">\setlist</span>[enumerate]&#123;listparindent=<span class="keyword">\parindent</span>&#125;</span><br></pre></td></tr></table></figure><h3 id="表格中单元格自动换行"><a href="#表格中单元格自动换行" class="headerlink" title="表格中单元格自动换行"></a>表格中单元格自动换行</h3><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\begin</span>&#123;table&#125;[H]</span><br><span class="line">    <span class="keyword">\centering</span></span><br><span class="line">    <span class="keyword">\setlength</span>&#123;<span class="keyword">\tabcolsep</span>&#125;&#123;12mm&#125;&#123; <span class="comment">%设置列表宽度</span></span><br><span class="line">    <span class="keyword">\caption</span>&#123;累积贡献率表&#125;<span class="keyword">\label</span>&#123;table<span class="built_in">_</span>4-3&#125;</span><br><span class="line">    <span class="keyword">\begin</span>&#123;tabular&#125;&#123;cp&#123;11.8cm&#125;&#125; <span class="comment">% cp&#123;超出该值自动换行&#125; 好像仅支持三线表，表格就得手动了。</span></span><br><span class="line">        <span class="keyword">\toprule</span></span><br><span class="line">                <span class="built_in">&amp;</span> <span class="keyword">\hspace</span>&#123;10em&#125;部分药材编号 <span class="keyword">\\</span></span><br><span class="line">        <span class="keyword">\midrule</span></span><br><span class="line">            1类 <span class="built_in">&amp;</span> 1、17、32、35 39、40、45、46 <span class="keyword">\\</span></span><br><span class="line">            2类 <span class="built_in">&amp;</span> 2、5、8、11、13、15、16、18、22、24、25、26、27、28、29、33，34、36、37、38、43、44、47、49 <span class="keyword">\\</span></span><br><span class="line">            3类 <span class="built_in">&amp;</span> 1、4、6、7、9、10、12、14 19、20、21、23、24、30、31、35、36、37、41、42、48、50 <span class="keyword">\\</span></span><br><span class="line">        <span class="keyword">\bottomrule</span></span><br><span class="line">    <span class="keyword">\end</span>&#123;tabular&#125;&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;table&#125;</span><br></pre></td></tr></table></figure><h3 id="为表格添加注释"><a href="#为表格添加注释" class="headerlink" title="为表格添加注释"></a>为表格添加注释</h3><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\begin</span>&#123;table&#125;[H]</span><br><span class="line">    <span class="keyword">\centering</span></span><br><span class="line">    <span class="keyword">\caption</span>&#123;分波段方差分析表&#125;<span class="keyword">\label</span>&#123;table<span class="built_in">_</span>4-4&#125;</span><br><span class="line">    <span class="keyword">\setlength</span>&#123;<span class="keyword">\tabcolsep</span>&#125;&#123;17mm&#125;&#123; <span class="comment">%设定宽度一定要包在tabular外面一层</span></span><br><span class="line">    <span class="keyword">\begin</span>&#123;tabular&#125;&#123;ccc&#125;</span><br><span class="line">        <span class="keyword">\toprule</span></span><br><span class="line">            波段  <span class="built_in">&amp;</span> F value <span class="built_in">&amp;</span> P value <span class="keyword">\\</span></span><br><span class="line">        <span class="keyword">\midrule</span></span><br><span class="line">            <span class="built_in">$</span>[901-950]<span class="built_in">$</span> <span class="built_in">&amp;</span> 192.4 <span class="built_in">&amp;</span> &lt;2e-16*** <span class="keyword">\\</span> <span class="comment">%表格中[]中括号要加数学数学公式才能打出来</span></span><br><span class="line">            <span class="built_in">$</span>[951-1000]<span class="built_in">$</span> <span class="built_in">&amp;</span> 132.9 <span class="built_in">&amp;</span> &lt;2e-16*** <span class="keyword">\\</span></span><br><span class="line">            <span class="built_in">$</span>[1001-1050]<span class="built_in">$</span> <span class="built_in">&amp;</span> 46.14 <span class="built_in">&amp;</span> 1.13E-1*** <span class="keyword">\\</span></span><br><span class="line">            <span class="built_in">$</span>[1051-1200]<span class="built_in">$</span> <span class="built_in">&amp;</span> 78.06 <span class="built_in">&amp;</span> &lt;2e-16*** <span class="keyword">\\</span></span><br><span class="line">            ... <span class="built_in">&amp;</span> ... <span class="built_in">&amp;</span> ... <span class="keyword">\\</span></span><br><span class="line">        <span class="keyword">\bottomrule</span></span><br><span class="line">    <span class="keyword">\end</span>&#123;tabular&#125;&#125;</span><br><span class="line">    <span class="keyword">\begin</span>&#123;tablenotes&#125;</span><br><span class="line">        <span class="keyword">\footnotesize</span></span><br><span class="line">        <span class="keyword">\item</span> 注：*、**、***分别代表0．1、0，05、0.01的显著性水平</span><br><span class="line">    <span class="keyword">\end</span>&#123;tablenotes&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;table&#125;</span><br></pre></td></tr></table></figure><h3 id="图片并列排放"><a href="#图片并列排放" class="headerlink" title="图片并列排放"></a>图片并列排放</h3><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\begin</span>&#123;figure&#125;[H]</span><br><span class="line">    <span class="keyword">\centering</span></span><br><span class="line">    <span class="keyword">\begin</span>&#123;minipage&#125;[t]&#123;0.48<span class="keyword">\textwidth</span>&#125; <span class="comment">%设定宽度</span></span><br><span class="line">    <span class="keyword">\centering</span></span><br><span class="line">    <span class="keyword">\includegraphics</span>[width=.8<span class="keyword">\textwidth</span>]&#123;figure<span class="built_in">_</span>4-24.jpg&#125;</span><br><span class="line">    <span class="keyword">\caption</span>&#123;不同种类药材光谱数据均值曲线&#125;<span class="keyword">\label</span>&#123;figure<span class="built_in">_</span>4-24&#125;</span><br><span class="line">    <span class="keyword">\end</span>&#123;minipage&#125;</span><br><span class="line">    <span class="keyword">\begin</span>&#123;minipage&#125;[t]&#123;0.48<span class="keyword">\textwidth</span>&#125;</span><br><span class="line">    <span class="keyword">\centering</span></span><br><span class="line">    <span class="keyword">\includegraphics</span>[width=.8<span class="keyword">\textwidth</span>]&#123;figure<span class="built_in">_</span>4-25.jpg&#125;</span><br><span class="line">    <span class="keyword">\caption</span>&#123;不同种类药光谱数据标准差曲线&#125;<span class="keyword">\label</span>&#123;figure<span class="built_in">_</span>4-25&#125;</span><br><span class="line">    <span class="keyword">\end</span>&#123;minipage&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;figure&#125;</span><br></pre></td></tr></table></figure><h3 id="图表编号混乱可以重置计数器"><a href="#图表编号混乱可以重置计数器" class="headerlink" title="图表编号混乱可以重置计数器"></a>图表编号混乱可以重置计数器</h3><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\setcounter</span>&#123;table&#125;&#123;0&#125; <span class="comment">%重置table计数器</span></span><br></pre></td></tr></table></figure><h3 id="行内公式大小修正"><a href="#行内公式大小修正" class="headerlink" title="行内公式大小修正"></a>行内公式大小修正</h3><p>可以用的字体有:</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\displaystyle</span> 标准</span><br><span class="line"><span class="keyword">\textstyle</span> 行内</span><br><span class="line"><span class="keyword">\scriptstyle</span> 第一层上下标</span><br><span class="line"><span class="keyword">\scriptscriptstyle</span> 第二层上下标</span><br></pre></td></tr></table></figure><p>案例：</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span>P=<span class="keyword">\displaystyle</span>&#123;<span class="keyword">\frac</span>&#123;T P&#125;&#123;T P+F P&#125;&#125;<span class="built_in">$</span> <span class="comment">% \displaystyle在数学公式符号内将需要修正大小的数学公式括起来</span></span><br></pre></td></tr></table></figure><h3 id="表格中单元格合并"><a href="#表格中单元格合并" class="headerlink" title="表格中单元格合并"></a>表格中单元格合并</h3><p>合并一行多列：\multicolumn{cols}{pos}{text}</p><p>合并多行一列：\multirow{rows}{width}{text}</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\begin</span>&#123;table&#125;[H]</span><br><span class="line">    <span class="keyword">\centering</span></span><br><span class="line">    <span class="keyword">\setlength</span>&#123;<span class="keyword">\tabcolsep</span>&#125;&#123;5.62mm&#125;&#123;</span><br><span class="line">    <span class="keyword">\caption</span>&#123;累积贡献率表&#125;<span class="keyword">\label</span>&#123;table<span class="built_in">_</span>5-3&#125;</span><br><span class="line">    <span class="keyword">\begin</span>&#123;tabular&#125;&#123;cccccc&#125;</span><br><span class="line">        <span class="keyword">\toprule</span></span><br><span class="line">            数据 <span class="built_in">&amp;</span> 模型 <span class="built_in">&amp;</span> 召回率 <span class="built_in">&amp;</span> 精确率 <span class="built_in">&amp;</span> 准确率 <span class="built_in">&amp;</span> F1值 <span class="keyword">\\</span></span><br><span class="line">        <span class="keyword">\midrule</span></span><br><span class="line">        <span class="comment">%\multirow命令所覆盖的单元格需要用~代替</span></span><br><span class="line">            <span class="keyword">\multirow</span>&#123;6&#125;*&#123;原始数据&#125; <span class="built_in">&amp;</span> SVC <span class="built_in">&amp;</span> 0.869 <span class="built_in">&amp;</span> 0.876 <span class="built_in">&amp;</span> 0.871 <span class="built_in">&amp;</span> 0.870 <span class="keyword">\\</span> </span><br><span class="line">            ~ <span class="built_in">&amp;</span> RF <span class="built_in">&amp;</span> 0.500 <span class="built_in">&amp;</span> 0.538 <span class="built_in">&amp;</span> 0.535 <span class="built_in">&amp;</span> 0.506 <span class="keyword">\\</span></span><br><span class="line">            ~ <span class="built_in">&amp;</span> XGBoost <span class="built_in">&amp;</span> 0.566 <span class="built_in">&amp;</span> 0.599 <span class="built_in">&amp;</span> .588 <span class="built_in">&amp;</span> 0.568 <span class="keyword">\\</span></span><br><span class="line">            ~ <span class="built_in">&amp;</span> GBDT <span class="built_in">&amp;</span> 0.502 <span class="built_in">&amp;</span> 0.520 <span class="built_in">&amp;</span> 0.529 <span class="built_in">&amp;</span> 0.500 <span class="keyword">\\</span></span><br><span class="line">            ~ <span class="built_in">&amp;</span> LightGBM <span class="built_in">&amp;</span> 0.570 <span class="built_in">&amp;</span> 0.604 <span class="built_in">&amp;</span> 0.600 <span class="built_in">&amp;</span> 0.571 <span class="keyword">\\</span></span><br><span class="line">            ~ <span class="built_in">&amp;</span> MLP <span class="built_in">&amp;</span> 0.514 <span class="built_in">&amp;</span> 0.538 <span class="built_in">&amp;</span> 0.550 <span class="built_in">&amp;</span> 0.509 <span class="keyword">\\</span></span><br><span class="line">            <span class="keyword">\multirow</span>&#123;3&#125;*&#123;PCA降维数据&#125; <span class="built_in">&amp;</span> SVC <span class="built_in">&amp;</span> 0.876 <span class="built_in">&amp;</span> 0.869 <span class="built_in">&amp;</span> 0.870 <span class="built_in">&amp;</span> 0.871 <span class="keyword">\\</span></span><br><span class="line">            ~ <span class="built_in">&amp;</span> RF <span class="built_in">&amp;</span> 0.538 <span class="built_in">&amp;</span> 0.500 <span class="built_in">&amp;</span> 0.506 <span class="built_in">&amp;</span> 0.535 <span class="keyword">\\</span></span><br><span class="line">            ~ <span class="built_in">&amp;</span> XGBoost <span class="built_in">&amp;</span> 0.599 <span class="built_in">&amp;</span> 0. .566 <span class="built_in">&amp;</span> 0.568 <span class="built_in">&amp;</span> 0.588 <span class="keyword">\\</span></span><br><span class="line">        <span class="keyword">\bottomrule</span></span><br><span class="line">    <span class="keyword">\end</span>&#123;tabular&#125;&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;table&#125;</span><br></pre></td></tr></table></figure><h3 id="表格续前表"><a href="#表格续前表" class="headerlink" title="表格续前表"></a>表格续前表</h3><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\begin</span>&#123;center&#125;</span><br><span class="line">    <span class="keyword">\setlength</span>&#123;<span class="keyword">\tabcolsep</span>&#125;&#123;5.62mm&#125;&#123;</span><br><span class="line"><span class="keyword">\begin</span>&#123;longtable&#125;&#123;cccccc&#125;</span><br><span class="line"><span class="keyword">\caption</span>&#123;基于机器学习方法的药材产地鉴别模型比较&#125;<span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\label</span>&#123;revenuepatternexplain&#125; <span class="keyword">\\</span></span><br><span class="line">        <span class="keyword">\endfirsthead</span> <span class="comment">%此命令以上为第一页表头</span></span><br><span class="line">        <span class="keyword">\toprule</span> <span class="comment">%一条线</span></span><br><span class="line">        <span class="keyword">\endhead</span> <span class="comment">%此命令以上为续前表的表头</span></span><br><span class="line">            数据 <span class="built_in">&amp;</span> 模型 <span class="built_in">&amp;</span> 召回率 <span class="built_in">&amp;</span> 精确率 <span class="built_in">&amp;</span> 准确率 <span class="built_in">&amp;</span> F1值 <span class="keyword">\\</span></span><br><span class="line">        <span class="keyword">\midrule</span></span><br><span class="line">            <span class="keyword">\multirow</span>&#123;7&#125;*&#123;原始数据&#125; <span class="built_in">&amp;</span> SVC <span class="built_in">&amp;</span> 0.869 <span class="built_in">&amp;</span> 0.876 <span class="built_in">&amp;</span> 0.871 <span class="built_in">&amp;</span> 0.870 <span class="keyword">\\</span></span><br><span class="line">            ~ <span class="built_in">&amp;</span> RF <span class="built_in">&amp;</span> 0.500 <span class="built_in">&amp;</span> 0.538 <span class="built_in">&amp;</span> 0.535 <span class="built_in">&amp;</span> 0.506 <span class="keyword">\\</span></span><br><span class="line">            ~ <span class="built_in">&amp;</span> XGBoost <span class="built_in">&amp;</span> 0.566 <span class="built_in">&amp;</span> 0.599 <span class="built_in">&amp;</span> .588 <span class="built_in">&amp;</span> 0.568 <span class="keyword">\\</span></span><br><span class="line">            ~ <span class="built_in">&amp;</span> GBDT <span class="built_in">&amp;</span> 0.502 <span class="built_in">&amp;</span> 0.520 <span class="built_in">&amp;</span> 0.529 <span class="built_in">&amp;</span> 0.500 <span class="keyword">\\</span></span><br><span class="line">            ~ <span class="built_in">&amp;</span> LightGBM <span class="built_in">&amp;</span> 0.570 <span class="built_in">&amp;</span> 0.604 <span class="built_in">&amp;</span> 0.600 <span class="built_in">&amp;</span> 0.571 <span class="keyword">\\</span></span><br><span class="line">            ~ <span class="built_in">&amp;</span> MLP <span class="built_in">&amp;</span> 0.514 <span class="built_in">&amp;</span> 0.538 <span class="built_in">&amp;</span> 0.550 <span class="built_in">&amp;</span> 0.509 <span class="keyword">\\</span></span><br><span class="line">            <span class="keyword">\multirow</span>&#123;7&#125;*&#123;PCA降维数据&#125; <span class="built_in">&amp;</span> SVC <span class="built_in">&amp;</span> 0.876 <span class="built_in">&amp;</span> 0.869 <span class="built_in">&amp;</span> 0.870 <span class="built_in">&amp;</span> 0.871 <span class="keyword">\\</span></span><br><span class="line">            ~ <span class="built_in">&amp;</span> RF <span class="built_in">&amp;</span> 0.538 <span class="built_in">&amp;</span> 0.500 <span class="built_in">&amp;</span> 0.506 <span class="built_in">&amp;</span> 0.535 <span class="keyword">\\</span></span><br><span class="line">            ~ <span class="built_in">&amp;</span> XGBoost <span class="built_in">&amp;</span> 0.599 <span class="built_in">&amp;</span> 0. .566 <span class="built_in">&amp;</span> 0.568 <span class="built_in">&amp;</span> 0.588 <span class="keyword">\\</span></span><br><span class="line">            ~ <span class="built_in">&amp;</span> GBDT <span class="built_in">&amp;</span> 0.539 <span class="built_in">&amp;</span> 0.498 <span class="built_in">&amp;</span> 0.500 <span class="built_in">&amp;</span> 0.541 <span class="keyword">\\</span></span><br><span class="line">            ~ <span class="built_in">&amp;</span> LighGBM <span class="built_in">&amp;</span> 0.516 <span class="built_in">&amp;</span> 0.473 <span class="built_in">&amp;</span> 0.475 <span class="built_in">&amp;</span> 0.512 <span class="keyword">\\</span></span><br><span class="line">            ~ <span class="built_in">&amp;</span> MLP <span class="built_in">&amp;</span> 0.521 <span class="built_in">&amp;</span> 0488 <span class="built_in">&amp;</span> 0.482 <span class="built_in">&amp;</span> 0.521 <span class="keyword">\\</span></span><br><span class="line">            <span class="keyword">\multirow</span>&#123;7&#125;*&#123;原始数据&#125; <span class="built_in">&amp;</span> SVC <span class="built_in">&amp;</span> 0.914 <span class="built_in">&amp;</span> 0.921 <span class="built_in">&amp;</span> 0.913 <span class="built_in">&amp;</span> 0.916 <span class="keyword">\\</span></span><br><span class="line">            ~ <span class="built_in">&amp;</span> RF <span class="built_in">&amp;</span> 0.915 <span class="built_in">&amp;</span> 0.929 <span class="built_in">&amp;</span> 0.927 <span class="built_in">&amp;</span> 0.915 <span class="keyword">\\</span></span><br><span class="line">            ~ <span class="built_in">&amp;</span> XGBoost <span class="built_in">&amp;</span> 0.970 <span class="built_in">&amp;</span> 0.974 <span class="built_in">&amp;</span> 0.970 <span class="built_in">&amp;</span> 0.920 <span class="keyword">\\</span></span><br><span class="line">            ~ <span class="built_in">&amp;</span> GBDT <span class="built_in">&amp;</span> 0.881 <span class="built_in">&amp;</span> 0.889 <span class="built_in">&amp;</span> 0.900 <span class="built_in">&amp;</span> 0.883 <span class="keyword">\\</span></span><br><span class="line">            ~ <span class="built_in">&amp;</span> LightGBM <span class="built_in">&amp;</span> 0.964 <span class="built_in">&amp;</span> 0.968 <span class="built_in">&amp;</span> 0.964 <span class="built_in">&amp;</span> 0.964 <span class="keyword">\\</span></span><br><span class="line">            ~ <span class="built_in">&amp;</span> MLP <span class="built_in">&amp;</span> 0.813 <span class="built_in">&amp;</span> 0.839 <span class="built_in">&amp;</span> 0.828 <span class="built_in">&amp;</span> 0.817 <span class="keyword">\\</span></span><br><span class="line">            <span class="keyword">\multirow</span>&#123;7&#125;*&#123;原始数据&#125; <span class="built_in">&amp;</span> SVC <span class="built_in">&amp;</span> 0.861 <span class="built_in">&amp;</span> 0.868 <span class="built_in">&amp;</span> 0.863 <span class="built_in">&amp;</span> 0.860 <span class="keyword">\\</span></span><br><span class="line">            ~ <span class="built_in">&amp;</span> RF <span class="built_in">&amp;</span> 0.869 <span class="built_in">&amp;</span> 0.882 <span class="built_in">&amp;</span> 0.857 <span class="built_in">&amp;</span> 0.861 <span class="keyword">\\</span></span><br><span class="line">            ~ <span class="built_in">&amp;</span> XGBoost <span class="built_in">&amp;</span> 0.915 <span class="built_in">&amp;</span> 0.935 <span class="built_in">&amp;</span> 0.921 <span class="built_in">&amp;</span> 0.920 <span class="keyword">\\</span></span><br><span class="line">            ~ <span class="built_in">&amp;</span> GBDT <span class="built_in">&amp;</span> 0.793 <span class="built_in">&amp;</span> 0.834 <span class="built_in">&amp;</span> 0.816 <span class="built_in">&amp;</span> 0.799 <span class="keyword">\\</span></span><br><span class="line">            ~ <span class="built_in">&amp;</span> LightGBM <span class="built_in">&amp;</span> 0.923 <span class="built_in">&amp;</span> 0.932 <span class="built_in">&amp;</span> 0.925 <span class="built_in">&amp;</span> 0.923 <span class="keyword">\\</span></span><br><span class="line">            ~ <span class="built_in">&amp;</span> MLP <span class="built_in">&amp;</span> 0.812 <span class="built_in">&amp;</span> 0.820 <span class="built_in">&amp;</span> 0.815 <span class="built_in">&amp;</span> 0.809 <span class="keyword">\\</span></span><br><span class="line">            <span class="keyword">\multirow</span>&#123;7&#125;*&#123;原始数据&#125; <span class="built_in">&amp;</span> SVC <span class="built_in">&amp;</span> 0.824 <span class="built_in">&amp;</span> 0.835 <span class="built_in">&amp;</span> 0825 <span class="built_in">&amp;</span> 0.823 <span class="keyword">\\</span></span><br><span class="line">            ~ <span class="built_in">&amp;</span> RF <span class="built_in">&amp;</span> 0.834 <span class="built_in">&amp;</span> 0.871 <span class="built_in">&amp;</span> 0.853 <span class="built_in">&amp;</span> 0.841 <span class="keyword">\\</span></span><br><span class="line">            ~ <span class="built_in">&amp;</span> XGBoost <span class="built_in">&amp;</span> 0.881 <span class="built_in">&amp;</span> 0.897 <span class="built_in">&amp;</span> 0.887 <span class="built_in">&amp;</span> 0.884 <span class="keyword">\\</span></span><br><span class="line">            ~ <span class="built_in">&amp;</span> GBDT <span class="built_in">&amp;</span> 0.814 <span class="built_in">&amp;</span> 0.835 <span class="built_in">&amp;</span> 0.822 <span class="built_in">&amp;</span> 0.822 <span class="keyword">\\</span></span><br><span class="line">            ~ <span class="built_in">&amp;</span> LightGBM <span class="built_in">&amp;</span> 0.850 <span class="built_in">&amp;</span> 0.866 <span class="built_in">&amp;</span> 0.854 <span class="built_in">&amp;</span> 0.853 <span class="keyword">\\</span></span><br><span class="line">            ~ <span class="built_in">&amp;</span> MLP <span class="built_in">&amp;</span> 0.787 <span class="built_in">&amp;</span> 0.795 <span class="built_in">&amp;</span> 0.790 <span class="built_in">&amp;</span> 0.785 <span class="keyword">\\</span></span><br><span class="line">        <span class="keyword">\bottomrule</span></span><br><span class="line"><span class="keyword">\end</span>&#123;longtable&#125;&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;center&#125;</span><br></pre></td></tr></table></figure><h3 id="简单三线表"><a href="#简单三线表" class="headerlink" title="简单三线表"></a>简单三线表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">\begin&#123;table&#125;[H]</span><br><span class="line">    \centering</span><br><span class="line">    \setlength&#123;\tabcolsep&#125;&#123;12mm&#125;&#123; %设置列表宽度</span><br><span class="line">    \caption&#123;各管线费用&#125;\label&#123;table_1&#125;</span><br><span class="line">    \begin&#123;tabular&#125;&#123;cc&#125;</span><br><span class="line">        \toprule</span><br><span class="line">            管线 &amp; 铺设费用 \\</span><br><span class="line">        \midrule</span><br><span class="line">            A炼油厂 &amp; 5.6万元/km \\</span><br><span class="line">            B炼油厂 &amp; 6.0万元/km \\</span><br><span class="line">            共用管线 &amp; 7.2万元/km \\</span><br><span class="line">        \bottomrule</span><br><span class="line">    \end&#123;tabular&#125;&#125;</span><br><span class="line">\end&#123;table&#125;</span><br></pre></td></tr></table></figure><h3 id="公式中实现等号对齐"><a href="#公式中实现等号对齐" class="headerlink" title="公式中实现等号对齐"></a>公式中实现等号对齐</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">\begin&#123;equation&#125;</span><br><span class="line">    \begin&#123;split&#125;</span><br><span class="line">        f(x, y, m) = &amp; P_&#123;1&#125; \sqrt&#123;x^&#123;2&#125;+(y-a)^&#123;2&#125;&#125;+P_&#123;2&#125; \sqrt&#123;(c-x)^&#123;2&#125;+(b-m-y)^&#123;2&#125;&#125; \\</span><br><span class="line">        &amp; +\left(Q+P_&#123;2&#125;\right) \sqrt&#123;(l-c)^&#123;2&#125;+m^&#123;2&#125;&#125;+ P^&#123;\prime&#125; y</span><br><span class="line">    \end&#123;split&#125;</span><br><span class="line">\end&#123;equation&#125;\label&#123;eqx1&#125;</span><br></pre></td></tr></table></figure><h3 id="引用文献实现超链接"><a href="#引用文献实现超链接" class="headerlink" title="引用文献实现超链接"></a>引用文献实现超链接</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\cite&#123;bib:seven&#125;</span><br></pre></td></tr></table></figure><h3 id="并列图片"><a href="#并列图片" class="headerlink" title="并列图片"></a>并列图片</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">\end&#123;table&#125;</span><br><span class="line">\begin&#123;figure&#125;[H]</span><br><span class="line">    \centering</span><br><span class="line">    \caption&#123;LDA与SVM在近红外光谱数据中的混淆矩阵示意图&#125;\label&#123;LDA_SVM&#125;</span><br><span class="line">        \begin&#123;minipage&#125;[t]&#123;0.48\textwidth&#125;</span><br><span class="line">            \centering</span><br><span class="line">            \includegraphics[width=.9\textwidth]&#123;近红外_LDA.eps&#125;</span><br><span class="line">            \caption*&#123;LDA&#125;</span><br><span class="line">        \end&#123;minipage&#125;</span><br><span class="line">        \begin&#123;minipage&#125;[t]&#123;0.48\textwidth&#125;</span><br><span class="line">            \centering</span><br><span class="line">            \includegraphics[width=.9\textwidth]&#123;近红外_SVM.eps&#125;</span><br><span class="line">            \caption*&#123;SVM&#125;</span><br><span class="line">        \end&#123;minipage&#125;</span><br><span class="line">\end&#123;figure&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;记录一些Latex排版的技巧和坑。&lt;/p&gt;</summary>
    
    
    
    <category term="笔记" scheme="https://laelwz.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Latex" scheme="https://laelwz.github.io/tags/Latex/"/>
    
    <category term="排版" scheme="https://laelwz.github.io/tags/%E6%8E%92%E7%89%88/"/>
    
    <category term="数学建模" scheme="https://laelwz.github.io/tags/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
  </entry>
  
  <entry>
    <title>MySQL学习笔记</title>
    <link href="https://laelwz.github.io/posts/39805/"/>
    <id>https://laelwz.github.io/posts/39805/</id>
    <published>2022-06-07T12:34:51.000Z</published>
    <updated>2022-12-29T07:08:16.888Z</updated>
    
    <content type="html"><![CDATA[<p>期末了，梳理一遍MySQL，防止挂科。</p><span id="more"></span><h2 id="数据库的管理"><a href="#数据库的管理" class="headerlink" title="数据库的管理"></a>数据库的管理</h2><h3 id="数据库的创建"><a href="#数据库的创建" class="headerlink" title="数据库的创建"></a>数据库的创建</h3><p>例：创建一个名称为mysqltest的数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database if not exists mysqltest;</span><br></pre></td></tr></table></figure><p>例：创建教务管理数据库teaching，并指定字符集为gb2312，校对原则为gb2312_chinese_ci。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">create database teaching </span><br><span class="line">default character set gb2312</span><br><span class="line">default collate gb2312_chinese_ci;</span><br></pre></td></tr></table></figure><h3 id="打开并设置数据库"><a href="#打开并设置数据库" class="headerlink" title="打开并设置数据库"></a>打开并设置数据库</h3><p>例：打开前面创建的teaching数据库，设置其为当前默认的数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use teaching;</span><br></pre></td></tr></table></figure><h3 id="修改数据库参数"><a href="#修改数据库参数" class="headerlink" title="修改数据库参数"></a>修改数据库参数</h3><p>例：将前面创建的teaching的默认字符集设置为UTF8，校对规则为utf8_unicode_ci</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">alter database teaching</span><br><span class="line">default character set utf8</span><br><span class="line">default collate utf8_unicode_ci;</span><br></pre></td></tr></table></figure><h3 id="查看字符集与校对规则"><a href="#查看字符集与校对规则" class="headerlink" title="查看字符集与校对规则"></a>查看字符集与校对规则</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">show variables like ‘char%’;</span><br><span class="line">show variables like ‘collation_%;</span><br></pre></td></tr></table></figure><h3 id="显示数据库结构"><a href="#显示数据库结构" class="headerlink" title="显示数据库结构"></a>显示数据库结构</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show create database teaching;</span><br></pre></td></tr></table></figure><h3 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h3><p>例：删除前面创建的teaching数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop database teaching;</span><br></pre></td></tr></table></figure><h2 id="数据表的管理"><a href="#数据表的管理" class="headerlink" title="数据表的管理"></a>数据表的管理</h2><h3 id="数据表的创建"><a href="#数据表的创建" class="headerlink" title="数据表的创建"></a>数据表的创建</h3><p>例：创建学生成绩管理系统数据库中的学生表：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">create table student (</span><br><span class="line">    studentno char(8),</span><br><span class="line">    name varchar(10),</span><br><span class="line">    sex enum(&#x27;男&#x27;,&#x27;女&#x27;),</span><br><span class="line">    birthday date,</span><br><span class="line">    classno char(7)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="数据表的修改"><a href="#数据表的修改" class="headerlink" title="数据表的修改"></a>数据表的修改</h3><h4 id="添加列（字段）"><a href="#添加列（字段）" class="headerlink" title="添加列（字段）"></a>添加列（字段）</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">alter table 表名</span><br><span class="line">add 新列名 数据类型</span><br><span class="line">[约束条件] [ first | after 已存在列名];</span><br></pre></td></tr></table></figure><p>例：在student表中添加一个电话字段（tel），将其放到sex字段之后：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alter table student </span><br><span class="line">add tel char(11) after sex;</span><br></pre></td></tr></table></figure><h4 id="修改列"><a href="#修改列" class="headerlink" title="修改列"></a>修改列</h4><p>例：修改student表中的tel字段的列名为Email，数据类型为varchar(30);</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table student change tel Email varchar(30);</span><br></pre></td></tr></table></figure><h4 id="删除列"><a href="#删除列" class="headerlink" title="删除列"></a>删除列</h4><p>例：删除student表中的Email列;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table student drop Email;</span><br></pre></td></tr></table></figure><h4 id="修改表名称"><a href="#修改表名称" class="headerlink" title="修改表名称"></a>修改表名称</h4><p>例：将student表重命名为stu:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table student rename to stu;</span><br></pre></td></tr></table></figure><h4 id="修改列的数据类型和位置"><a href="#修改列的数据类型和位置" class="headerlink" title="修改列的数据类型和位置"></a>修改列的数据类型和位置</h4><p>例：修改student表中的Email字段的数据类型为varchar(20)，将其移动到birthday字段之后;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alter table student </span><br><span class="line">modify Email varchar(20) after birthday;</span><br></pre></td></tr></table></figure><h4 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h4><p>例：删除stu表;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop table stu;</span><br></pre></td></tr></table></figure><h4 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h4><p>例：给教师表添加两条记录(‘T01’,‘张三’和‘T02’,‘李四’)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">insert into teacher(teacherno,name) values (&#x27;T01&#x27;,&#x27;张三&#x27;);</span><br><span class="line">insert into teacher values(&#x27;T02&#x27;,&#x27;李四&#x27;);</span><br><span class="line">- 或</span><br><span class="line">insert into teacher values(‘T01’,‘张三’),(&#x27;T02&#x27;,&#x27;李四&#x27;);</span><br></pre></td></tr></table></figure><p>例：利用set子句向teacher表插入数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into teacher set name=&#x27;王五&#x27;, teacherno=&#x27;T03&#x27;;</span><br></pre></td></tr></table></figure><h4 id="修改数据"><a href="#修改数据" class="headerlink" title="修改数据"></a>修改数据</h4><p>例：给将学号为61130702的学生姓名修改为孙乐然</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update student set name=&#x27;孙乐然&#x27; where studentno=&#x27;61130702&#x27;;</span><br></pre></td></tr></table></figure><h4 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h4><p>例：将成绩表中C02成绩最低的1个学生的信息删除</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">delete  from score where courseno=&#x27;C02&#x27;</span><br><span class="line">order by finalscore limit 1;</span><br></pre></td></tr></table></figure><p>例：清除成绩表中的所有信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delete from score;</span><br></pre></td></tr></table></figure><h4 id="表约束"><a href="#表约束" class="headerlink" title="表约束"></a>表约束</h4><ol><li><p>非空约束</p><ul><li><p>null：字段值可以为空</p></li><li><p>not null：字段值不允许为空</p><p>例：创建教师表，设置教师编号为非空约束</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">create table teacher(</span><br><span class="line">teacherno char(3) not null,</span><br><span class="line">name varchar(10)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>例：修改教师表，设置姓名列为非空约束</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table teacher modify name varchar(10) not null</span><br></pre></td></tr></table></figure><p>例：修改教师表，去除姓名列的非空约束</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table teacher modify name varchar(10);</span><br></pre></td></tr></table></figure></li></ul></li><li><p>主键约束</p><ul><li>主键列的数据唯一，不允许为空，主键唯一标识表中一条记录。</li><li>一张表中最多一个主键约束。</li><li><p>主键可以是一个字段，也可以是多个字段。</p><p>例：创建教师表，设置教师编号为主键约束</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">create table teacher(</span><br><span class="line">teacherno char(3) primary key,</span><br><span class="line">    name varchar(10)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>例：修改教师表，去除主键约束</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table teacher drop primary key;</span><br></pre></td></tr></table></figure><p>例：修改教师表，设置教师编号列为主键约束</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table teacher modify teacherno char(3) primary key;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>唯一约束</p><ul><li>该列唯一，允许为空</li><li><p>一个数据表只能创建一个主键，但可以有多个唯一约束</p><p>例：创建教师表，设置教师编号为唯一约束</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">create table teacher(</span><br><span class="line">teacherno char(3) unique,</span><br><span class="line">    name varchar(10)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>例：修改教师表，去除唯一约束</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table teacher drop index teacherno;</span><br></pre></td></tr></table></figure><p>例：修改教师表，设置教师编号列为唯一约束</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table teacher modify teacherno char(3) unique;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>默认约束</p><ul><li><p>指定某列的默认值</p><p>例：创建学生表student，设置性别的默认约束为男</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">create table student(</span><br><span class="line">studentno char(8),</span><br><span class="line">    name varcahr(10),</span><br><span class="line">    sex enum(&#x27;男&#x27;, &#x27;女&#x27;) default &#x27;男&#x27;,</span><br><span class="line">    brithday date,</span><br><span class="line">    classNo char(7)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>例：删除学生表的默认约束</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table student modify sex enum(&#x27;男&#x27;， &#x27;女&#x27;);</span><br></pre></td></tr></table></figure><p>例：对学生表student的sex列，修改默认约束为男</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table student modify sex enum(&#x27;男&#x27;, &#x27;女&#x27;) default &#x27;男&#x27;;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>外键约束</p><ul><li>建立子表与父表的关联，保证数据一致性，父表中信息更新，子表中对应的信息相应改变。</li><li>原则：必须依赖于已存在的父表的主键</li><li><p>外键可以为空值</p><p>例：创建班级表，表中的teacherno字段为外键（主表是teacher表）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">create table class (</span><br><span class="line">    classno char(7) primary key,</span><br><span class="line">    name varchar(20),</span><br><span class="line">    teacherno char(3),</span><br><span class="line">    foreign key(teacherno)</span><br><span class="line">    references teacher(teacherno)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>例：删除班级表teacherno字段上的外键约束</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table class drop foreign key teacherno;</span><br></pre></td></tr></table></figure><p>例：在班级表的teacherno字段上添加外键约束</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table class add foreign key (teacherno) references teacher(teacherno);</span><br></pre></td></tr></table></figure></li></ul></li><li><p>检查约束</p><ul><li><p>限定列的数据值范围</p><p>例：创建成绩表，设置成绩字段的取值范围是0～100</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">create table score(</span><br><span class="line">courseno char(3),</span><br><span class="line">    studentno char(8),</span><br><span class="line">    finalscore tinyint default 0</span><br><span class="line">    check(finalscore &gt;= 0 &amp;&amp; score &lt;= 100)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>例：删除成绩表上的检查约束</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table score drop check score_chk_1;</span><br></pre></td></tr></table></figure><p>例：在成绩表的成绩字段添加检查约束（&gt;=0）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table score add check(finalscore &gt;= 0);</span><br></pre></td></tr></table></figure></li></ul></li></ol><h2 id="简单查询"><a href="#简单查询" class="headerlink" title="简单查询"></a>简单查询</h2><h3 id="distinct-消除重复行"><a href="#distinct-消除重复行" class="headerlink" title="distinct 消除重复行"></a>distinct 消除重复行</h3><ul><li>distinct子句可以消除查询结果中的重复行</li></ul><p>例：查找所有参加考试的同学的学号，重复的行只出现一次</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select distinct stuno from tbl_score;</span><br></pre></td></tr></table></figure><h3 id="where-in-判断过滤"><a href="#where-in-判断过滤" class="headerlink" title="where in 判断过滤"></a>where in 判断过滤</h3><ul><li>where设置了查询条件</li><li>in关键字可以判断某个字段的值是否在集合中</li><li>查询不在集合中使用not in</li><li>多个判断条件使用and连接</li></ul><p>例：查询学号为60115101,60115102,60115103,60115104四位同学的成绩</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select * from tbl_score where stuno in</span><br><span class="line">(60115101,60115102,60115103,60115104)</span><br></pre></td></tr></table></figure><h3 id="between-and-指定查询范围"><a href="#between-and-指定查询范围" class="headerlink" title="between and 指定查询范围"></a>between and 指定查询范围</h3><ul><li>排除范围使用not between</li></ul><p>例：查询成绩在80—90之间的学号、课程号、成绩</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from tbl_score where score between 80 and 90;</span><br></pre></td></tr></table></figure><h3 id="like-通配符查询"><a href="#like-通配符查询" class="headerlink" title="like 通配符查询"></a>like 通配符查询</h3><ul><li>like关键字结合通配符，通过字符串比较来选择符合条件的行</li><li>“%” 表示0个或多个字符</li><li>“_”表示匹配一个字符</li></ul><h3 id="is-null-查询空值"><a href="#is-null-查询空值" class="headerlink" title="is null 查询空值"></a>is null 查询空值</h3><ul><li>查询非空值用 is not null</li></ul><p>例：查找成绩表中没有成绩（即成绩为空）的行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from tbl_score where score is null;</span><br></pre></td></tr></table></figure><h3 id="聚合函数查询"><a href="#聚合函数查询" class="headerlink" title="聚合函数查询"></a>聚合函数查询</h3><h4 id="count"><a href="#count" class="headerlink" title="count()"></a>count()</h4><ul><li>count(列名)函数返回非null行的行数</li><li>count(*)返回包含null的所有行</li></ul><h4 id="sum"><a href="#sum" class="headerlink" title="sum()"></a>sum()</h4><ul><li>求出某个字段的和</li></ul><h4 id="avg"><a href="#avg" class="headerlink" title="avg()"></a>avg()</h4><ul><li>求出某个字段的平均值</li></ul><h4 id="round"><a href="#round" class="headerlink" title="round()"></a>round()</h4><ul><li>四舍五入</li><li>第一个参数是<strong>原来的值</strong></li><li>第二个参数是<strong>小数位数</strong></li></ul><p>例：查询每位同学的总分和平均分（四舍五入到1位小数）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select stuno, sum(score) as </span><br><span class="line">total_score, </span><br><span class="line">round(avg(score), 1)</span><br><span class="line">from tbl_score group by stuno;</span><br></pre></td></tr></table></figure><h4 id="max-min"><a href="#max-min" class="headerlink" title="max() min()"></a>max() min()</h4><ul><li>返回最大值和最小值</li></ul><h3 id="查询中的子句"><a href="#查询中的子句" class="headerlink" title="查询中的子句"></a>查询中的子句</h3><h4 id="order-by"><a href="#order-by" class="headerlink" title="order by"></a>order by</h4><ul><li>对查询结果进行排序</li><li>升序：asc，降序：desc</li><li>默认升序，null值排最前面，降序则null值排最后</li></ul><p>例：查询成绩表中C01课程的成绩，并按成绩降序排列</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from tbl_score where courseno=&#x27;C01&#x27; order by score desc;</span><br></pre></td></tr></table></figure><h4 id="group-by"><a href="#group-by" class="headerlink" title="group by"></a>group by</h4><ul><li>将查询结果按指定字段进行分组</li><li><strong>group</strong> <strong>by</strong>与<strong>group_concat</strong>()函数结合，可以将<br>   每个组中的所有字段值都显示出来</li><li><strong>group_concat</strong>()的作用是链接字符串</li></ul><p>例：使用 GROUP BY 语句 将数据表按名字进行分组，并统计每个人有多少条记录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select name, count(*) from employee_tbl group by name;</span><br></pre></td></tr></table></figure><h4 id="with-rollup"><a href="#with-rollup" class="headerlink" title="with rollup"></a>with rollup</h4><ul><li>在分组统计的基础上再进行相同的总体统计</li><li>要和group by一起使用，加在最后</li></ul><h4 id="having"><a href="#having" class="headerlink" title="having"></a>having</h4><ul><li>通常与group by子句结合使用</li><li>指定在where子句的筛选后进一步筛选，即group by分组后的再筛选</li></ul><p>例：查询选课有2门以上且课程成绩均高于80分的学生的学号及其总成绩（不计算80分以下的），结果按成绩降序排列</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">select stuno as &#x27;学号&#x27;, sum(score) as &#x27;总分&#x27;</span><br><span class="line">    from tbl_score</span><br><span class="line">        where score &gt;= 80</span><br><span class="line">            group by stuno</span><br><span class="line">                having count(*) &gt;= 2</span><br><span class="line">            order by sum(score) desc;</span><br></pre></td></tr></table></figure><h4 id="limit"><a href="#limit" class="headerlink" title="limit"></a>limit</h4><ul><li>显示指定序号记录的结果</li><li><strong>第一条记录编号为0</strong></li><li>第一个参数为开始编号</li><li>第二个参数为记录的个数</li></ul><p>例：查询成绩表信息，按成绩降序排序，显示<strong>前3条记录</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from score order by finalscore desc limit 3;</span><br></pre></td></tr></table></figure><p>例：查询成绩表信息，按成绩降序排序，显示<strong>编号2开始的3条记录</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from score order by finalscore desc limit 2,3;</span><br></pre></td></tr></table></figure><h3 id="内连接"><a href="#内连接" class="headerlink" title="内连接"></a>内连接</h3><ul><li>自然连接运算</li><li>为了区分两个表中同名的列，需要对同名的列加上表名做为前缀。</li><li>多表（两张以上）查询：先进行两表连接，结果再和第三张表进行连接</li></ul><p>例：查询学生的学号、姓名、课程号和成绩。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select score.stuno, stuname, courseno, score</span><br><span class="line">from tbl_score score inner join tbl_student student</span><br><span class="line">on student.stuno=score.stuno;</span><br></pre></td></tr></table></figure><h3 id="左-右-外连接"><a href="#左-右-外连接" class="headerlink" title="左/右 外连接"></a>左/右 外连接</h3><ul><li><p>左连接</p><p>  将左表所有值对应右表查询，右表中没有的显示为null</p></li></ul><p>例：查询所有学生的学号、姓名、班级号、班级名称。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select stuno, stuname, c.classno, classname </span><br><span class="line">    from tbl_student as s left join tbl_class as c</span><br><span class="line">        on s.classno=c.classno;</span><br></pre></td></tr></table></figure><ul><li><p>右连接</p><p>  将右表所有值对应右表查询，左表中没有的显示为null</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select stuno, stuname, c.classno, classname </span><br><span class="line">from tbl_student as s right join tbl_class as c</span><br><span class="line">on s.classno=c.classno;</span><br></pre></td></tr></table></figure><h3 id="合并多个查询结果"><a href="#合并多个查询结果" class="headerlink" title="合并多个查询结果"></a>合并多个查询结果</h3><p>例：合并姓张和姓李的同学的查询结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select * from tbl_student where stuname like &#x27;张% &#x27; </span><br><span class="line">union</span><br><span class="line">select * from tbl_student where stuname like &#x27;李%&#x27;;</span><br></pre></td></tr></table></figure><h3 id="exists"><a href="#exists" class="headerlink" title="exists()"></a>exists()</h3><ul><li>在where后用于判断是否存在</li><li>返回True或False</li></ul><p>例：查询是否存在班级号为‘P601119’的学生，如果存在输出学生信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select * from tbl_student where exists(select *</span><br><span class="line">from tbl_student where classno=&#x27;P601119&#x27;);</span><br></pre></td></tr></table></figure><h3 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h3><p>例：创建视图course_avg，统计各门课程平均成绩，并按课程名称降序排列</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">create view course_avg as </span><br><span class="line">select tbl_course.coursename as 课程名, avg(score) as 平均成绩       </span><br><span class="line">from tbl_score inner join tbl_course            </span><br><span class="line">   on tbl_score.courseno= tbl_course.courseno </span><br><span class="line">           group by tbl_course.courseno                   </span><br><span class="line">  order by tbl_course.coursename desc;</span><br></pre></td></tr></table></figure><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><ul><li>系统会话变量以两个@开头</li><li>用户会话变量以一个@开头</li></ul><h3 id="用户会话变量"><a href="#用户会话变量" class="headerlink" title="用户会话变量"></a>用户会话变量</h3><p>例：:创建用户会话变量@name，并赋值为“张三”</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">set @name=“张三”</span><br><span class="line">- 或</span><br><span class="line">select @name:=“张三”</span><br></pre></td></tr></table></figure><h3 id="局部变量"><a href="#局部变量" class="headerlink" title="局部变量"></a>局部变量</h3><p>例：定义局部变量myvar，数据类型为int，默认值为100，并赋值60</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">declare myvar int default 100;</span><br><span class="line">set myvar = 60;</span><br></pre></td></tr></table></figure><h2 id="自定义函数"><a href="#自定义函数" class="headerlink" title="自定义函数"></a>自定义函数</h2><p>例：创建一个名为func_course的函数，返回表course中指定课程号的课程名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">delimiter &amp;&amp;</span><br><span class="line">create function func_course(c_no char(3))</span><br><span class="line">returns varchar(20)</span><br><span class="line">begin</span><br><span class="line">    return(select coname from course where courseno=c_no);</span><br><span class="line">end &amp;&amp;</span><br><span class="line">delimiter ;</span><br></pre></td></tr></table></figure><h2 id="IF-条件控制"><a href="#IF-条件控制" class="headerlink" title="IF 条件控制"></a>IF 条件控制</h2><ul><li>函数中使用if</li></ul><p>例：创建函数exam_if，判断传入的参数如果是10，是则输出1，否则判断是否是20，是则输出2，否则输出3</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">delimiter //</span><br><span class="line">create function exam_if(x int)</span><br><span class="line">returns int</span><br><span class="line">begin</span><br><span class="line">if x=10 then set x=1;</span><br><span class="line">elseif x=20 then set x=2;</span><br><span class="line">else set x=3;</span><br><span class="line">end if;</span><br><span class="line">return x;</span><br><span class="line">end //</span><br><span class="line">delimiter ;</span><br></pre></td></tr></table></figure><ul><li>查询中使用if()</li></ul><p>例：从成绩表中查询学号为60121901的学生成绩信息,如成绩大于等于80分，显示“通过”，否则显示“未通过”</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select *,if(finalscore&gt;=80,&#x27;通过&#x27;,&#x27;未通过&#x27;) as &#x27;是否通过&#x27;</span><br><span class="line">from score </span><br><span class="line">where studentno=&#x27;60121901&#x27;;</span><br></pre></td></tr></table></figure><ul><li>查询中使用ifnull()</li></ul><p>例：从成绩表中查询学号为60241902的学生成绩信息,如成绩为null，显示“没有成绩”，否则显示成绩</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * ,ifnull(finalscore,&#x27;没有成绩&#x27;) from score where studentno=&#x27;60241902&#x27;;</span><br></pre></td></tr></table></figure><h2 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h2><p>例：定义函数exam_while,求1到n的和</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">delimiter //</span><br><span class="line">create function exam_while(n int) returns int</span><br><span class="line">begin </span><br><span class="line">declare sum int default 0;</span><br><span class="line">declare m int default 1;</span><br><span class="line">while m&lt;=n do</span><br><span class="line">set sum =sum+m;</span><br><span class="line">set m=m+1;</span><br><span class="line">end while;</span><br><span class="line">return sum;</span><br><span class="line">end //</span><br><span class="line">delimiter ;</span><br></pre></td></tr></table></figure><h2 id="储存过程"><a href="#储存过程" class="headerlink" title="储存过程"></a>储存过程</h2><ul><li>无参数</li></ul><p>例：创建存储过程proc_stu，从数据库school的student表中检索出所有2001年出生的学生的学号、姓名、出生日期等信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">delimiter //</span><br><span class="line">create procedure proc_stu()</span><br><span class="line">begin</span><br><span class="line">select * from student where year(birthday)=&#x27;2001&#x27;;</span><br><span class="line">end //</span><br><span class="line">delimiter ;</span><br></pre></td></tr></table></figure><ul><li>有参数</li></ul><p>例：创建存储过程stu_score的，统计指定同学的考试门数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">delimiter //</span><br><span class="line">create  procedure  stu_scores(in s_no char(8), out count_num int)</span><br><span class="line">reads SQL data</span><br><span class="line">begin</span><br><span class="line">select  count(*)  into count_num  from  score where  studentno=s_no;</span><br><span class="line">end //</span><br><span class="line">delimiter ;</span><br></pre></td></tr></table></figure><ul><li>调用：call stu_scores(‘18125121107’, @c_num );</li><li>查看：select @c_num; </li></ul><h2 id="触发器"><a href="#触发器" class="headerlink" title="触发器"></a>触发器</h2><ul><li>在表数据修改后激活的指令</li></ul><p>例：创建一个触发器，当更改表course中某门课的课程号时，同时将score表课程号全部更新</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">delimiter $$</span><br><span class="line">create trigger cno_update after update on course for each row</span><br><span class="line">begin</span><br><span class="line">update score set courseno=new.courseno </span><br><span class="line">where courseno=old.courseno;</span><br><span class="line">end $$</span><br><span class="line">delimiter ;</span><br></pre></td></tr></table></figure><ul><li>update on 更新后</li><li>delete on 删除后</li><li>insert 插入后</li></ul><p>例：在de_teacher表插入记录前和插入记录后，分别向before_insert和after_insert中插入一条记录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">create  trigger  before_insert  before insert</span><br><span class="line">on  de_teacher for each row</span><br><span class="line">insert into  bef_after</span><br><span class="line">set teacherno =‘t11’, name =‘孙悟空’;</span><br><span class="line"></span><br><span class="line">create  trigger  after_insert  after  insert</span><br><span class="line">on  de_teacher  for each row</span><br><span class="line">insert into  bef_after</span><br><span class="line">set teacherno =‘t22’, name =‘猪八戒’;</span><br></pre></td></tr></table></figure><h2 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h2><ul><li><p>添加</p><p>  例：添加两个新用户，用户名zzz,密码zzz001,用户名qqq，密码qqq002</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">create user </span><br><span class="line">  &#x27;zzz&#x27;@&#x27;localhost&#x27;identified by &#x27;zzz001&#x27;,</span><br><span class="line">  &#x27;qqq&#x27;@&#x27;localhost&#x27;identified by &#x27;qqq002&#x27;;</span><br></pre></td></tr></table></figure><ul><li>修改名称为rename</li></ul></li><li><p>修改密码</p><p>  例：修改用户kkk的密码为kkk008</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqladmin -u kkk -p password &quot;kkk008&quot;</span><br></pre></td></tr></table></figure><p>  例：更新密码</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqladmin -u username -p password &quot;newpassword&quot;</span><br></pre></td></tr></table></figure></li><li><p>删除用户</p><p>  例：删除普通用户kkk</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop user kkk@localhost;</span><br></pre></td></tr></table></figure><p>  或</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">delete from mysql.user </span><br><span class="line">where host=&#x27;localhost&#x27; and user=&#x27;kkk&#x27;;</span><br></pre></td></tr></table></figure></li></ul><h2 id="权限管理"><a href="#权限管理" class="headerlink" title="权限管理"></a>权限管理</h2><h3 id="授予权限"><a href="#授予权限" class="headerlink" title="授予权限"></a>授予权限</h3><p>例：创建一个新用户zzz,密码为zzz001，用户zzz对所有的数据有查询、插入权限，并授予grant权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">create user ‘zzz’@‘localhost’identified by &#x27;zzz001&#x27;；</span><br><span class="line">grant select,insert on *.* to &#x27;zzz&#x27;@&#x27;localhost&#x27;</span><br><span class="line">with grant option;</span><br></pre></td></tr></table></figure><p>例：查询用户zzz的权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show grants for &#x27;zzz&#x27;@&#x27;localhost&#x27;</span><br></pre></td></tr></table></figure><h3 id="收回权限"><a href="#收回权限" class="headerlink" title="收回权限"></a>收回权限</h3><p>例：收回用户zzz的insert权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">revoke insert on *.* from &#x27;qqq&#x27;@&#x27;localhost&#x27;;</span><br></pre></td></tr></table></figure><p>例：收回用户zzz的所有权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">revoke all privileges,grant option from &#x27;qqq&#x27;@&#x27;localhost&#x27;;</span><br></pre></td></tr></table></figure><h2 id="报错处理"><a href="#报错处理" class="headerlink" title="报错处理"></a>报错处理</h2><h3 id="1418"><a href="#1418" class="headerlink" title="1418"></a>1418</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set global log_bin_trust_function_creators=1;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;期末了，梳理一遍MySQL，防止挂科。&lt;/p&gt;</summary>
    
    
    
    <category term="笔记" scheme="https://laelwz.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="MySQL" scheme="https://laelwz.github.io/tags/MySQL/"/>
    
    <category term="数据库" scheme="https://laelwz.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>车票管理系统</title>
    <link href="https://laelwz.github.io/posts/45713/"/>
    <id>https://laelwz.github.io/posts/45713/</id>
    <published>2022-06-05T12:56:02.000Z</published>
    <updated>2022-12-29T07:07:32.307Z</updated>
    
    <content type="html"><![CDATA[<p>这是Java课程的期末考试题之一。</p><span id="more"></span><h2 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h2><p>Java老师发了四道题，说是期末考试时在其中每人随机抽一道作为考题。这属于很放水了，而且题目都不难，主要是考界面设计和人性化设计，大概是还没有学数据结构和算法的缘故，在代码思维上基本都不难。</p><p>所以保险起见都做掉了，这是其中一道。</p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>问题：</p><p>利用所学的Swing控件，及不同的事件处理接口，设计一个火车订票用户界面。要求在一个JComboBox（下拉框）选择车票的种类（如：“杭州——&gt;宁波”），在文本框1中自动出现该票的单价，在文本框2中显示剩余票的张数。当用户在文本框3中输入购买的张数，并按下“购买”按钮时，在文本区中显示总价格，并要及时更新剩余张数。要求：合理应用布局设计，注意界面美观、友好。（可考虑异常处理）</p><p>使用Swing控件设计成了一个比较小的窗口，麻雀虽小，五脏俱全（其实还想做个车次编辑但是懒）</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><img src="/img/车票管理系统/1.jpg" alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test.four;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.JFrame;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JComboBox;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ItemEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ItemListener;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowEvent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.DefaultComboBoxModel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JLabel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JOptionPane;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JTextField;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JButton;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span> &#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> JTextField tf_price;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> JTextField tf_sytk;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> JTextField tf_buytk;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> JTextField tf_start;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> JTextField tf_finish;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> JTextField tf_hdtk;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> JComboBox cb;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> JButton bt_buy;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> JButton bt_add;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> JButton bt_del;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="type">JFrame</span> <span class="variable">myFrame</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JFrame</span>(<span class="string">&quot;火车订票&quot;</span>);</span><br><span class="line">myFrame.setVisible(<span class="literal">true</span>);</span><br><span class="line">myFrame.setSize(<span class="number">300</span>,<span class="number">200</span>);</span><br><span class="line">myFrame.getContentPane().setLayout(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">cb = <span class="keyword">new</span> <span class="title class_">JComboBox</span>();</span><br><span class="line">cb.setModel(<span class="keyword">new</span> <span class="title class_">DefaultComboBoxModel</span>(<span class="keyword">new</span> <span class="title class_">String</span>[] &#123;<span class="string">&quot;宁波 → 杭州&quot;</span>, <span class="string">&quot;温州 → 杭州&quot;</span>&#125;));</span><br><span class="line">cb.setBounds(<span class="number">10</span>, <span class="number">10</span>, <span class="number">130</span>, <span class="number">21</span>);</span><br><span class="line">myFrame.getContentPane().add(cb);</span><br><span class="line"></span><br><span class="line"><span class="type">JLabel</span> <span class="variable">lblNewLabel</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JLabel</span>(<span class="string">&quot;\u5355\u4EF7\uFF1A&quot;</span>);</span><br><span class="line">lblNewLabel.setBounds(<span class="number">177</span>, <span class="number">69</span>, <span class="number">56</span>, <span class="number">15</span>);</span><br><span class="line">myFrame.getContentPane().add(lblNewLabel);</span><br><span class="line"></span><br><span class="line">tf_price = <span class="keyword">new</span> <span class="title class_">JTextField</span>();</span><br><span class="line">tf_price.setBounds(<span class="number">220</span>, <span class="number">66</span>, <span class="number">54</span>, <span class="number">21</span>);</span><br><span class="line">myFrame.getContentPane().add(tf_price);</span><br><span class="line">tf_price.setColumns(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">JLabel</span> <span class="variable">label</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JLabel</span>(<span class="string">&quot;\u5269\u4F59\u7968\u6570\uFF1A&quot;</span>);</span><br><span class="line">label.setBounds(<span class="number">153</span>, <span class="number">41</span>, <span class="number">62</span>, <span class="number">15</span>);</span><br><span class="line">myFrame.getContentPane().add(label);</span><br><span class="line"></span><br><span class="line">tf_sytk = <span class="keyword">new</span> <span class="title class_">JTextField</span>();</span><br><span class="line">tf_sytk.setColumns(<span class="number">10</span>);</span><br><span class="line">tf_sytk.setBounds(<span class="number">220</span>, <span class="number">38</span>, <span class="number">54</span>, <span class="number">21</span>);</span><br><span class="line">myFrame.getContentPane().add(tf_sytk);</span><br><span class="line"></span><br><span class="line">bt_buy = <span class="keyword">new</span> <span class="title class_">JButton</span>(<span class="string">&quot;购买&quot;</span>);</span><br><span class="line">bt_buy.setBounds(<span class="number">153</span>, <span class="number">121</span>, <span class="number">121</span>, <span class="number">23</span>);</span><br><span class="line">myFrame.getContentPane().add(bt_buy);</span><br><span class="line"></span><br><span class="line"><span class="type">JLabel</span> <span class="variable">label_1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JLabel</span>(<span class="string">&quot;购买票数：&quot;</span>);</span><br><span class="line">label_1.setBounds(<span class="number">153</span>, <span class="number">96</span>, <span class="number">62</span>, <span class="number">15</span>);</span><br><span class="line">myFrame.getContentPane().add(label_1);</span><br><span class="line"></span><br><span class="line">tf_buytk = <span class="keyword">new</span> <span class="title class_">JTextField</span>();</span><br><span class="line">tf_buytk.setColumns(<span class="number">10</span>);</span><br><span class="line">tf_buytk.setBounds(<span class="number">220</span>, <span class="number">93</span>, <span class="number">54</span>, <span class="number">21</span>);</span><br><span class="line">myFrame.getContentPane().add(tf_buytk);</span><br><span class="line"></span><br><span class="line">bt_add = <span class="keyword">new</span> <span class="title class_">JButton</span>(<span class="string">&quot;添加新票&quot;</span>);</span><br><span class="line">bt_add.setBounds(<span class="number">10</span>, <span class="number">121</span>, <span class="number">130</span>, <span class="number">23</span>);</span><br><span class="line">myFrame.getContentPane().add(bt_add);</span><br><span class="line"></span><br><span class="line"><span class="type">JLabel</span> <span class="variable">label_2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JLabel</span>(<span class="string">&quot;出发地&quot;</span>);</span><br><span class="line">label_2.setBounds(<span class="number">10</span>, <span class="number">41</span>, <span class="number">62</span>, <span class="number">15</span>);</span><br><span class="line">myFrame.getContentPane().add(label_2);</span><br><span class="line"></span><br><span class="line">tf_start = <span class="keyword">new</span> <span class="title class_">JTextField</span>();</span><br><span class="line">tf_start.setColumns(<span class="number">10</span>);</span><br><span class="line">tf_start.setBounds(<span class="number">77</span>, <span class="number">38</span>, <span class="number">63</span>, <span class="number">21</span>);</span><br><span class="line">myFrame.getContentPane().add(tf_start);</span><br><span class="line"></span><br><span class="line"><span class="type">JLabel</span> <span class="variable">label_2_1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JLabel</span>(<span class="string">&quot;目的地&quot;</span>);</span><br><span class="line">label_2_1.setBounds(<span class="number">10</span>, <span class="number">69</span>, <span class="number">62</span>, <span class="number">15</span>);</span><br><span class="line">myFrame.getContentPane().add(label_2_1);</span><br><span class="line"></span><br><span class="line">tf_finish = <span class="keyword">new</span> <span class="title class_">JTextField</span>();</span><br><span class="line">tf_finish.setColumns(<span class="number">10</span>);</span><br><span class="line">tf_finish.setBounds(<span class="number">77</span>, <span class="number">66</span>, <span class="number">63</span>, <span class="number">21</span>);</span><br><span class="line">myFrame.getContentPane().add(tf_finish);</span><br><span class="line"></span><br><span class="line"><span class="type">JLabel</span> <span class="variable">label_2_2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JLabel</span>(<span class="string">&quot;核定票数：&quot;</span>);</span><br><span class="line">label_2_2.setBounds(<span class="number">10</span>, <span class="number">96</span>, <span class="number">62</span>, <span class="number">15</span>);</span><br><span class="line">myFrame.getContentPane().add(label_2_2);</span><br><span class="line"></span><br><span class="line">tf_hdtk = <span class="keyword">new</span> <span class="title class_">JTextField</span>();</span><br><span class="line">tf_hdtk.setColumns(<span class="number">10</span>);</span><br><span class="line">tf_hdtk.setBounds(<span class="number">77</span>, <span class="number">93</span>, <span class="number">63</span>, <span class="number">21</span>);</span><br><span class="line">myFrame.getContentPane().add(tf_hdtk);</span><br><span class="line"></span><br><span class="line"><span class="type">JButton</span> <span class="variable">bt_del</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JButton</span>(<span class="string">&quot;删除&quot;</span>);</span><br><span class="line">bt_del.setBounds(<span class="number">153</span>, <span class="number">9</span>, <span class="number">121</span>, <span class="number">23</span>);</span><br><span class="line">myFrame.getContentPane().add(bt_del);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置窗体关闭确认，关闭窗体时结束进程</span></span><br><span class="line">        myFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE); <span class="comment">// 设置关闭窗体时什么也不做</span></span><br><span class="line">        myFrame.addWindowListener(<span class="keyword">new</span> <span class="title class_">WindowAdapter</span>() &#123;</span><br><span class="line">        <span class="comment">// 配置窗体监听器，如果窗体关闭，执行命令</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">windowClosing</span><span class="params">(WindowEvent w)</span> &#123;</span><br><span class="line">        System.exit(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span>[][] tk = <span class="keyword">new</span> <span class="title class_">int</span> [<span class="number">100</span>][<span class="number">2</span>];</span><br><span class="line">        tk[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">50</span>;</span><br><span class="line">        tk[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">30</span>;</span><br><span class="line">        tk[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">30</span>;</span><br><span class="line">        tk[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">100</span>;</span><br><span class="line">tf_sytk.setText(String.valueOf(tk[<span class="number">0</span>][<span class="number">0</span>]));</span><br><span class="line">tf_price.setText(String.valueOf(tk[<span class="number">0</span>][<span class="number">1</span>]));</span><br><span class="line">        </span><br><span class="line">        <span class="type">ItemListener</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ItemListener</span>() &#123; <span class="comment">//定义下拉列表监视器</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">itemStateChanged</span><span class="params">(ItemEvent e)</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (e.getStateChange() == e.SELECTED) &#123; <span class="comment">//定义为执行一次 </span></span><br><span class="line">tf_sytk.setText(String.valueOf(tk[cb.getSelectedIndex()][<span class="number">0</span>]));</span><br><span class="line">tf_price.setText(String.valueOf(tk[cb.getSelectedIndex()][<span class="number">1</span>]));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">cb.addItemListener(a);</span><br><span class="line"></span><br><span class="line"><span class="type">ActionListener</span> <span class="variable">b</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ActionListener</span>() &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">actionPerformed</span><span class="params">(ActionEvent e)</span> &#123;</span><br><span class="line"><span class="type">boolean</span> <span class="variable">eq</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span> (e.getSource() == bt_add) &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (tf_start.getText().equals(tf_finish.getText())) &#123;</span><br><span class="line">JOptionPane.showMessageDialog(<span class="literal">null</span>, <span class="string">&quot;出发地和目的地不能相同！&quot;</span>);</span><br><span class="line">tf_start.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">tf_finish.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> tf_start.getText() + <span class="string">&quot; → &quot;</span> + tf_finish.getText();</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; cb.getItemCount(); i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (str.equals(cb.getItemAt(i))) &#123;</span><br><span class="line">eq = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (eq) &#123;</span><br><span class="line">tk[cb.getItemCount()][<span class="number">0</span>] = Integer.parseInt(tf_hdtk.getText());</span><br><span class="line">tk[cb.getItemCount()][<span class="number">1</span>] = Integer.parseInt(tf_price.getText());</span><br><span class="line">cb.addItem(str);</span><br><span class="line">cb.setSelectedIndex(cb.getItemCount()-<span class="number">1</span>);</span><br><span class="line">tf_hdtk.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">tf_start.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">tf_finish.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">JOptionPane.showMessageDialog(<span class="literal">null</span>, <span class="string">&quot;添加成功&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">JOptionPane.showMessageDialog(<span class="literal">null</span>, <span class="string">&quot;车程已经存在！&quot;</span>);</span><br><span class="line">tf_hdtk.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">tf_price.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">tf_start.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">tf_finish.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e2) &#123;</span><br><span class="line"><span class="keyword">if</span> (tf_start.getText().length() == <span class="number">0</span> || tf_finish.getText().length() == <span class="number">0</span>) &#123;</span><br><span class="line">JOptionPane.showMessageDialog(<span class="literal">null</span>, <span class="string">&quot;出发地和目的地都不能为空！&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">JOptionPane.showMessageDialog(<span class="literal">null</span>, <span class="string">&quot;票数和单价都必须为数值且不能为空！&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (e.getSource() == bt_del) &#123;</span><br><span class="line"><span class="keyword">if</span> (cb.getSelectedIndex() == cb.getItemCount() - <span class="number">1</span>) &#123;</span><br><span class="line">cb.removeItemAt(cb.getSelectedIndex());</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> cb.getSelectedIndex(); i &lt; cb.getItemCount() - <span class="number">1</span>; i++) &#123;</span><br><span class="line">tk[i][<span class="number">0</span>] = tk[i+<span class="number">1</span>][<span class="number">0</span>];</span><br><span class="line">tk[i][<span class="number">1</span>] = tk[i+<span class="number">1</span>][<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">cb.removeItemAt(cb.getSelectedIndex());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (e.getSource() == bt_buy) &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="type">int</span> <span class="variable">nums</span> <span class="operator">=</span> Integer.parseInt(tf_buytk.getText());</span><br><span class="line"><span class="type">int</span> <span class="variable">price</span> <span class="operator">=</span> tk[cb.getSelectedIndex()][<span class="number">1</span>];</span><br><span class="line"><span class="keyword">if</span> (nums == <span class="number">0</span>) &#123;</span><br><span class="line">JOptionPane.showMessageDialog(<span class="literal">null</span>, <span class="string">&quot;购票数不可为0！&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (nums &lt;= tk[cb.getSelectedIndex()][<span class="number">0</span>] &amp;&amp; tk[cb.getSelectedIndex()][<span class="number">0</span>] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">tk[cb.getSelectedIndex()][<span class="number">0</span>] = tk[cb.getSelectedIndex()][<span class="number">0</span>] - nums;</span><br><span class="line">JOptionPane.showMessageDialog(<span class="literal">null</span>, <span class="string">&quot;购票成功，共&quot;</span> + nums *price  + <span class="string">&quot;元!&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (tk[cb.getSelectedIndex()][<span class="number">0</span>] == <span class="number">0</span>) &#123;</span><br><span class="line">JOptionPane.showMessageDialog(<span class="literal">null</span>, <span class="string">&quot;抱歉，此车程已经售罄！&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">JOptionPane.showMessageDialog(<span class="literal">null</span>, <span class="string">&quot;抱歉，您购买的票数超过了库存！&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">tf_sytk.setText(String.valueOf(tk[cb.getSelectedIndex()][<span class="number">0</span>]));</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e2) &#123;</span><br><span class="line">JOptionPane.showMessageDialog(<span class="literal">null</span>, <span class="string">&quot;购买票数不可为空&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">bt_add.addActionListener(b);</span><br><span class="line">bt_del.addActionListener(b);</span><br><span class="line">bt_buy.addActionListener(b);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>打包后的<a href="/code/车票管理系统/test.jar">.jar可执行文件</a></p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>这题没有难度，算是Swing的练手，虽然没有人用这个东西了，但生活的意义就是没有意义不是么。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;这是Java课程的期末考试题之一。&lt;/p&gt;</summary>
    
    
    
    <category term="编程" scheme="https://laelwz.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Java" scheme="https://laelwz.github.io/categories/%E7%BC%96%E7%A8%8B/Java/"/>
    
    
    <category term="Java" scheme="https://laelwz.github.io/tags/Java/"/>
    
    <category term="作业" scheme="https://laelwz.github.io/tags/%E4%BD%9C%E4%B8%9A/"/>
    
    <category term="二维数组" scheme="https://laelwz.github.io/tags/%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>豆瓣电影TOP250爬虫</title>
    <link href="https://laelwz.github.io/posts/45300/"/>
    <id>https://laelwz.github.io/posts/45300/</id>
    <published>2022-06-04T08:03:59.000Z</published>
    <updated>2022-12-29T07:07:38.573Z</updated>
    
    <content type="html"><![CDATA[<p>这是一项Python爬虫课的期末作业。</p><span id="more"></span><h2 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h2><p><strong>Python爬虫课的期末作业</strong>是自由选择一个网站爬取，那我就本着多一事不如少一事的原则选了豆瓣电影Top250这个最模板化的网站，而且网上也有很多很多例子可以借鉴。别的不说，我也挺喜欢看电影的，刚好理一遍，慢慢看这250个电影。不过期末周哪个孩子有时间看电影啊！</p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>打开<a href="https://movie.douban.com/top250">豆瓣电影Top250</a>，可以看到电影按十个一页降序排列在页面中，而且电影相应的海报图片和简介以及评分和一句话的评价都整合在一个框架当中。整个豆瓣电影TOP250排行榜共有250个电影，以25个一页分为10页。</p><p>点击第二页，可以看到网站链接的变化：<a href="https://movie.douban.com/top250?start=25">https://movie.douban.com/top250?start=25</a>，从其中可以知道start参数即此页及其之前页的电影数量，以此类推start=0为第一页，start=25为第二页，start=50为第三页……</p><p>通过肉眼观察和F12，可以知道每个电影所在的div框架是包含了他所有信息，所以要么<strong>通过正则来匹配需要爬的信息</strong>，要么<strong>通过bs4模块先提取需要的源码块</strong>再进行数据清洗。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>我为了逻辑更清晰，将要爬取的信息分为成了<strong>不同的模块</strong>去爬取，电影名称，电影评价，电影图片等等，但是<strong>缺点很明显，代码量很大，数据清洗要根据不同情况分批进行，再存到不同列表中</strong>。</p><p>改进方法就是写一个爬取<strong>所有</strong>需要信息的正则与bs4模块提取的框架，将所有信息进行数据清洗，再放到一个列表中，这样效率会高很多，代码量也小。</p><p>此次代码用到了<strong>异常捕获</strong>，主要是为了防止图片下载失败，因为自己寝室里网络不错，运行完美，到了机房，访问豆瓣图片库有时候会G，所以要写一个重新尝试下载功能。</p><p>还有文件管理，启动程序前先<strong>检查需要的目录是否存在，是否有同名文件冲突</strong>，如果有则创建或删除。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- codeing = utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> sqlite3</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">from</span> prettytable <span class="keyword">import</span> PrettyTable</span><br><span class="line"></span><br><span class="line"><span class="comment"># 模拟浏览器</span></span><br><span class="line">headers = (<span class="string">&quot;User - Agent&quot;</span>, <span class="string">&quot;Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36&quot;</span>)</span><br><span class="line">opener = urllib.request.build_opener()</span><br><span class="line">opener.addheaders = [headers]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将opener安装为全局</span></span><br><span class="line">urllib.request.install_opener(opener)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存每页的链接</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">save_img_url</span>(<span class="params">data</span>):</span><br><span class="line">    path=<span class="string">&quot;img_url.txt&quot;</span></span><br><span class="line">    file=<span class="built_in">open</span>(path,<span class="string">&quot;a&quot;</span>)</span><br><span class="line">    file.write(data+<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">    file.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存图片到本地</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">save_img</span>():</span><br><span class="line">    <span class="keyword">for</span> p <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">10</span>):</span><br><span class="line">        flag = <span class="literal">True</span></span><br><span class="line">        url = <span class="string">&quot;https://movie.douban.com/top250?start=&quot;</span> + <span class="built_in">str</span>(p * <span class="number">25</span>)</span><br><span class="line">        data1 = urllib.request.urlopen(url).read().decode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">        <span class="comment"># 将每页的链接保存到本地</span></span><br><span class="line">        save_img_url(url)</span><br><span class="line">        <span class="comment"># 获取到所有海报图片链接头，无后辍.jpg</span></span><br><span class="line">        pat = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;img.*src=&quot;(.*?).jpg&quot;&#x27;</span>)  <span class="comment"># .*?表示字符出现一次或0次，re.S表示忽略换行</span></span><br><span class="line">        img_url = pat.findall(data1)</span><br><span class="line">        <span class="keyword">for</span> a_i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(img_url)):</span><br><span class="line">            loop = <span class="literal">True</span></span><br><span class="line">            <span class="comment"># 使用一个while循环，在当爬取任意一张图片出现问题时，重新爬取一次</span></span><br><span class="line">            <span class="keyword">while</span> loop:</span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                    this_img = (img_url[a_i])</span><br><span class="line">                    <span class="comment"># 图片链接加入后缀.jpg</span></span><br><span class="line">                    this_img_url = this_img + <span class="string">&quot;.jpg&quot;</span></span><br><span class="line">                    <span class="built_in">print</span>(this_img_url)</span><br><span class="line">                    img_path = <span class="string">&quot;img/&quot;</span> + <span class="built_in">str</span>((a_i + <span class="number">1</span>) + p * <span class="number">25</span>) + <span class="string">&quot;.jpg&quot;</span></span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;正在爬取第&quot;</span>, <span class="built_in">str</span>((a_i + <span class="number">1</span>) + p * <span class="number">25</span>), <span class="string">&quot;张图片&quot;</span>)</span><br><span class="line">                    urllib.request.urlretrieve(this_img_url, img_path)</span><br><span class="line">                    time.sleep(<span class="number">0.1</span>)  <span class="comment"># 每张图片下载间隔0.1秒</span></span><br><span class="line">                    loop = <span class="literal">False</span> <span class="comment"># 如果没问题就不循环了，有问题这条不执行而执行except中的内容</span></span><br><span class="line">                <span class="keyword">except</span>:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;图片爬取错误，正在重试！&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存所有电影数据</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">save_all</span>():</span><br><span class="line">    titles = []</span><br><span class="line">    kinds = []</span><br><span class="line">    ranks = []</span><br><span class="line">    quotes = []</span><br><span class="line">    viewns = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> p <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">10</span>):</span><br><span class="line">        <span class="comment"># 设置url并解析html</span></span><br><span class="line">        url = <span class="string">&quot;https://movie.douban.com/top250?start=&quot;</span> + <span class="built_in">str</span>(p * <span class="number">25</span>)</span><br><span class="line">        data1 = urllib.request.urlopen(url).read().decode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment">#电影名称爬取</span></span><br><span class="line">        pat1 = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;span class=&quot;title&quot;&gt;([^&amp;]+)&lt;/span&gt;&#x27;</span>,re.S)</span><br><span class="line">        <span class="comment"># .*?表示字符出现一次或0次，re.S表示忽略换行 [^&amp;]+即排除中间有&amp;号的一次或多次 ()内即为爬到的东西</span></span><br><span class="line">        title = pat1.findall(data1)</span><br><span class="line">        <span class="comment"># # 对得到的列表进行数据清洗</span></span><br><span class="line">        <span class="comment"># for i in range(0,len(img_url)):</span></span><br><span class="line">        <span class="comment">#     img_url[i] = re.sub(&#x27;&amp;nbsp;/&amp;nbsp;&#x27;, &#x27;&#x27;, img_url[i])</span></span><br><span class="line">        titles = titles + title</span><br><span class="line">        <span class="comment"># print(titles)</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 电影种类爬取</span></span><br><span class="line">        pat2= re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;br&gt;(.*?)&lt;/p&gt;&#x27;</span>,re.S)    <span class="comment"># .*?表示字符出现一次或0次，re.S表示忽略换行</span></span><br><span class="line">        kind = pat2.findall(data1)</span><br><span class="line">        <span class="comment"># 对得到的列表进行数据清洗</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(kind)):</span><br><span class="line">            kind[i] = re.sub(<span class="string">&#x27;&amp;nbsp;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, kind[i])</span><br><span class="line">            kind[i] = re.sub(<span class="string">&#x27;                            &#x27;</span>, <span class="string">&#x27;&#x27;</span>, kind[i])</span><br><span class="line">            kind[i] = re.sub(<span class="string">&#x27;                        &#x27;</span>, <span class="string">&#x27;&#x27;</span>, kind[i])</span><br><span class="line">            kind[i] = re.sub(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;&#x27;</span>, kind[i])</span><br><span class="line">        kinds = kinds + kind</span><br><span class="line">        <span class="comment"># print(kinds)</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 电影评分爬取</span></span><br><span class="line">        pat3 = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;span class=&quot;rating_num&quot; property=&quot;v:average&quot;&gt;(.*?)&lt;/span&gt;&#x27;</span>,re.S)    <span class="comment"># .*?表示字符出现一次或0次，re.S表示忽略换行</span></span><br><span class="line">        rank = pat3.findall(data1)</span><br><span class="line">        <span class="comment"># # 对得到的列表进行数据清洗</span></span><br><span class="line">        <span class="comment"># for i in range(0,len(img_url)):</span></span><br><span class="line">        <span class="comment">#     img_url[i] = re.sub(&#x27;&amp;nbsp;/&amp;nbsp;&#x27;, &#x27;&#x27;, img_url[i])</span></span><br><span class="line">        ranks = ranks + rank</span><br><span class="line">        <span class="comment"># print(ranks)</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 电影评论人数爬取</span></span><br><span class="line">        url = <span class="string">&quot;https://movie.douban.com/top250?start=&quot;</span> + <span class="built_in">str</span>(p * <span class="number">25</span>)</span><br><span class="line">        data1 = urllib.request.urlopen(url).read().decode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">        <span class="comment"># print(url)</span></span><br><span class="line">        pat4 = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;span&gt;(.*?)&lt;/span&gt;&#x27;</span>,re.S)    <span class="comment"># .*?表示字符出现一次或0次，re.S表示忽略换行</span></span><br><span class="line">        viewn = pat4.findall(data1)</span><br><span class="line">        <span class="comment"># 对得到的列表进行数据清洗</span></span><br><span class="line">        <span class="keyword">del</span> viewn[<span class="number">0</span>: <span class="number">6</span>]</span><br><span class="line">        viewns = viewns + viewn</span><br><span class="line">        <span class="comment"># print(viewns)</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 电影精华短评爬取</span></span><br><span class="line">        soup = BeautifulSoup(data1,<span class="string">&quot;html.parser&quot;</span>)  <span class="comment"># 指定Beautiful的解析器为“html.parser”</span></span><br><span class="line">        <span class="comment"># 注：解析器负责把 HTML 解析成相关的对象，而 BeautifulSoup 负责操作数据（增删改查）。“html.parser” 是 Python 内置的解析器</span></span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> soup.find_all(<span class="string">&#x27;div&#x27;</span>, class_=<span class="string">&quot;item&quot;</span>):  <span class="comment"># 查找符合要求的字符串，形成列表(注：class是一个类别/属性，需要加下划线，否则会报错)</span></span><br><span class="line">            <span class="comment"># 这里的循环将每个item，即每个电影的代码框架遍历，共25个</span></span><br><span class="line">            pat5 = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;span class=&quot;inq&quot;&gt;(.*)&lt;/span&gt;&#x27;</span>)</span><br><span class="line">            <span class="comment"># 从每个代码框架中找出评价，若没有评价，则将评论留空</span></span><br><span class="line">            item = <span class="built_in">str</span>(item)</span><br><span class="line">            quote = <span class="string">&quot;&quot;</span>.join(re.findall(pat5, item)) <span class="comment"># 将列表元素转换为字符串</span></span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(quote) != <span class="number">0</span>:</span><br><span class="line">                quotes.append(quote)  <span class="comment"># 添加</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                quotes.append(<span class="string">&quot; &quot;</span>)  <span class="comment"># 留空</span></span><br><span class="line">            <span class="comment"># print(quotes)</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;第&quot;</span>, p+<span class="number">1</span>, <span class="string">&quot;页爬取完毕&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;---------------------------&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;检查数据正确性：&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;影片名称个数&quot;</span>, <span class="built_in">len</span>(titles))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;影片种类个数&quot;</span>, <span class="built_in">len</span>(kinds))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;影片评分个数&quot;</span>, <span class="built_in">len</span>(ranks))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;影片评分人数个数&quot;</span>, <span class="built_in">len</span>(viewns))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;影片精华简评个数&quot;</span>, <span class="built_in">len</span>(quotes))</span><br><span class="line"></span><br><span class="line">    <span class="comment">#将数据保存到SQL数据库</span></span><br><span class="line">    conn = sqlite3.connect(<span class="string">&#x27;Spider.db&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;建立并打开数据库 Spider.db 成功！&quot;</span>)</span><br><span class="line">    c = conn.cursor()</span><br><span class="line">    c.execute(<span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    create table Movie(ID int primary key not null, title varchar(50), kind varchar(50), ranks varchar(50), viewer varchar(50), quote varchar(50));</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;表Movie创建成功！&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;开始向Movie表插入数据&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(titles)):</span><br><span class="line">        c.execute(<span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        insert into Movie values(?,?,?,?,?,?);</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span>, (i+<span class="number">1</span>, titles[i],kinds[i],ranks[i],viewns[i],quotes[i]))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;数据插入Movie成功！&quot;</span>)</span><br><span class="line">    conn.commit()</span><br><span class="line">    conn.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">select_sql</span>():</span><br><span class="line">    <span class="comment"># 创建放置查询结果的输出表格，设置其表头</span></span><br><span class="line">    tb = PrettyTable()</span><br><span class="line">    tb.field_names = [<span class="string">&quot;ID&quot;</span>, <span class="string">&quot;电影名称&quot;</span>, <span class="string">&quot;种类&quot;</span>, <span class="string">&quot;评分&quot;</span>, <span class="string">&quot;评论人数&quot;</span>, <span class="string">&quot;优秀短评&quot;</span>]</span><br><span class="line"></span><br><span class="line">    conn = sqlite3.connect(<span class="string">&#x27;Spider.db&#x27;</span>)</span><br><span class="line">    c = conn.cursor()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;开始查询SQL数据库的Movie表：&quot;</span>)</span><br><span class="line">    cursor = c.execute(<span class="string">&quot;SELECT * FROM Movie&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> cursor:</span><br><span class="line">        tb.add_row([row[<span class="number">0</span>], row[<span class="number">1</span>], row[<span class="number">2</span>], row[<span class="number">3</span>], row[<span class="number">4</span>], row[<span class="number">5</span>]])</span><br><span class="line">    <span class="built_in">print</span>(tb)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;SQL数据库查询成功！&quot;</span>)</span><br><span class="line">    conn.commit()</span><br><span class="line">    conn.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;开始爬取数据！&quot;</span>)</span><br><span class="line">    save_all()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;数据爬取完毕！4秒后开始爬取图片&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;---------------------------&quot;</span>)</span><br><span class="line">    time.sleep(<span class="number">4</span>)</span><br><span class="line">    save_img()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;图片爬取完毕！请在img目录下查看对应ID图片&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;4秒后开始查询数据库Movie表&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;---------------------------&quot;</span>)</span><br><span class="line">    time.sleep(<span class="number">4</span>)</span><br><span class="line">    select_sql()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>这些代码陆陆续续写了十几个小时，因为之前上课一直摸鱼，老师讲的也很含糊，并没有想让我会的意思，于是基本上很多爬虫知识都是临时搜索和复制黏贴来的，不过有认真思考程序的运行思路与错误优化。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;这是一项Python爬虫课的期末作业。&lt;/p&gt;</summary>
    
    
    
    <category term="编程" scheme="https://laelwz.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Python" scheme="https://laelwz.github.io/categories/%E7%BC%96%E7%A8%8B/Python/"/>
    
    
    <category term="豆瓣" scheme="https://laelwz.github.io/tags/%E8%B1%86%E7%93%A3/"/>
    
    <category term="Python" scheme="https://laelwz.github.io/tags/Python/"/>
    
    <category term="爬虫" scheme="https://laelwz.github.io/tags/%E7%88%AC%E8%99%AB/"/>
    
    <category term="作业" scheme="https://laelwz.github.io/tags/%E4%BD%9C%E4%B8%9A/"/>
    
  </entry>
  
  <entry>
    <title>Matlab数学建模笔记</title>
    <link href="https://laelwz.github.io/posts/53370/"/>
    <id>https://laelwz.github.io/posts/53370/</id>
    <published>2022-06-04T03:08:56.000Z</published>
    <updated>2022-12-29T07:08:08.859Z</updated>
    
    <content type="html"><![CDATA[<p>记录使用Matlab解决数学建模问题中遇到的坑。</p><span id="more"></span><h4 id="数据拟合"><a href="#数据拟合" class="headerlink" title="数据拟合"></a>数据拟合</h4><p>[P,S,mu] = polyfit(x,y,n)</p><ul><li><p>给出在最小二乘一一下最佳拟合系数</p><ul><li><p>函数根据采样点x, y，产生一个n次多项式P及其在采样点的误差向量S</p></li><li><p>x, y为等长向量</p></li><li>P为长度为m+1的向量</li></ul></li></ul><h4 id="图片X轴过小"><a href="#图片X轴过小" class="headerlink" title="图片X轴过小"></a>图片X轴过小</h4><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">XX = [<span class="number">170</span> <span class="number">120</span> <span class="number">180</span> <span class="number">200</span> <span class="number">190</span> <span class="number">220</span>; <span class="number">120</span> <span class="number">100</span> <span class="number">110</span> <span class="number">180</span> <span class="number">170</span> <span class="number">180</span>; <span class="number">70</span> <span class="number">50</span> <span class="number">80</span> <span class="number">100</span> <span class="number">95</span> <span class="number">120</span>];</span><br><span class="line">[Data, TextData] = xlsread(<span class="string">&#x27;sj.xlsx&#x27;</span>);</span><br><span class="line">bar(Data,<span class="string">&#x27;stacked&#x27;</span>)</span><br><span class="line">set(gca,<span class="string">&#x27;xtick&#x27;</span>,<span class="number">1</span>:<span class="number">31</span>,<span class="string">&#x27;xticklabel&#x27;</span>,[<span class="string">&quot;北京&quot;</span>,<span class="string">&quot;天津&quot;</span>,<span class="string">&quot;河北&quot;</span>,<span class="string">&quot;山西&quot;</span>,<span class="string">&quot;内蒙古&quot;</span>,<span class="string">&quot;辽宁&quot;</span>,<span class="string">&quot;吉林&quot;</span>,<span class="string">&quot;黑龙江&quot;</span>,<span class="string">&quot;上海&quot;</span>,<span class="string">&quot;江苏&quot;</span>,<span class="string">&quot;浙江&quot;</span>,<span class="string">&quot;安徽&quot;</span>,<span class="string">&quot;福建&quot;</span>,<span class="string">&quot;江西&quot;</span>,<span class="string">&quot;山东&quot;</span>,<span class="string">&quot;河南&quot;</span>,<span class="string">&quot;湖北&quot;</span>,<span class="string">&quot;湖南&quot;</span>,<span class="string">&quot;广东&quot;</span>,<span class="string">&quot;广西&quot;</span>,<span class="string">&quot;海南&quot;</span>,<span class="string">&quot;重庆&quot;</span>,<span class="string">&quot;四川&quot;</span>,<span class="string">&quot;贵州&quot;</span>,<span class="string">&quot;云南&quot;</span>,<span class="string">&quot;西藏&quot;</span>,<span class="string">&quot;陕西&quot;</span>,<span class="string">&quot;甘肃&quot;</span>,<span class="string">&quot;青海&quot;</span>,<span class="string">&quot;宁夏&quot;</span>,<span class="string">&quot;新疆&quot;</span>])</span><br><span class="line"><span class="comment">% 使用set命令的&#x27;xtick&#x27;,1:31参数更改X轴显示</span></span><br><span class="line"><span class="built_in">legend</span>(<span class="string">&quot;食品&quot;</span>,<span class="string">&quot;衣着&quot;</span>,<span class="string">&quot;设备&quot;</span>,<span class="string">&quot;医疗&quot;</span>,<span class="string">&quot;交通&quot;</span>,<span class="string">&quot;教育&quot;</span>,<span class="string">&quot;居住&quot;</span>,<span class="string">&quot;杂项&quot;</span>)</span><br><span class="line">xlabel(<span class="string">&#x27;不同城市的八个方面&#x27;</span>);</span><br><span class="line">ylabel(<span class="string">&#x27;一年的消费情况&#x27;</span>);</span><br><span class="line">grid on</span><br><span class="line">title(<span class="string">&#x27;31个城市的不同消费情况&#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="高斯平滑处理"><a href="#高斯平滑处理" class="headerlink" title="高斯平滑处理"></a>高斯平滑处理</h4><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%高斯数据平滑处理，高斯滤波</span></span><br><span class="line">b = smoothdata(a,<span class="string">&quot;gaussian&quot;</span>,<span class="number">500</span>);</span><br><span class="line">x_gj1=b(:,<span class="number">1</span>);</span><br><span class="line">z_gj1=b(:,<span class="number">2</span>);</span><br><span class="line">x_a=a(:,<span class="number">1</span>);</span><br><span class="line">z_a=a(:,<span class="number">2</span>);</span><br><span class="line"><span class="built_in">plot</span>(x_gj1,z_gj1,x_a,z_a)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;记录使用Matlab解决数学建模问题中遇到的坑。&lt;/p&gt;</summary>
    
    
    
    <category term="笔记" scheme="https://laelwz.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="数学建模" scheme="https://laelwz.github.io/tags/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
    <category term="MATLAB" scheme="https://laelwz.github.io/tags/MATLAB/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://laelwz.github.io/posts/63534/"/>
    <id>https://laelwz.github.io/posts/63534/</id>
    <published>2022-06-03T08:03:59.000Z</published>
    <updated>2022-12-29T07:07:49.486Z</updated>
    
    <content type="html"><![CDATA[<p>Hello World ！</p><span id="more"></span><h3 id="Hello-World-！"><a href="#Hello-World-！" class="headerlink" title="Hello World ！"></a>Hello World ！</h3><p>Hello World ！</p><h4 id="Hello-World-！-1"><a href="#Hello-World-！-1" class="headerlink" title="Hello World ！"></a>Hello World ！</h4><p>Hello World ！</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Hello World ！&lt;/p&gt;</summary>
    
    
    
    <category term="日常" scheme="https://laelwz.github.io/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
    <category term="Hello World" scheme="https://laelwz.github.io/tags/Hello-World/"/>
    
  </entry>
  
</feed>
